<html style="" class=""><script type="text/javascript" async="" src="https://www.google-analytics.com/analytics.js"></script><script type="text/javascript" async="" src="https://www.googletagmanager.com/gtag/js?id=G-H4371RN7KE&amp;l=dataLayer&amp;cx=c"></script><script type="text/javascript" async="" src="https://www.googletagmanager.com/gtag/js?id=UA-216843160-1&amp;l=dataLayer&amp;cx=c"></script><script>window._wordtune_extension_installed = true;</script><head><title>
	WaterDistrictDemo akash...
</title>
	 <script type="text/javascript" src="https://www.bing.com/api/maps/mapcontrol?callback=GetMap" async="" defer=""></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <!--<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>-->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.4/raphael-min.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/justgage/1.2.9/justgage.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.0.0-rc.5/dist/html2canvas.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.js"></script>	
 <script type="text/javascript">
     var map;
     var listLayer;
     var premise_Data = "";
     var meter_list = "";
     var jsonData = "";
     var displayFields = [];
     var searchRes = [];
     var consumptionChart;
     var mytimer;
     var layer;
     var clicklayer = {
         "LayerName": "clickLayer",
         "ZIndex": 1999,
     }
     var searchlayer = {
         "LayerName": "searchLayer",
         "ZIndex": 1998,
     }
     var efficiencytierlayer = {
    	 "LayerName": "efficiencytierlayer",
         "ZIndex": 1995,
     }
     var hoverlayer = {
         "LayerName": "hoverLayer",
         "ZIndex": 2099,
     };

     var styleMeasure = {
        color: 'purple',
        fillColor: null,
        strokeColor: 'yellow',
        strokeThickness: 3,
     };
     var styleMeasureMarkup = {
        color: 'purple',
        fillColor: null,
        strokeColor: 'rgba(0, 255, 255, 1)',
        strokeThickness: 2,
     };

    // var clicklayer = "clickLayer";
     let enabledSettings = []
     var chartArr = [];
     var districtUsageChart = [];
     var range1UsageData = [];
     var range2UsageData = [];
     var dimEfficiencyTiers = [];
     var markupLayer=[];
     var lastZoomLevel = 0;
     var isMarkupEnabled = false;
     var isMarkupEdit = false;
     var mythreads = {};
     var mylayers = {};
     var landsacpeArea = ["LANDSCAPE_AREA_IMPREVIOUS","LANDSCAPE_AREA_POOLS","LANDSCAPE_AREA_POOLS_SLA","LANDSCAPE_AREA_IRRIGATED_GRASS","LANDSCAPE_AREA_IRRIGATED_CANOPY","LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_TURF","LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_CANOPY","LANDSCAPE_AREA_IRRIGABLE_NOT_UNDEVELOPED","LANDSCAPE_AREA_ARTIFICIAL_TURF"];
     var landscapeCodes = {"1A":"LANDSCAPE_AREA_IMPREVIOUS","2A":"LANDSCAPE_AREA_POOLS","2A_SLA":"LANDSCAPE_AREA_POOLS_SLA","3A":"LANDSCAPE_AREA_IRRIGATED_GRASS","3B":"LANDSCAPE_AREA_IRRIGATED_CANOPY","4A":"LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_TURF","4B":"LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_CANOPY","5A":"LANDSCAPE_AREA_IRRIGABLE_NOT_UNDEVELOPED","9A":"LANDSCAPE_AREA_ARTIFICIAL_TURF"};
     var currenrMarkupLayer = "demo77"; 
     //alert(currenrMarkupLayer);
     function getAllIndexes(arr, val) {
     	 //console.log(val)
         var indexes = [], i = -1;
         while ((i = arr.indexOf(val, i + 1)) != -1) {
             indexes.push(i);
         }
         return indexes;
     }
     function getAllIndexesMarkup(arr, val, searchval) {
        var layerItems = arr;
		var len = layerItems.length;
		console.log(map.layers.length);
		layerArr[clicklayer["LayerName"]]['layer'].clear();
     	for (const key in val) {
		  //const value = val[key];
		  console.log(key, val[key]);
		  if(key.includes(searchval)){
	          for(var i = 0; i < len; i++){
	          		if(val[key] === layerItems[i]){
	          			map.layers.removeAt(i)
	          		}
			  }
			  delete mylayers[key];
		  }
		}
		console.log(map.layers.length)
		//return indexes;
     }
     function openLayerModal() {
         id = $('#layerModal').modal('show');
         $('.modal-dialog').draggable({
             handle: ".modal-header"
         });
         $('.modal-content').resizable({
             minHeight: 300,
             minWidth: 300
         });
         $("#layerModal").css({ 'z-index': 9999 });
         $("#layerModal").removeClass("modal");

     }

     function ChangeBackgroundColor(premId, rowid) {
         //console.log(premId);
         document.getElementById(rowid).style.backgroundColor = "#6699ff4f";
         jQuery.each(searchRes, function (i, val) {
             var premise = val.premise;
             if(premise === undefined) premise = val.premise;
             if (premise.premID === premId) {
                 var consumptionVal = [];
                 var allocationVal = [];

                 layerArr[hoverlayer["LayerName"]]['layer'].clear();
                 var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom, { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(255, 255, 3)", strokeThickness: 2 } });
                 layerArr[hoverlayer["LayerName"]]['layer'].add(polygonD);
                        
                    }
                });
            }
     function RestoreBackgroundColor(premId, rowid) {
         //console.log(rowid);
         if (Number(rowid.replace("tr_", "")) % 2 == 0)
             document.getElementById(rowid).style.backgroundColor = "#ffffff4f";
         else
             document.getElementById(rowid).style.backgroundColor = "#dddddd4f";

         layerArr[hoverlayer["LayerName"]]['layer'].clear();

     }




     function ReadConfigJsonData() {
         var arr = [];
         var head = [];
         var ii_data = [];
         var ini_data = [];
         var ni_data = [];
        

         console.log("ReadConfigJsonData() called");
         var searchDropdown = [];
         searchDropdown.push('<option value="" selected="true"></option>');
         fetch(`./View/ConfigurationFile.json`, {
             headers: {
                 'Content-Type': 'application/json',
                 'Accept': 'application/json'
             }
         })
             .then((response) => response.json())
             .then((json) => {
                 // console.log(json.ListModule);
                 configJson = json;

                 ii_data.push('<div class="panel col-md-12">');
                 ini_data.push('<div class="panel col-md-12">');
                 ni_data.push('<div class="panel col-md-12">');
                 jQuery.each(configJson.PremiseModule, function (i, detail) {
                 	var detailUnit=detail.Unit;
                    if(detailUnit=="CCF") {detailUnit="";}
                     if (detail.DispInDetail === true && detail.LayerName === "Premise") {
                         arr.push('<div class="row"  id="' + detail.htmlId + '-row" style="padding-top:5px;padding-bottom:5px">');
                         arr.push('<div class="col-md-4">');
                         arr.push(detail.DisplayText);
                         arr.push('</div>');
                         arr.push('<div class="col-md-8">');
                         arr.push('<label id="' + detail.htmlId + '">');
                         arr.push('</label><label id="' + detail.htmlId + '_Unit">&nbsp;' + detailUnit + '</label></div></div>');
                     }
                     if (detail.DisplayInList === true) {
                         head.push('<th class="th-sm">');
                         head.push(detail.DisplayText);
                         head.push('</th>');
                     }
                     if (detail.DisplayInSearch === true) {
                         searchDropdown.push('<option value="' + detail.DisplayText + '">');
                         searchDropdown.push(detail.DisplayText);
                         searchDropdown.push('</option>');
                     }
                     if (detail.DispInDetail === true && detail.LayerName === "LandscapeII") {
                         ii_data.push('<div id="' + detail.htmlId + '-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6">');
                         ii_data.push(detail.DisplayText);
                         ii_data.push('</div><div class="col-md-5">');
                         ii_data.push('<label id="' + detail.htmlId + '">');
                         ii_data.push('</label><label>&nbsp;' + detail.Unit + '</label></div></div>');
                     }
                     if (detail.DispInDetail === true && detail.LayerName === "LandscapeINI") {
                         ini_data.push('<div  id="' + detail.htmlId + '-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6">');
                         ini_data.push(detail.DisplayText);
                         ini_data.push('</div><div class="col-md-5">');
                         ini_data.push('<label id="' + detail.htmlId + '">');
                         ini_data.push('</label><label>&nbsp;' + detail.Unit + '</label></div></div>');
                     }
                     if (detail.DispInDetail === true && detail.LayerName === "LandscapeNI") {
                         ni_data.push('<div  id="' + detail.htmlId + '-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6">');
                         ni_data.push(detail.DisplayText);
                         ni_data.push('</div><div class="col-md-5">');
                         ni_data.push('<label id="' + detail.htmlId + '">');
                         ni_data.push('</label><label>&nbsp;' + detail.Unit + '</label></div></div>');
                     }
                 });
                 ii_data.push('</div>');
                 ini_data.push('</div>');
                 ni_data.push('</div>');
                 const detailhead = document.getElementById("detailHeader");
                 detailhead.insertAdjacentHTML("afterend", arr.toString().replaceAll(",", " ").replaceAll(">,<>", "><"));
                 //document.getElementById("listHeader").innerHTML = head.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
                 document.getElementById("queryName").innerHTML = searchDropdown.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
                 const contentiibtn = document.getElementById("content-ii-btn");
                 contentiibtn.insertAdjacentHTML("afterend", ii_data.toString().replaceAll(",", " "));
                 const contentinibtn = document.getElementById("content-ini-btn");
                 contentinibtn.insertAdjacentHTML("afterend", ini_data.toString().replaceAll(",", " "));
                 const contentnibtn = document.getElementById("content-ni-btn");
                 contentnibtn.insertAdjacentHTML("afterend", ni_data.toString().replaceAll(",", " "));
             });
     }

     function loadMapData() {
         //map.layers.clear();
         console.log(map.getZoom());
         Microsoft.Maps.loadModule("Microsoft.Maps.SpatialMath", function () {
             enabledSettings.forEach(function (selectLayer) {
                 showTileMapsNew(selectLayer, enabledSettings.indexOf(selectLayer) + 1);
             });
         });
     }

     function createBlankLayer(layerName) {
         layerArr[layerName] = {};
         layerArr[layerName]['layer'] = new Microsoft.Maps.Layer();
         layerArr[layerName]['layer'].setZIndex(1999);
         mylayers[layerName] = layerArr[layerName]['layer'];
         map.layers.insert(layerArr[layerName]['layer']);
     }
     function GetMap() {
         map = new Microsoft.Maps.Map('#myMap', {
             credentials: 'Aj36mkzedjgfs_6W4PE2LnHzMgkZkjOzSBAKLFYvXbQUncraFkqfT9jmGE-p4sg-',// c153eae2af2841c8a5ddada9ffb42a49/ WMSLatLon
             zoom: 13,
            // minZoom: 13,
             showMapTypeSelector: false,
             showLocateMeButton: false,
             enableCORS: true
         });
         map.setView({
             mapTypeId: Microsoft.Maps.MapTypeId.aerial,
             center: new Microsoft.Maps.Location(34.05307000392542, -117.6910560851873),
         });

          //for quick measure
         Microsoft.Maps.Events.addHandler(map, 'dblclick', function (e) {
         	Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText',
           		 function () {
                   var wkt = Microsoft.Maps.WellKnownText.write(currentShape);
                   console.log(wkt);
                   //console.log(currentShape.getLocations());
                   var type="";
                   if(currentShape instanceof Microsoft.Maps.Polygon)type = "Polygon";
                   else type = "Polyline"
                   var jsonData = '{"the_geom":"'+wkt+'", "label":"","notes":"","type":"'+type+'"}';
                   console.log(jsonData);
                   if(isMarkupEnabled === true){
                   		layerArr[currenrMarkupLayer]['layer'].add(currentShape);
                   		  $.ajax({
				              url: '/addToMarkup?markupFileName=' + currenrMarkupLayer,
				              type: "POST",
				              data: jsonData,
				              success: function(msg) {
				                console.log("Markup Created Successfully");
				              },
				              error: function(xhr, status, error) {
				                console.error(error);
				              }
			            });
                   }
                   else{
                   		map.entities.push(currentShape)
                   		}
                   markupLayer.push(jsonData);
                 
            });
            if (currentShape) {
                tools.finish(function (s) {
                    map.entities.push(s);
                    if ((s instanceof Microsoft.Maps.Polygon) || (s instanceof Microsoft.Maps.Polyline)) {
                        addLabelToPolygon(s);
                    }
                });
                currentShape = null;
                $("#myMap").css("cursor","pointer");
            }
            map.setOptions({ disablePanning: false });
        });
            
        Microsoft.Maps.loadModule(['Microsoft.Maps.DrawingTools', 'Microsoft.Maps.SpatialMath','Microsoft.Maps.DrawingTools'], function () {
            tools = new Microsoft.Maps.DrawingTools(map);
            //document.getElementById('myMap').onkeypress = function (e) {
               // if (e.charCode === 27) {
                   // tools.finish(shapeDrawn);
                   // console.log(shapeDrawn);
                   // currentShape = null;
               // }/
            //};
        });


         lastZoomLevel = map.getZoom();
         createBlankLayer(searchlayer["LayerName"]);
         createBlankLayer(clicklayer["LayerName"]);
         createBlankLayer(hoverlayer["LayerName"]);
         createBlankLayer(efficiencytierlayer["LayerName"]);
         Microsoft.Maps.Events.addHandler(map, 'click', function (e) {
             if (enabledSettings.length == 1 && enabledSettings.includes('WD_Boundaries'))
                 return;

             $.ajax({
                 url: "GetPremiseInfoLatlon?lat=" + e.location.latitude + "&lon=" + e.location.longitude,
                 success: function (result) {
                     if (result.localeCompare("\"No premise present\"") != 0 && result.toLowerCase().includes("Premise".toLowerCase())) {
                         jsonData = JSON.parse(JSON.parse(result));
                         console.log(jsonData);
                         const graphAllocation =jsonData.allocation;
                         const keys = Object.keys(graphAllocation);
                         const lastKey = keys[keys.length - 1];
                         totalAllocation2=jsonData.premise.Allocation.toString().replace("\"","");
                         totalConsumption2=jsonData.premise.Consumption.toString().replace("\"","");
                         floatValueAllocation = parseFloat(totalAllocation2);
                         floatValueConsumption = parseFloat(totalConsumption2);
                         datasets1[0].data = [floatValueAllocation, floatValueConsumption];
                         datasets2[0].data = [floatValueAllocation, floatValueConsumption];
                         gauge1_1.refresh((floatValueConsumption/floatValueAllocation)*100);
                         predictionGauge1_1.refresh((floatValueConsumption/floatValueAllocation)*100);

                         cookieChartVarPrediction.update();
                         cookieChartVar.update();
                         document.getElementById("LACII_I").value=parseFloat(jsonData.premise.I.toString().replace("\"",""));
                         document.getElementById("LACII_ISLA").value=parseFloat(jsonData.premise.I_SLA.toString().replace("\"",""));
                
                         var jsonData2 = JSON.parse(etoValuesData);
                         for(var j = 0; j < jsonData2.length; j++) {
                            if(jsonData.premise.premID==jsonData2[j].premID){
                             document.getElementById("ETO").value=jsonData2[j].ETOAverage[10].Nov20;
                            }   
                         }
                
                
                         var jsonData22 = JSON.parse(peffValuesData);
                         for(var j = 0; j < jsonData22.length; j++) {
                            if(jsonData.premise.premID==jsonData2[j].premID){
                             document.getElementById("PEFF").value=jsonData22[j].PEFFAverage[10].Nov20;
                            }   
                         }
                
                    
                         calculateValue();
                         layerArr[clicklayer["LayerName"]]['layer'].clear();
                         premise_Data = jsonData.premise;
                         var polygonD = Microsoft.Maps.WellKnownText.read(jsonData.premise.the_geom, { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(255, 255, 3)", strokeThickness: 2 } });
                         layerArr[clicklayer["LayerName"]]['layer'].add(polygonD);
                         if (premise_Data.premID in searchAssocitative) {
                             var dataTable = document.getElementById("dtBasicExample");
                             var childrens = dataTable.getElementsByTagName('tr');
                             var rowid;
                             for (var i = 0; i < childrens.length; i++) {
                                 rowid = childrens[i].id;
                                 //console.log(rowid);
                                 if (rowid != "listHeader")
                                     if (Number(rowid.replace("tr_", "")) % 2 == 0)
                                         document.getElementById(rowid).style.backgroundColor = "#ffffff4f";
                                     else
                                         document.getElementById(rowid).style.backgroundColor = "#dddddd4f";
                             }
                             document.getElementById(searchAssocitative[premise_Data.premID].rowidData).style.backgroundColor = "#6699ff4f";
                         }
                         console.log(JSON.stringify(jsonData));
                         displayPremiseDetailsDataInModal(JSON.stringify(jsonData));
                         
                         var acc = document.getElementsByClassName("accordion");
                         var i;

                         for (i = 0; i < acc.length; i++) {
                             acc[i].onclick = function () {
                                 this.classList.toggle("active");
                                 this.nextElementSibling.classList.toggle("show");
                             }
                         }
                         document.getElementById("customLayer").style.display = "none";    
                         document.getElementById("detailsModal").style.display = "block";                     
                         $('#myUsageModalLabel').html(premise_Data.premID);
                         openDetailsModal();
                     }
                     else if(result!=""  && result.localeCompare("\"No premise present\"") != 0 && !result.toLowerCase().includes("Premise".toLowerCase())) {
                                jsonData = JSON.parse(result);
                                layerArr[clicklayer["LayerName"]]['layer'].clear();
                                premise_Data = jsonData.premise;
                                var selectedLayer = jsonData.hashKey;
                                //console.log(Object.keys(mylayers).includes(selecedLayer));
                                console.log(Object.keys(mylayers).includes(selectedLayer));
                                if(Object.keys(mylayers).includes(selectedLayer)){
		                                var polygonD = Microsoft.Maps.WellKnownText.read(jsonData.the_geom, { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(144, 252, 3)", strokeThickness: 2 } });
		                                console.log(polygonD);
		                                layerArr[clicklayer["LayerName"]]['layer'].add(polygonD);
		                                document.getElementById("customLayer").style.display = "block";    
		                                document.getElementById("detailsModal").style.display = "none";                          
		                                layerArr[clicklayer["LayerName"]]['layer'].setZIndex(2000);
		                                //console.log(getMethods(layerArr[clicklayer]['layer']));
		                                //console.log(layerArr[clicklayer]['layer'].getZIndex());

		                                //layerArr[clicklayer]['layer'].getZIndex(true);

		                                //Displaying premise details
		                                //displayPremiseDetailsDataInModal(JSON.stringify(jsonData));
		                                  displayCustomLayerData(JSON.stringify(jsonData));
		                                  openDetailsModal();
                                  }
                            }
                 }, error: function (err) {
                     console.log(err);
                     setTimeout(document.getElementById('loaderWrapper').classList.add("d-none"), 2000);
                 }
             });
         });

         Microsoft.Maps.Events.addHandler(map, 'viewchangeend', loadMapData);
         layer = new Microsoft.Maps.Layer();
         listLayer = new Microsoft.Maps.Layer();
         ReadConfigJsonData();
         displayFields = [];
         checkNewConfiguration();
         $('#Current_Percent_Allocation').attr('checked', true);
         enabledSettings.push('Current_Percent_Allocation');
         showTileMapsNew("Current_Percent_Allocation", 1);
         $('#WD_Boundaries').attr('checked', true);
         showTileMapsNew("WD_Boundaries", 2);
         enabledSettings.push('WD_Boundaries');
         openLayerModal();
         loadPercentUsageData(); 
     }
   
      function displayCustomLayerData(json){
            	var data = JSON.parse(json);
 				if(!json.includes("type")){
	            	jQuery.each(data, function(ind, detail){
	            		if(ind!=="the_geom" && detail!=="0.0"){
		            		console.log(detail+":"+ind);
		            		console.log(document.getElementById(ind));
		            		document.getElementById(ind+"_row").style.display = "block";
		            		document.getElementById(ind).innerHTML = detail;
	            		}else if(ind!=="the_geom" && detail==="0.0"){
	            			document.getElementById(ind+"_row").style.display = "none";
	            		}
	            	});
            	}else{
            		createMarkupDetailsDisplay(json);
            		displayMarkupLayerData(json);
            	}
            }

     function showTileMapsNew(layerType, counter) {
         // document.getElementById('loaderWrapper').classList.remove("d-none");
         if (!mythreads[layerType]) {
             let allLayersData = getAllIndexes(map.layers, mylayers[layerType]);
             for (let i = 0; i < allLayersData.length; i++) {
                 map.layers.removeAt(allLayersData[i]);
             }
             //   console.log(getAllIndexes(map.layers, mylayers[checkbox.value]));
             clearTimeout(mythreads[layerType]);
         }
         return new Promise(function (resolve, reject) {
             mythreads[layerType] = setTimeout(showMapTileBounds_actual(layerType, counter), 100);
             resolve();
         });
     }

     var layerArr = {};
     function getDataToPlotOnMap(layerType, counter) {
     	 setHeight();
         //document.getElementById('loaderWrapper').classList.remove("d-none");
         var url = "GetTile?Layer=" + layerType + "&mapbounds=" + map.getBounds().bounds;
         if (layerType === "ALL_LAYER") {
             console.log($('#ALL_LAYER').data().bind);
             url = url + "&LayerData=" + $('#ALL_LAYER').data().bind;
         }
         if(layerType.includes("_custom"))
                	 getCustomLayerDisplay(layerType);
         
         $.ajax({
             url: url,
             async: false,
             success: function (result) {
                 var layerTypeData = layerType
                 //console.log(layerTypeData);
                 if (result.length != 0) {
                     var jsonData = result;
                     for (let i = 0; i < jsonData.length; i++) {
                         let obj = jsonData[i];
                          if(layerTypeData.includes("_markup")){
                         	//console.log(mylayers[obj.hashKey]);
                         	if(mylayers[obj.hashKey]===undefined)
								createBlankLayer(obj.hashKey)
                         	Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
                             	plotData2(obj, layerTypeData, layerArr[obj.hashKey]['layer']);
                         	});
                         	 map.layers.insert(layerArr[obj.hashKey]['layer']);
                 			 mylayers[layerTypeData] = layerArr[obj.hashKey]['layer'];
                         }
                         else{
		                     Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
		                             plotData2(obj, layerTypeData, layerArr[layerTypeData]['layer']);
		                     });
		                     map.layers.insert(layerArr[layerTypeData]['layer']);
                 			 mylayers[layerTypeData] = layerArr[layerTypeData]['layer'];
	                     }
                     }
                 } else {
                     document.getElementById('loaderWrapper').classList.add("d-none");
                 }
                
                 if (enabledSettings.length == 0 || enabledSettings.length == counter) {
                     //setTimeout(console.log("Was here"), 4000);
                     setTimeout(completeAlert, 500);
                 }
             }, error: function (err) {
                 console.log(err);
                 setTimeout(completeAlert, 500);
             }
         });
     }

     function displayPremiseDetailsDataInModal(jsonData) {
         console.log(JSON.parse(jsonData));
         var arr = [];
         var values = [];
         var Allocationvalues = [];
         var jsonData1 = JSON.parse(jsonData);
         //console.log("=========" + JSON.String(JSON.parse(jsonData).meters));
         var premise = jsonData1.premise;

         var meterlist = jsonData1.meters;//meters

         //Setting Data for Static Fields
         document.getElementById("totalMeters").innerHTML = meterlist.length;
         document.getElementById("premisePrecentAllocation").innerHTML = parseFloat(parseFloat(premise.Consumption).toFixed(2) / parseFloat(premise.Allocation).toFixed(2) * 100).toFixed(2) + " %";
         
       
        // document.getElementById("premiseConsumption").innerHTML = parseFloat(premise_Data.Consumption).toFixed(2);
         //Displaying Premise Details
         jQuery.each(configJson.PremiseModule, function (ind, detail) {
             Object.keys(premise).map(function (k) {
                 //console.log(detail.DispInDetail+" ********* " + detail.ColName);
                 if (detail.DispInDetail === true && detail.ColName === k) {
                     console.log(detail.ColName + " : " + k + " : " + premise[k])
                     var rowd = detail.htmlId + "-row";
                     //console.log("rowid: "+rowd+ );
                     var sectionId = getSecId(rowd);
                     //console.log("rowid: " + rowd + " sectionId:" + sectionId);
                     if (detail.RoundNumbersToDigits !== "") {
                         console.log("rowid: " + rowd + " sectionId:" + sectionId);
                         if (Number.isNaN(parseFloat(premise[k])) === true || premise[k] === "0.0") {
                             document.getElementById(rowd).style.display = "none";
                             if (sectionId !== "") {
                                 document.getElementById(sectionId).style.display = "none";
                             }
                         } else {
                             //console.log("rowid: " + rowd + " sectionId:" + sectionId);
                             document.getElementById(rowd).style.display = "block";
                             document.getElementById(detail.htmlId).innerHTML = formatNumber(parseFloat(premise[k]).toFixed(2));
                             if (sectionId !== "") {
                                 document.getElementById(sectionId).style.display = "block";
                             }
                         }
                     }
                     else {
                         document.getElementById(detail.htmlId).innerHTML = premise[k];
                     }
                 }
             });
         });
         document.getElementById("premiseConsumption").innerHTML = parseFloat(premise.Consumption).toFixed(2);
         //Displaying Meterlist Data 
         for (let i = 0; i < meterlist.length; i++) {
             var parsedMeterJson = meterlist[i];
             if (parsedMeterJson == undefined) continue;
             arr.push('<button class="accordion">Meter ');
             arr.push(i + 1);
             arr.push('</button>');
             arr.push('<div class="panel col-md-12">');
             jQuery.each(configJson.PremiseModule, function (ind, detail) {
                 if (detail.DispInDetail === true && detail.LayerName === "Meter") {
                     if (Object.keys(parsedMeterJson).includes(detail.ColName)) {
                         arr.push('<div class="row" id="' + detail.htmlId + '-row" style="padding-top:5px">');
                         arr.push('<div class="col-md-4">');
                         arr.push(detail.DisplayText);
                         arr.push('</div>');
                         arr.push('<div class="col-md-8">');
                         arr.push('<label id="' + detail.htmlId + '">');
                         arr.push(parsedMeterJson[detail.ColName].replaceAll(":", ","));
                         arr.push('</label></div></div>');
                     }
                 }
             });
             arr.push('</div>');
         }
         document.getElementById("content").innerHTML = arr.toString().replaceAll(",", " ");


         var unit=document.getElementById("unit2").value;

         Object.keys(jsonData1.consumption).map(function (k) {
         	 var resultUnitCal = unitCalculation2(unit, parseFloat(jsonData1.consumption[k]));
             values.push(resultUnitCal.cal1);   
         });
         Object.keys(jsonData1.allocation).map(function (k) {
        	 var resultUnitCal = unitCalculation2(unit, parseFloat(jsonData1.allocation[k]));
        	 console.log(resultUnitCal.cal1);
             Allocationvalues.push(resultUnitCal.cal1);
         });

         // Chart.defaults.global.defaultFontColor = 'grey';
         //   Chart.defaults.global.defaultFontSize = 12;
         var data = {
             labels: Object.keys(jsonData1.consumption),
             datasets: [
             {
                 label: "Allocation Data",
                 fill: true,
                 lineTension: 0.1,
                 backgroundColor: "rgba(47, 105, 153,1)",
                 borderColor: "green", // The main line color
                 borderCapStyle: 'square',
                 pointBorderColor: "white",
                 pointBackgroundColor: "green",
                 pointBorderWidth: 1,
                 pointHoverRadius: 8,
                 pointHoverBackgroundColor: "yellow",
                 pointHoverBorderColor: "green",
                 pointHoverBorderWidth: 2,
                 pointRadius: 4,
                 pointHitRadius: 10,
                 data: Allocationvalues,
                 spanGaps: true,
             },
             {
                 label: "Consumption Data",
                 fill: true,
                 lineTension: 0.1,
                 backgroundColor: "rgba(137, 168, 99,1)",
                 borderColor: "green", // The main line color
                 borderCapStyle: 'square',
                 pointBorderColor: "white",
                 pointBackgroundColor: "green",
                 pointBorderWidth: 1,
                 pointHoverRadius: 8,
                 pointHoverBackgroundColor: "yellow",
                 pointHoverBorderColor: "green",
                 pointHoverBorderWidth: 2,
                 pointRadius: 4,
                 pointHitRadius: 10,
                 data: values,
                 spanGaps: true,
             }]
         };
         consumptionChart.data.labels = data.labels;
         consumptionChart.update();
         consumptionChart.data.datasets = data.datasets;
         consumptionChart.update();
     }



     function showMapTileBounds_actual(layerType, counter) {

         if (!(layerType in layerArr)) {
             document.getElementById('loaderWrapper').classList.remove("d-none");
             layerArr[layerType] = {};
             layerArr[layerType]['layer'] = new Microsoft.Maps.Layer();
             layerArr[layerType]['zoom'] = map.getZoom();
             //new Promise(resolve => getDataToPlotOnMap(layerType, counter));
             getDataToPlotOnMap(layerType, counter);
         } else if (layerArr[layerType]['zoom'] < map.getZoom()) {
             //console.log("Using Existing layer " + map.getZoom() + " layerType " + layerType);
             map.layers.insert(layerArr[layerType]['layer']);
             mylayers[layerType] = layerArr[layerType]['layer'];
         } else {
             document.getElementById('loaderWrapper').classList.remove("d-none");
             //console.log(getMethods(layerArr[layerType]['layer']));
             layerArr[layerType]['layer'].clear();
             layerArr[layerType]['zoom'] = map.getZoom();
             getDataToPlotOnMap(layerType, counter);

             //new Promise(resolve => getDataToPlotOnMap(layerType, counter));
         }
     }
     function completeAlert() {
         //alert('Timer completed');
         document.getElementById('loaderWrapper').classList.add("d-none");
         return true;
     }


     function plotData2(obj, layerType, layer) {
         let data = obj.the_geom == undefined ? obj.Polygon : obj.the_geom;
         let premId = obj.premID == undefined ? obj.PremId : obj.premID;
         if (layerType == "Meter_Location") {
             let meteres = obj.meters;
             for (let i = 0; i < meteres.length; i++) {
                 var pin = Microsoft.Maps.WellKnownText.read(meteres[i].the_geom,
                     { polygonOptions: { strokeColor: 1, strokeThickness: 10 } });
                 layer.add(pin);
             }
         } 
         else if(layerType.includes("_custom")){
                	 var polygon = Microsoft.Maps.WellKnownText.read(data, { polygonOptions: { fillColor: "#aaa", strokeColor: "#fff", strokeThickness: 2 } });
                    layer.add(polygon);
                    layer.setZIndex(1000);
        }
        else if(layerType.includes("_markup")){
        			//console.log(layerType);

        			if(data.includes("POLY") || data.includes("LINE")){
	                	var polygon = Microsoft.Maps.WellKnownText.read(data, { polygonOptions: { fillColor: obj.FillColor, strokeColor: obj.StrokeColor, strokeThickness: 1 } });
	                	//console.log(polygon)
	                    layer.add(polygon);
	                   // getPushpinInfo(polygon,obj);
	                    addLabelToPolygon(polygon);
	                    layer.setZIndex(1000);
                    } else {
                    	var svg="";
	                    	var point = Microsoft.Maps.WellKnownText.read(data);
	                    	//console.log("point: "+JSON.stringify(point));
	                    	//console.log(point.geometry.x);
	                    	//var point = new Microsoft.Maps.Point(point.geometry.x, point.geometry.y);
							//var loc = e.target.tryPixelToLocation(point);
							var location = new Microsoft.Maps.Location(point.geometry.y, point.geometry.x);
						    //console.log(new Microsoft.Maps.Location(loc.latitude, loc.longitude));
						    //console.log(obj.type+":"+obj.fontSize+" : "+obj.FillColor)
						    if(obj.type === "Triangle")
							svg = getDynamicTriangleSVG(obj.fontSize,obj.FillColor,obj.FillColor);
							else if(obj.type === "Star")
								svg = getDynamicStar(obj.fontSize,obj.FillColor,obj.FillColor);
							else if(obj.type ==="Square")
								svg = getDynamicSquare(obj.fontSize,obj.FillColor,obj.FillColor);
							else if(obj.type ==="Cross")
								svg = getDynamicCross(obj.fontSize,obj.FillColor,obj.FillColor);
							else if(obj.type==="TextLabel")
								svg = createFontPushpin(obj.label, "Arial",obj.fontSize,obj.FillColor);
							console.log(svg);
							var svgHeight = svg.match('height=\"(\\d+)\"')[1];
							var svgWidth = svg.match('width=\"(\\d+)\"')[1];
							var pin1 =  new Microsoft.Maps.Pushpin(location, {
									 icon: svg,
									 anchor: new Microsoft.Maps.Point(svgWidth/2, svgHeight/2)
							});
							//Microsoft.Maps.Events.addHandler(pin1, 'click', function () {getPushpinInfo(pin1,obj);});
                    	layer.add(pin1);
                    	layer.setZIndex(1000);
                    	getPushpinInfo(pin1,obj);

                    }
         }
         else {
             var polygon = Microsoft.Maps.WellKnownText.read(data, { polygonOptions: { fillColor: obj.FillColor, strokeColor: obj.StrokeColor, strokeThickness: parseInt(obj.StrokeThickness) } });
             layer.add(polygon);
             layer.setZIndex(1000);
         }
     }

    

     function changeMapTypeIdToAerial() {
         map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.aerial, labelOverlay: Microsoft.Maps.LabelOverlay.hidden }); // this line works
     }
     function changeMapTypeIdToAerialWithLabels() {
         map.setView({
             mapTypeId: Microsoft.Maps.MapTypeId.aerial,
             labelOverlay: Microsoft.Maps.LabelOverlay.visible
         }); // this line works
     }

     function changeMapTypeIdToRoad() {
         map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.road }); // this line works
     }
     function sleep(ms) {

         return new Promise(resolve => setTimeout(resolve, ms));
     }
     function openModal() {
     	if(jsonData!=="")
     		displayPremiseDetailsDataInModal(JSON.stringify(jsonData));       
         unitConverstionDeatils2(document.getElementById("unit2"));      
         $('#myUsageModal').modal({
             backdrop: false,
             show: true
         });
     }
     function closeMyUsageModal(){
     	$('#myUsageModal').modal('hide');
                $('#myUsageModal').addClass('modal');
     }
     function formatNumber(val) {
         const options = {
             minimumFractionDigits: 2,
             maximumFractionDigits: 2
         };
         var num = Number(val).toLocaleString('en', options)
         return num;
     }



     function loadPercentUsageData() {
         $.ajax({
             type: "GET",
             url: '/getPrecentUsageData',
             success: function (msg) {
                 //console.log(msg);
                 msg = JSON.parse(msg);
                 //console.log(msg.precentUsageData);
                 dimEfficiencyTiers = [];
                 var values = ["Above 200%", "151% to 200%", "101% to 150%", "51% to 100%", "Below 50%"];
                 // var values=["200", "151", "101", "51", "50"];
                 var colors = ['rgb(174,77,77)', 'rgb(255,0,0)', 'rgb(255,165,0)', 'rgb(154,205,50)', 'rgb(0,100,0)'];
                 dimEfficiencyTiers.push(["Efficiency Tier", "Usage Percentage", { role: 'style' }]);
                 for (let i = 0; i < msg.precentUsageData.length; i++) {
                     //values.push(formatNumber(parseFloat(msg.precentUsageData[i]).toFixed(2)));
                     //console.log(formatNumber(parseFloat(msg.precentUsageData[i]).toFixed(2)));
                     //colors: ['rgb(174,77,77)','rgb(255,0,0)','rgb(255,165,0)','rgb(154,205,50)','rgb(0,100,0)']				
                     if (document.getElementById("unit").value === "CCF") {
                         dimEfficiencyTiers.push([values[i], parseFloat(msg.precentUsageData[i]), colors[i]]);
                     }
                     else if (document.getElementById("unit").value === "Gallons") {
                         dimEfficiencyTiers.push([values[i], parseFloat(msg.precentUsageData[i] * 7.48), colors[i]]);
                     }
                     else {
                         dimEfficiencyTiers.push([values[i], parseFloat(msg.precentUsageData[i] * 0.0023), colors[i]]);
                     }
                 }
                 if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                     console.log("google chart is loaded");
                     // google.charts.setOnLoadCallback(drawChart);
                     google.charts.setOnLoadCallback(drawServiceAreaChart);
                 }
                 google.charts.setOnLoadCallback(drawServiceAreaChart);
             },
             error: function (e) {
                 console.log(e)
             }
         });
     }
 </script>
   
 <style>
 #chartView:hover {text-decoration: underline;cursor:pointer;}
body {font-family: Arial, Helvetica, sans-serif;padding-right:0px!important;}
.navbar-nav>li>a {padding-top: 5px;padding-bottom: 5px;}
.nav>li>a {position: relative;display: block;padding: 5px 10px;}            
#myModal {position: relative;}
.modal-dialog {position: absolute;width: 400px;margin: 0;padding: 0px;}
.modal-body{overflow-y: auto;}   
.navbar {margin-bottom: 5px!important;border-radius: 0;}
footer {background-color: #f2f2f2;padding: 25px;}
.container-fluid {padding-right:0px;padding-left:0px;margin-right: auto;margin-left: auto;}
.navbar {min-height: 80px;margin-bottom: 20px;border: 1px solid transparent;}
.list-group {padding-left: 0;margin-bottom:0px;}           
.list-group-item {position: relative;display: block;padding: 10px 10px;background-color: #fff;border: 1px solid #fff;}    
.popover-content {padding: 8px 0px;}
#content > div.panel {padding:0px 18px;background-color: white;max-height: 0;min-height: 0;overflow: hidden;transition: 0.6s ease-in-out;opacity: 0;margin-bottom:0px;}
#content > div.panel.show {opacity: 1;max-height: 500px;}     
#content-ii > div.panel {padding:0px 18px;background-color: white;max-height: 0;min-height: 0;overflow: hidden;transition: 0.6s ease-in-out;opacity: 0;margin-bottom:0px;}
#content-ii > div.panel.show {opacity: 1;max-height: 500px;}  
#content-ini > div.panel {padding:0px 18px;background-color: white;max-height: 0;min-height: 0;overflow: hidden;transition: 0.6s ease-in-out;opacity: 0;margin-bottom:0px;}
#content-ini > div.panel.show {opacity: 1;max-height: 500px;} 
#content-ni > div.panel {padding:0px 18px;background-color: white;max-height: 0;min-height: 0;overflow: hidden;transition: 0.6s ease-in-out;opacity: 0;margin-bottom:0px;}
#content-ni > div.panel.show {opacity: 1;max-height: 500px;}           
button.accordion {background-color: #eee;color: #444;cursor: pointer;padding: 10px;width: 100%;border: none;text-align: left;outline: none;font-size: 14px;font-weight:600;transition: 0.4s;}
button.accordion.active, button.accordion:hover {background-color: #ddd;}
button.accordion:after {content: '\02795';font-size: 13px;color: #777;float: right;margin-left: 5px;}
button.accordion.active:after {content: "\2796";}
.panel-wrap {position: fixed;top: 0;bottom: 0;left: 0;width: 30em;display:none;
 //transform: translateX(500%);
 //transition: .1s ease-out;
}
.panel1 {position: absolute;bottom: 0;left: 0;right: 0;color: #000;overflow: auto;}
.panel-wrap-new{
    //   transform: translateX(0%)!important;   
    display:block;
    top: 60px;
 }        
.panel-wrap-list {position: fixed;bottom: 0;background: #fff;z-index: 0;width:100%;max-height:300px}
.panel-list {bottom: 0;color: #000;overflow: auto;background:#fff;padding: 8px;max-height:300px;width:100%;left:0;overflow: hidden;}
table.dataTable thead .sorting:after,
table.dataTable thead .sorting:before,
table.dataTable thead .sorting_asc:after,
table.dataTable thead .sorting_asc:before,
table.dataTable thead .sorting_asc_disabled:after,
table.dataTable thead .sorting_asc_disabled:before,
table.dataTable thead .sorting_desc:after,
table.dataTable thead .sorting_desc:before,
table.dataTable thead .sorting_desc_disabled:after,
table.dataTable thead .sorting_desc_disabled:before {bottom: .5em;}
table.dataTable td {font-size: 14px;}
.list-content-button{border-bottom-left-radius:0px;border-bottom-right-radius:0px;}
.panel-heading {padding: 5px 5px;text-decoration:null;}
.panel label, .panel-title{margin-bottom:0px;font-size:12px;}
.panel{margin-bottom: 0px;}
.float-right{float: right;padding-left: 5px;}
.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody {max-height:120px!important;height:120px!important;}
.dataTables_wrapper .dataTables_scroll div.dataTables_scrollHead {height:50px!important;width:100%!important;}
            .table > tbody > tr > td {
                margin: 0px;
                padding:0px;
            }
              .table > thead > tr > th {
            	vertical-align: -webkit-baseline-middle;
            } 

.dataTables_scroll {margin: 0px 5px 0px 10px;max-height:150px!important;height:150px!important;}
#dtBasicExample_filter{margin: 10px 0px 5px 10px;overflow:auto!important}

table.dataTable thead .sorting_asc {
    background-image: url("https://cdn.datatables.net/1.10.22/images/sort_asc.png") !important;
    background-repeat: no-repeat;
    background-position: right;

}
 
table.dataTable thead .sorting_desc {
    background-image: url("https://cdn.datatables.net/1.10.22/images/sort_desc.png") !important;
    background-repeat: no-repeat;
    background-position: right;

}
 
table.dataTable thead .sorting {
    background-image: url("https://cdn.datatables.net/1.10.22/images/sort_both.png");
    background-repeat: no-repeat;
    background-position: right;
}

#myUsageModal{height:280px!important;width:450px}
.btnHamburger{text-align: center;border-radius: 5px;padding: 6px;border-top: 1px solid #CCCCCC;border-right: 1px solid #CCCCCC;border-bottom: 1px solid #CCCCCC;border-left: 1px solid #CCCCCC;}
.overlay{background:#e9e9e9;display:none;position:absolute;top:0;right:0;bottom:0;left:0;opacity:.5}.d-none{display:none}.separator{display:flex;align-items:center;text-align:center}.separator::after,.separator::before{content:'';flex:1;border-bottom:1px solid #ccc}.separator::before{margin-right:.25em}.separator::after{margin-left:.25em}#customBtn{display:inline-block;background:#fff;color:#444;width:190px;border-radius:5px;border:thin solid #888;box-shadow:1px 1px 1px grey;white-space:nowrap}#customBtn:hover{cursor:pointer}span.label{font-weight:400;color:#444}span.icon{background:url(/img/g-normal.png) transparent 5px 50% no-repeat;display:inline-block;vertical-align:middle;width:42px;height:42px}span.buttonText{display:inline-block;vertical-align:middle;font-size:14px;font-weight:700;font-family:Roboto,sans-serif}header .top a{text-decoration:none;font-weight:700;color:#2c3e50}header .top a:hover{color:#3498db}@media screen and (max-width :576px){section#inner-headline h1{font-size:30px}section#inner-headline h2{font-size:26x}}footer .social-network i.fa-facebook-square{color:#3b5998;font-size:1.6em}footer .social-network i.fa-twitter-square{color:#1da1f2;font-size:1.6em}footer .social-network i.fa-linkedin-square{color:#0077b5;font-size:1.6em}

/* loader */           
#loader {
  border: 10px solid #fff;
  border-radius: 50%;
  border-top: 10px solid #0989df;
  width: 50px;
  height: 50px;
  -webkit-animation: spin 2s linear infinite; /* Safari */
  animation: spin 2s linear infinite;
  position:absolute;
  top:50%;
  left:50%;
}

/* Safari */
@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.lmask {
  position: absolute;
  height: 100%;
  width: 100%; 
  background-color: #000;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  z-index: 9999999;
  opacity: 0.4;
  &.fixed {
    position: fixed;
  }}
            
 .campignDate{
    font-size: 12px;
    padding-top: 5px
 }           
.layermodal{left:70%;position:fixed;}     
#searchQueryModal{left:30%;top:10%;position:fixed;}
.mt-10{
	margin-top:10px;
}    
.mb-10{
	margin-bottom:10px;
} 
.mb-15{
	margin-bottom:15px;
}   
nav a{
color:white;
}
/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 22px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 4px;
  top: 2px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.dataTables_filter input {
        margin-left:8px;
    }


 .dataTables_empty
{
    display:none;
}

hr.hrclass{
	margin-top:0px!important;
	margin-bottom:0px!important;
}

.mapFloat {
    position: absolute;
    z-index: 31;
    visibility: visible;
}

.mapFloatContent {
    background: black;
    background: url(../Images/CSS/ui-bg_flat_65_000000_40x100.png) 50% bottom repeat;
    background: rgba(0, 0, 0, .8);
    padding: 1px;
    color: white;
    border: 1px solid #A6C9E2;
}

.horizontalLayout tr {
    display: inline-block; 
    float: left;
}
.horizontalLayout tr td {
    display: block; 
    float: left;
    clear: both;
    margin-left: 5px;
    margin-right: 5px;
    text-align: left;
}

.ui-widget {
    font-family: arial;
    font-size: 12px;
}
.ui-selectmenu-menu li {
    padding: 0;
    margin: 0;
    display: block;
    border-top: 1px dotted transparent;
    border-bottom: 1px dotted transparent;
    border-right-width: 0 !important;
    border-left-width: 0 !important;
    font-weight: normal !important;
}
.ui-selectmenu-menu-popup {
    margin-top: -1px;
}

.ui-selectmenu-open {
    display: block;
}
.ui-selectmenu-menu {
    padding: 0;
    margin: 0;
    list-style: none;
    position: absolute;
    top: 20;
    / visibility: hidden; /
    display: none;
    overflow: auto;
    z-index: 1005;
}
.ui-corner-all {
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    border-radius: 5px;
}


.ui-selectmenu { height: 2em; }
.ui-selectmenu-menu li a,.ui-selectmenu-status { padding: .3em 1em; }
.ui-selectmenu-menu-dropdown li { margin-left: -0.5em; }
.ui-selectmenu-dropdown .ui-selectmenu-status{ padding-left: 0.5em; }
.ui-selectmenu-icon { right: 3px; }
.ui-selectmenu-menu li.firstCommand { border-top: 1px inset; }
.positionele{position:absolute;border: 1px solid #66a5db; border-radius: 5px;color:#000;}


.slider-color {
  -webkit-appearance: none;
  width: 100%;
  height: 25px;
  background-image: linear-gradient(to right,rgba(0,0,0,0),#00ffff);
  outline: none;
}

.slider-color::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 10px;
  height: 30px;
  background: #4CAF50;
  cursor: pointer;
}


/*delete popover*/
/* Float cancel and delete buttons and add an equal width */
.cancelbtn, .deletebtn {
  float: left;
  width: 50%;
}

/* Add a color to the cancel button */
.cancelbtn {
  background-color: #ccc;
  color: black;
}

/* Add a color to the delete button */
.deletebtn {
  background-color: #f44336;
}

/* Add padding and center-align text to the container */
.container-delete {
  padding: 16px;
  text-align: center;
}

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
 // background-color: #474e5d;
  padding-top: 50px;
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* Style the horizontal ruler */
hr {
  border: 1px solid #f1f1f1;
  margin-bottom: 25px;
}
 
/* The Modal Close Button (x) */
.close-btn {
  position: absolute;
  right: 35px;
  top: 15px;
  font-size: 40px;
  font-weight: bold;
  color: #f1f1f1;
}

.close:hover,
.close:focus {
  color: #f44336;
  cursor: pointer;
}

/* Clear floats */
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

/* Change styles for cancel button and delete button on extra small screens */
@media screen and (max-width: 300px) {
  .cancelbtn, .deletebtn {
     width: 100%;
  }
}
</style>
<script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/vRlwc_PSxXCKH_XJgRfE_XLdofM.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/_u0DMIOZxZkxMvyqqiiIR6GRFBU.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/PgZslZuu2vcwiZciV_22IQq3Ajk.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rb/3C/cir3,cc,nc/CMNitzEwtKEuCib3GXQbDW0hW1g.css?bu=AZgH&amp;or=w"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/DSE8A_dICzNXGZ07khrhd7BXRCg.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/rH1EkhFwf4TCWD9A-tVD7jIj1tU.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/SaASvOPPupnGJ9StbwEecDBjeBM.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/JfHnPS9urNVkbmDnNIFijvK80P8.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/aopcCyTUdY-IrIC-X9z2zKDdao0.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rp/CAFArT5Qt7JLgEpH4Fg1eKUw0Wk.br.css"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/F0coH3imuMFXgHNztJz-_MxRf7M.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rp/Aul74W_D1uhwU6rtGOQjoPs6VoA.br.css"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/Ql_cnPNylnKaMTvRqvOd1RoHSZo.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rp/LH9biYWGDoJsJe5ime2QAGgdPhk.br.css"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/8-8xIQ6IAEC3JPJaSET1BQNRvrY.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rp/Zs6VPshPTibbryjR_lSPfYBa8Sg.br.css"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/9g8l5u8drUFaRNp7Tib94qy9BzM.br.js"></script><link type="text/css" rel="stylesheet" crossorigin="anonymous" referrerpolicy="strict-origin-when-cross-origin" href="https://r.bing.com/rp/H4qU83HeKAqWDW-6q6WCGyr9sbE.br.css"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/nebxGMGSFIrlMfTJLaGfBaYdkao.br.js"></script><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/_tlySkxHAbRU4s92cA1mD7h8xzw.br.js"></script><script type="text/javascript" charset="UTF-8" src="https://www.gstatic.com/charts/51/loader.js"></script><style></style><wordtune-styles><wordtune-style>/**
 * @license
 * MyFonts Webfont Build ID 3960512, 2020-10-14T09:47:27-0400
 *
 * The fonts listed in this notice are subject to the End User License
 * Agreement(s) entered into by the website owner. All other parties are
 * explicitly restricted from using the Licensed Webfonts(s).
 *
 * You may obtain a valid license at the URLs below.
 *
 * Webfont: SofiaPro-Light by Mostardesign
 * URL: https://www.myfonts.com/fonts/mostardesign/sofia-pro/light/
 *
 * Webfont: SofiaPro-Regular by Mostardesign
 * URL: https://www.myfonts.com/fonts/mostardesign/sofia-pro/regular/
 *
 * Webfont: SofiaPro-Medium by Mostardesign
 * URL: https://www.myfonts.com/fonts/mostardesign/sofia-pro/medium/
 *
 *
 * Webfonts copyright: Copyright © Olivier Gourvat - Mostardesign Type Foundry, 2020. All rights reserved.
 *
 * © 2020 MyFonts Inc
*/

/* @import must be at top of file, otherwise CSS will not work */
/* @import url('//hello.myfonts.net/count/3caa3a'); */

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Light.woff2?v=3.19') format('woff2'),
    url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Light.woff?v=3.19') format('woff');
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Regular.woff2?v=3.19') format('woff2'),
    url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Regular.woff?v=3.19') format('woff');
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Medium.woff2?v=3.19') format('woff2'),
    url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-Medium.woff?v=3.19') format('woff');
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-SemiBold.woff2?v=3.19') format('woff2'),
    url('chrome-extension://__MSG_@@extension_id__/fonts/Inter/Inter-SemiBold.woff?v=3.19') format('woff');
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvZm9udHMvZm9udHMuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXVCQzs7QUFFRCxnRUFBZ0U7QUFDaEUscURBQXFEOztBQUVyRDtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQjt1R0FDcUc7QUFDdkc7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEI7eUdBQ3VHO0FBQ3pHOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCO3dHQUNzRztBQUN4Rzs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQjswR0FDd0c7QUFDMUciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBNeUZvbnRzIFdlYmZvbnQgQnVpbGQgSUQgMzk2MDUxMiwgMjAyMC0xMC0xNFQwOTo0NzoyNy0wNDAwXG4gKlxuICogVGhlIGZvbnRzIGxpc3RlZCBpbiB0aGlzIG5vdGljZSBhcmUgc3ViamVjdCB0byB0aGUgRW5kIFVzZXIgTGljZW5zZVxuICogQWdyZWVtZW50KHMpIGVudGVyZWQgaW50byBieSB0aGUgd2Vic2l0ZSBvd25lci4gQWxsIG90aGVyIHBhcnRpZXMgYXJlXG4gKiBleHBsaWNpdGx5IHJlc3RyaWN0ZWQgZnJvbSB1c2luZyB0aGUgTGljZW5zZWQgV2ViZm9udHMocykuXG4gKlxuICogWW91IG1heSBvYnRhaW4gYSB2YWxpZCBsaWNlbnNlIGF0IHRoZSBVUkxzIGJlbG93LlxuICpcbiAqIFdlYmZvbnQ6IFNvZmlhUHJvLUxpZ2h0IGJ5IE1vc3RhcmRlc2lnblxuICogVVJMOiBodHRwczovL3d3dy5teWZvbnRzLmNvbS9mb250cy9tb3N0YXJkZXNpZ24vc29maWEtcHJvL2xpZ2h0L1xuICpcbiAqIFdlYmZvbnQ6IFNvZmlhUHJvLVJlZ3VsYXIgYnkgTW9zdGFyZGVzaWduXG4gKiBVUkw6IGh0dHBzOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL21vc3RhcmRlc2lnbi9zb2ZpYS1wcm8vcmVndWxhci9cbiAqXG4gKiBXZWJmb250OiBTb2ZpYVByby1NZWRpdW0gYnkgTW9zdGFyZGVzaWduXG4gKiBVUkw6IGh0dHBzOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL21vc3RhcmRlc2lnbi9zb2ZpYS1wcm8vbWVkaXVtL1xuICpcbiAqXG4gKiBXZWJmb250cyBjb3B5cmlnaHQ6IENvcHlyaWdodCDCqSBPbGl2aWVyIEdvdXJ2YXQgLSBNb3N0YXJkZXNpZ24gVHlwZSBGb3VuZHJ5LCAyMDIwLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIMKpIDIwMjAgTXlGb250cyBJbmNcbiovXG5cbi8qIEBpbXBvcnQgbXVzdCBiZSBhdCB0b3Agb2YgZmlsZSwgb3RoZXJ3aXNlIENTUyB3aWxsIG5vdCB3b3JrICovXG4vKiBAaW1wb3J0IHVybCgnLy9oZWxsby5teWZvbnRzLm5ldC9jb3VudC8zY2FhM2EnKTsgKi9cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnSW50ZXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLUxpZ2h0LndvZmYyP3Y9My4xOScpIGZvcm1hdCgnd29mZjInKSxcbiAgICB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLUxpZ2h0LndvZmY/dj0zLjE5JykgZm9ybWF0KCd3b2ZmJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0ludGVyJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKCdjaHJvbWUtZXh0ZW5zaW9uOi8vX19NU0dfQEBleHRlbnNpb25faWRfXy9mb250cy9JbnRlci9JbnRlci1SZWd1bGFyLndvZmYyP3Y9My4xOScpIGZvcm1hdCgnd29mZjInKSxcbiAgICB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLVJlZ3VsYXIud29mZj92PTMuMTknKSBmb3JtYXQoJ3dvZmYnKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnSW50ZXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLU1lZGl1bS53b2ZmMj92PTMuMTknKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgdXJsKCdjaHJvbWUtZXh0ZW5zaW9uOi8vX19NU0dfQEBleHRlbnNpb25faWRfXy9mb250cy9JbnRlci9JbnRlci1NZWRpdW0ud29mZj92PTMuMTknKSBmb3JtYXQoJ3dvZmYnKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnSW50ZXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLVNlbWlCb2xkLndvZmYyP3Y9My4xOScpIGZvcm1hdCgnd29mZjInKSxcbiAgICB1cmwoJ2Nocm9tZS1leHRlbnNpb246Ly9fX01TR19AQGV4dGVuc2lvbl9pZF9fL2ZvbnRzL0ludGVyL0ludGVyLVNlbWlCb2xkLndvZmY/dj0zLjE5JykgZm9ybWF0KCd3b2ZmJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */</wordtune-style><wordtune-style>/* 
    Allow adding a border to an element by just adding a border-width. (https: //github.com/tailwindcss/tailwindcss/pull/116)
    // by default this get loaded from preflight setting (reset css), 
    // but we need to set this to false as this overrides external sites that content is loaded to
*/
[class^='wt-'],
[class*=' wt-'] {
  border-width: 0;
  border-style: solid;
}

h3{
  font-size: 16px;
  line-height: 24px;
}

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.wt-prose-components-button-medium{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body1-bold{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 600;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body1-regular{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body2-bold{
  font-size: 12px;
  font-family: "Inter", sans-serif;
  font-weight: 600;
  line-height: 20px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body2-regular{
  font-size: 12px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 20px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-rewrite-card .wt-menu-item,
  .wt-rewrite-card .wt-dropdown button{
  text-transform: capitalize;
}
.wt-scrollbar::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-button {
    width: 8px;
    height: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-thumb {
    background: #f2f2f2;
    border: 0px solid #ffffff;
    border-radius: 50px;
  }
.wt-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #e6e6e6;
  }
.wt-scrollbar::-webkit-scrollbar-thumb:active {
    background: #e6e6e6;
  }
.wt-scrollbar::-webkit-scrollbar-track {
    background: white;
    border: 28px none #75498d;
    border-radius: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-track:hover {
    background: white;
  }
.wt-scrollbar::-webkit-scrollbar-track:active {
    background: #f2f2f2;
  }
.wt-scrollbar::-webkit-scrollbar-corner {
    background: transparent;
  }
a.wt-link-secondary:link{
  --tw-text-opacity: 1;
  color: rgb(72 77 86 / var(--tw-text-opacity));
}
.wt-sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.wt-invisible{
  visibility: hidden;
}
.wt-fixed{
  position: fixed;
}
.wt-absolute{
  position: absolute;
}
.wt-relative{
  position: relative;
}
.wt-inset-0{
  inset: 0px;
}
.-wt-right-\[55px\]{
  right: -55px;
}
.wt-bottom-0{
  bottom: 0px;
}
.wt-bottom-1{
  bottom: 4px;
}
.wt-right-0{
  right: 0px;
}
.wt-right-1{
  right: 4px;
}
.wt-right-4{
  right: 16px;
}
.wt-right-\[8px\]{
  right: 8px;
}
.wt-top-0{
  top: 0px;
}
.wt-top-1{
  top: 4px;
}
.wt-top-11{
  top: 44px;
}
.wt-top-2{
  top: 8px;
}
.wt-top-4{
  top: 16px;
}
.wt-top-\[-20px\]{
  top: -20px;
}
.wt-top-\[0\]{
  top: 0;
}
.wt-top-\[80px\]{
  top: 80px;
}
.wt-z-0{
  z-index: 0;
}
.wt-z-10{
  z-index: 10;
}
.wt-z-\[10000\]{
  z-index: 10000;
}
.wt-z-\[1099\]{
  z-index: 1099;
}
.wt-z-\[2099\]{
  z-index: 2099;
}
.wt-z-\[9999\]{
  z-index: 9999;
}
.wt-m-0{
  margin: 0px;
}
.wt-m-10{
  margin: 40px;
}
.wt-m-20{
  margin: 80px;
}
.wt-m-5{
  margin: 20px;
}
.wt-mx-2{
  margin-left: 8px;
  margin-right: 8px;
}
.wt-mx-4{
  margin-left: 16px;
  margin-right: 16px;
}
.wt-my-2{
  margin-top: 8px;
  margin-bottom: 8px;
}
.wt-my-2\.5{
  margin-top: 10px;
  margin-bottom: 10px;
}
.wt-my-\[8px\]{
  margin-top: 8px;
  margin-bottom: 8px;
}
.wt-mb-0{
  margin-bottom: 0px;
}
.wt-mb-0\.5{
  margin-bottom: 2px;
}
.wt-mb-2{
  margin-bottom: 8px;
}
.wt-mb-3{
  margin-bottom: 12px;
}
.wt-mb-8{
  margin-bottom: 32px;
}
.wt-mb-\[12px\]{
  margin-bottom: 12px;
}
.wt-mb-\[24px\]{
  margin-bottom: 24px;
}
.wt-mb-\[2px\]{
  margin-bottom: 2px;
}
.wt-ml-1{
  margin-left: 4px;
}
.wt-ml-2{
  margin-left: 8px;
}
.wt-ml-3{
  margin-left: 12px;
}
.wt-ml-\[2px\]{
  margin-left: 2px;
}
.wt-ml-\[4px\]{
  margin-left: 4px;
}
.wt-ml-auto{
  margin-left: auto;
}
.wt-mr-1{
  margin-right: 4px;
}
.wt-mr-2{
  margin-right: 8px;
}
.wt-mr-4{
  margin-right: 16px;
}
.wt-mr-\[2px\]{
  margin-right: 2px;
}
.wt-mr-\[6px\]{
  margin-right: 6px;
}
.wt-mt-0{
  margin-top: 0px;
}
.wt-mt-0\.5{
  margin-top: 2px;
}
.wt-mt-1{
  margin-top: 4px;
}
.wt-mt-2{
  margin-top: 8px;
}
.wt-mt-2\.5{
  margin-top: 10px;
}
.wt-mt-6{
  margin-top: 24px;
}
.wt-mt-\[4px\]{
  margin-top: 4px;
}
.wt-mt-\[8px\]{
  margin-top: 8px;
}
.wt-box-border{
  box-sizing: border-box;
}
.wt-box-content{
  box-sizing: content-box;
}
.wt-inline-block{
  display: inline-block;
}
.wt-flex{
  display: flex;
}
.wt-inline-flex{
  display: inline-flex;
}
.wt-hidden{
  display: none;
}
.wt-h-10{
  height: 40px;
}
.wt-h-12{
  height: 48px;
}
.wt-h-2{
  height: 8px;
}
.wt-h-3{
  height: 12px;
}
.wt-h-4{
  height: 16px;
}
.wt-h-5{
  height: 20px;
}
.wt-h-6{
  height: 24px;
}
.wt-h-7{
  height: 28px;
}
.wt-h-8{
  height: 32px;
}
.wt-h-96{
  height: 384px;
}
.wt-h-\[11px\]{
  height: 11px;
}
.wt-h-\[24px\]{
  height: 24px;
}
.wt-h-\[33px\]{
  height: 33px;
}
.wt-h-\[381px\]{
  height: 381px;
}
.wt-h-\[52px\]{
  height: 52px;
}
.wt-h-\[72px\]{
  height: 72px;
}
.wt-h-\[calc\(100vh-56px\)\]{
  height: calc(100vh - 56px);
}
.wt-h-auto{
  height: auto;
}
.wt-h-fit{
  height: -moz-fit-content;
  height: fit-content;
}
.wt-h-full{
  height: 100%;
}
.wt-max-h-80{
  max-height: 320px;
}
.wt-max-h-\[208px\]{
  max-height: 208px;
}
.wt-max-h-\[250px\]{
  max-height: 250px;
}
.wt-max-h-\[428px\]{
  max-height: 428px;
}
.wt-min-h-\[190px\]{
  min-height: 190px;
}
.wt-min-h-\[32px\]{
  min-height: 32px;
}
.wt-min-h-\[40px\]{
  min-height: 40px;
}
.wt-min-h-full{
  min-height: 100%;
}
.wt-min-h-screen{
  min-height: 100vh;
}
.wt-w-0{
  width: 0px;
}
.wt-w-10{
  width: 40px;
}
.wt-w-12{
  width: 48px;
}
.wt-w-2{
  width: 8px;
}
.wt-w-4{
  width: 16px;
}
.wt-w-40{
  width: 160px;
}
.wt-w-48{
  width: 192px;
}
.wt-w-5{
  width: 20px;
}
.wt-w-6{
  width: 24px;
}
.wt-w-60{
  width: 240px;
}
.wt-w-72{
  width: 288px;
}
.wt-w-8{
  width: 32px;
}
.wt-w-80{
  width: 320px;
}
.wt-w-96{
  width: 384px;
}
.wt-w-\[100\%\]{
  width: 100%;
}
.wt-w-\[165px\]{
  width: 165px;
}
.wt-w-\[200px\]{
  width: 200px;
}
.wt-w-\[213px\]{
  width: 213px;
}
.wt-w-\[24px\]{
  width: 24px;
}
.wt-w-\[272px\]{
  width: 272px;
}
.wt-w-\[328px\]{
  width: 328px;
}
.wt-w-\[360px\]{
  width: 360px;
}
.wt-w-\[368px\]{
  width: 368px;
}
.wt-w-\[380px\]{
  width: 380px;
}
.wt-w-\[400px\]{
  width: 400px;
}
.wt-w-\[48px\]{
  width: 48px;
}
.wt-w-\[520px\]{
  width: 520px;
}
.wt-w-\[600px\]{
  width: 600px;
}
.wt-w-\[72px\]{
  width: 72px;
}
.wt-w-\[740px\]{
  width: 740px;
}
.wt-w-auto{
  width: auto;
}
.wt-w-fit{
  width: -moz-fit-content;
  width: fit-content;
}
.wt-w-full{
  width: 100%;
}
.wt-min-w-0{
  min-width: 0px;
}
.wt-min-w-\[160px\]{
  min-width: 160px;
}
.wt-min-w-\[300px\]{
  min-width: 300px;
}
.wt-max-w-3xl{
  max-width: 768px;
}
.wt-max-w-\[442px\]{
  max-width: 442px;
}
.wt-max-w-\[600px\]{
  max-width: 600px;
}
.wt-max-w-full{
  max-width: 100%;
}
.wt-flex-1{
  flex: 1 1 0%;
}
.wt-flex-none{
  flex: none;
}
.wt-shrink-0{
  flex-shrink: 0;
}
.wt-grow{
  flex-grow: 1;
}
.wt-basis-0{
  flex-basis: 0px;
}
.wt-rotate-45{
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-scale-100{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-scale-95{
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes wt-pulse{
  50%{
    opacity: .5;
  }
}
.wt-animate-pulse{
  animation: wt-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.wt-cursor-default{
  cursor: default;
}
.wt-cursor-ns-resize{
  cursor: ns-resize;
}
.wt-cursor-pointer{
  cursor: pointer;
}
.wt-select-none{
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.wt-list-none{
  list-style-type: none;
}
.wt-flex-row{
  flex-direction: row;
}
.wt-flex-row-reverse{
  flex-direction: row-reverse;
}
.wt-flex-col{
  flex-direction: column;
}
.wt-flex-wrap{
  flex-wrap: wrap;
}
.wt-content-center{
  align-content: center;
}
.wt-items-start{
  align-items: flex-start;
}
.wt-items-end{
  align-items: flex-end;
}
.wt-items-center{
  align-items: center;
}
.wt-justify-end{
  justify-content: flex-end;
}
.wt-justify-center{
  justify-content: center;
}
.wt-justify-between{
  justify-content: space-between;
}
.wt-justify-items-center{
  justify-items: center;
}
.wt-gap-0{
  gap: 0px;
}
.wt-gap-0\.5{
  gap: 2px;
}
.wt-gap-1{
  gap: 4px;
}
.wt-gap-1\.5{
  gap: 6px;
}
.wt-gap-2{
  gap: 8px;
}
.wt-gap-3{
  gap: 12px;
}
.wt-gap-4{
  gap: 16px;
}
.wt-gap-\[12px\]{
  gap: 12px;
}
.wt-gap-\[14px\]{
  gap: 14px;
}
.wt-gap-\[32px\]{
  gap: 32px;
}
.wt-gap-\[3px\]{
  gap: 3px;
}
.wt-gap-\[4px\]{
  gap: 4px;
}
.wt-gap-\[8px\]{
  gap: 8px;
}
.wt-gap-x-1{
  -moz-column-gap: 4px;
       column-gap: 4px;
}
.wt-gap-x-2{
  -moz-column-gap: 8px;
       column-gap: 8px;
}
.wt-space-y-2 &gt; :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(8px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(8px * var(--tw-space-y-reverse));
}
.wt-self-center{
  align-self: center;
}
.wt-self-stretch{
  align-self: stretch;
}
.wt-justify-self-center{
  justify-self: center;
}
.wt-overflow-auto{
  overflow: auto;
}
.wt-overflow-hidden{
  overflow: hidden;
}
.wt-overflow-y-auto{
  overflow-y: auto;
}
.wt-overflow-x-hidden{
  overflow-x: hidden;
}
.wt-overflow-ellipsis{
  text-overflow: ellipsis;
}
.wt-whitespace-nowrap{
  white-space: nowrap;
}
.wt-whitespace-pre-wrap{
  white-space: pre-wrap;
}
.wt-break-words{
  overflow-wrap: break-word;
}
.\!wt-rounded-none{
  border-radius: 0px !important;
}
.wt-rounded{
  border-radius: 4px;
}
.wt-rounded-3xl{
  border-radius: 24px;
}
.wt-rounded-\[10px\]{
  border-radius: 10px;
}
.wt-rounded-\[4px\]{
  border-radius: 4px;
}
.wt-rounded-\[8px\]{
  border-radius: 8px;
}
.wt-rounded-full{
  border-radius: 9999px;
}
.wt-rounded-lg{
  border-radius: 8px;
}
.wt-rounded-md{
  border-radius: 6px;
}
.wt-rounded-sm{
  border-radius: 2px;
}
.wt-rounded-xl{
  border-radius: 12px;
}
.wt-rounded-xs{
  border-radius: 4px;
}
.wt-rounded-b-\[12px\]{
  border-bottom-right-radius: 12px;
  border-bottom-left-radius: 12px;
}
.wt-rounded-b-xl{
  border-bottom-right-radius: 12px;
  border-bottom-left-radius: 12px;
}
.wt-rounded-t-xl{
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
}
.wt-rounded-bl-\[12px\]{
  border-bottom-left-radius: 12px;
}
.wt-rounded-bl-\[36px\]{
  border-bottom-left-radius: 36px;
}
.wt-rounded-tl-\[12px\]{
  border-top-left-radius: 12px;
}
.wt-rounded-tl-\[14px\]{
  border-top-left-radius: 14px;
}
.wt-rounded-tl-\[36px\]{
  border-top-left-radius: 36px;
}
.\!wt-border-\[1px\]{
  border-width: 1px !important;
}
.wt-border{
  border-width: 1px;
}
.\!wt-border-t{
  border-top-width: 1px !important;
}
.wt-border-b{
  border-bottom-width: 1px;
}
.wt-border-b-2{
  border-bottom-width: 2px;
}
.wt-border-solid{
  border-style: solid;
}
.wt-border-none{
  border-style: none;
}
.wt-border-border-brand-selected{
  --tw-border-opacity: 1;
  border-color: rgb(132 95 243 / var(--tw-border-opacity));
}
.wt-border-border-danger-default{
  --tw-border-opacity: 1;
  border-color: rgb(255 157 151 / var(--tw-border-opacity));
}
.wt-border-border-danger-selected{
  --tw-border-opacity: 1;
  border-color: rgb(233 73 64 / var(--tw-border-opacity));
}
.wt-border-border-neutral-default{
  --tw-border-opacity: 1;
  border-color: rgb(204 208 213 / var(--tw-border-opacity));
}
.wt-border-border-neutral-divider{
  --tw-border-opacity: 1;
  border-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-border-error-main{
  --tw-border-opacity: 1;
  border-color: rgb(244 71 47 / var(--tw-border-opacity));
}
.wt-border-gray-dark{
  --tw-border-opacity: 1;
  border-color: rgb(160 162 168 / var(--tw-border-opacity));
}
.wt-border-gray-light{
  --tw-border-opacity: 1;
  border-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-border-gray-lighter{
  --tw-border-opacity: 1;
  border-color: rgb(245 246 249 / var(--tw-border-opacity));
}
.wt-border-t-gray-light{
  --tw-border-opacity: 1;
  border-top-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-bg-\[\#ECE9FE\]{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-\[\#F4FAFF\]{
  --tw-bg-opacity: 1;
  background-color: rgb(244 250 255 / var(--tw-bg-opacity));
}
.wt-bg-background-light{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-light-default{
  --tw-bg-opacity: 1;
  background-color: rgb(244 243 255 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-light-selected{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(117 63 234 / var(--tw-bg-opacity));
}
.wt-bg-bg-neutral-light-hover{
  background-color: #393B400A;
}
.wt-bg-bg-neutral-light-selected{
  background-color: #393B401A;
}
.wt-bg-bg-neutral-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(57 59 64 / var(--tw-bg-opacity));
}
.wt-bg-bg-neutral-primary-hover{
  --tw-bg-opacity: 1;
  background-color: rgb(23 24 28 / var(--tw-bg-opacity));
}
.wt-bg-bg-premium-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(254 102 17 / var(--tw-bg-opacity));
}
.wt-bg-black{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.wt-bg-error-main{
  --tw-bg-opacity: 1;
  background-color: rgb(244 71 47 / var(--tw-bg-opacity));
}
.wt-bg-error-main\/10{
  background-color: rgb(244 71 47 / 0.1);
}
.wt-bg-gray-lighter{
  --tw-bg-opacity: 1;
  background-color: rgb(245 246 249 / var(--tw-bg-opacity));
}
.wt-bg-gray-lightest{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.wt-bg-gray-main{
  --tw-bg-opacity: 1;
  background-color: rgb(195 198 206 / var(--tw-bg-opacity));
}
.wt-bg-neutral-default{
  --tw-bg-opacity: 1;
  background-color: rgb(28 28 30 / var(--tw-bg-opacity));
}
.wt-bg-neutral-disabled-secondary{
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 234 / var(--tw-bg-opacity));
}
.wt-bg-paper-ai{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-paper-system{
  --tw-bg-opacity: 1;
  background-color: rgb(248 248 245 / var(--tw-bg-opacity));
}
.wt-bg-primary-lightest{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-primary-main\/5{
  background-color: rgb(117 63 234 / 0.05);
}
.wt-bg-text-info-hover{
  --tw-bg-opacity: 1;
  background-color: rgb(61 103 255 / var(--tw-bg-opacity));
}
.wt-bg-transparent{
  background-color: transparent;
}
.wt-bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-white-gradient{
  background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.81) 0%, #FFF 44.07%);
}
.wt-fill-\[\#4946f0\]{
  fill: #4946f0;
}
.wt-fill-brand-primary{
  fill: #753FEA;
}
.wt-p-0{
  padding: 0px;
}
.wt-p-0\.5{
  padding: 2px;
}
.wt-p-1{
  padding: 4px;
}
.wt-p-10{
  padding: 40px;
}
.wt-p-14{
  padding: 56px;
}
.wt-p-2{
  padding: 8px;
}
.wt-p-6{
  padding: 24px;
}
.wt-p-\[12px\]{
  padding: 12px;
}
.wt-px-0{
  padding-left: 0px;
  padding-right: 0px;
}
.wt-px-0\.5{
  padding-left: 2px;
  padding-right: 2px;
}
.wt-px-1{
  padding-left: 4px;
  padding-right: 4px;
}
.wt-px-12{
  padding-left: 48px;
  padding-right: 48px;
}
.wt-px-2{
  padding-left: 8px;
  padding-right: 8px;
}
.wt-px-2\.5{
  padding-left: 10px;
  padding-right: 10px;
}
.wt-px-3{
  padding-left: 12px;
  padding-right: 12px;
}
.wt-px-4{
  padding-left: 16px;
  padding-right: 16px;
}
.wt-px-6{
  padding-left: 24px;
  padding-right: 24px;
}
.wt-px-\[0\]{
  padding-left: 0;
  padding-right: 0;
}
.wt-px-\[12px\]{
  padding-left: 12px;
  padding-right: 12px;
}
.wt-px-\[14px\]{
  padding-left: 14px;
  padding-right: 14px;
}
.wt-px-\[16px\]{
  padding-left: 16px;
  padding-right: 16px;
}
.wt-px-\[200px\]{
  padding-left: 200px;
  padding-right: 200px;
}
.wt-px-\[20px\]{
  padding-left: 20px;
  padding-right: 20px;
}
.wt-px-\[38px\]{
  padding-left: 38px;
  padding-right: 38px;
}
.wt-px-\[40px\]{
  padding-left: 40px;
  padding-right: 40px;
}
.wt-px-\[48px\]{
  padding-left: 48px;
  padding-right: 48px;
}
.wt-px-\[4px\]{
  padding-left: 4px;
  padding-right: 4px;
}
.wt-py-0{
  padding-top: 0px;
  padding-bottom: 0px;
}
.wt-py-0\.5{
  padding-top: 2px;
  padding-bottom: 2px;
}
.wt-py-1{
  padding-top: 4px;
  padding-bottom: 4px;
}
.wt-py-1\.5{
  padding-top: 6px;
  padding-bottom: 6px;
}
.wt-py-10{
  padding-top: 40px;
  padding-bottom: 40px;
}
.wt-py-2{
  padding-top: 8px;
  padding-bottom: 8px;
}
.wt-py-2\.5{
  padding-top: 10px;
  padding-bottom: 10px;
}
.wt-py-3{
  padding-top: 12px;
  padding-bottom: 12px;
}
.wt-py-4{
  padding-top: 16px;
  padding-bottom: 16px;
}
.wt-py-\[10px\]{
  padding-top: 10px;
  padding-bottom: 10px;
}
.wt-py-\[21px\]{
  padding-top: 21px;
  padding-bottom: 21px;
}
.wt-py-\[2px\]{
  padding-top: 2px;
  padding-bottom: 2px;
}
.wt-py-\[32px\]{
  padding-top: 32px;
  padding-bottom: 32px;
}
.wt-py-\[6px\]{
  padding-top: 6px;
  padding-bottom: 6px;
}
.wt-py-\[8px\]{
  padding-top: 8px;
  padding-bottom: 8px;
}
.wt-pb-0{
  padding-bottom: 0px;
}
.wt-pb-1{
  padding-bottom: 4px;
}
.wt-pb-2{
  padding-bottom: 8px;
}
.wt-pb-3{
  padding-bottom: 12px;
}
.wt-pb-8{
  padding-bottom: 32px;
}
.wt-pb-\[16px\]{
  padding-bottom: 16px;
}
.wt-pb-\[8px\]{
  padding-bottom: 8px;
}
.wt-pl-1{
  padding-left: 4px;
}
.wt-pl-2{
  padding-left: 8px;
}
.wt-pl-6{
  padding-left: 24px;
}
.wt-pr-2{
  padding-right: 8px;
}
.wt-pr-3{
  padding-right: 12px;
}
.wt-pr-4{
  padding-right: 16px;
}
.wt-pr-7{
  padding-right: 28px;
}
.wt-pt-1{
  padding-top: 4px;
}
.wt-pt-3{
  padding-top: 12px;
}
.wt-pt-5{
  padding-top: 20px;
}
.wt-pt-6{
  padding-top: 24px;
}
.wt-pt-\[12px\]{
  padding-top: 12px;
}
.wt-pt-\[240px\]{
  padding-top: 240px;
}
.wt-text-center{
  text-align: center;
}
.wt-text-start{
  text-align: start;
}
.wt-indent-1{
  text-indent: 4px;
}
.wt-indent-1\.5{
  text-indent: 6px;
}
.wt-indent-2{
  text-indent: 8px;
}
.wt-indent-2\.5{
  text-indent: 10px;
}
.wt-align-sub{
  vertical-align: sub;
}
.wt-font-body{
  font-family: Inter, "Open Sans", sans-serif;
}
.wt-font-inter{
  font-family: Inter, "Open Sans", sans-serif;
}
.wt-text-2xl{
  font-size: 24px;
  line-height: 32px;
}
.wt-text-\[10px\]{
  font-size: 10px;
}
.wt-text-\[11px\]{
  font-size: 11px;
}
.wt-text-\[12px\]{
  font-size: 12px;
}
.wt-text-\[14px\]{
  font-size: 14px;
}
.wt-text-\[16px\]{
  font-size: 16px;
}
.wt-text-\[18px\]{
  font-size: 18px;
}
.wt-text-\[20px\]{
  font-size: 20px;
}
.wt-text-base{
  font-size: 16px;
  line-height: 24px;
}
.wt-text-lg{
  font-size: 18px;
  line-height: 28px;
}
.wt-text-sm{
  font-size: 14px;
  line-height: 20px;
}
.wt-text-xs{
  font-size: 12px;
  line-height: 16px;
}
.wt-font-bold{
  font-weight: 700;
}
.wt-font-light{
  font-weight: 300;
}
.wt-font-medium{
  font-weight: 500;
}
.wt-font-normal{
  font-weight: 400;
}
.wt-font-semibold{
  font-weight: 600;
}
.wt-not-italic{
  font-style: normal;
}
.wt-leading-10{
  line-height: 40px;
}
.wt-leading-5{
  line-height: 20px;
}
.wt-leading-6{
  line-height: 24px;
}
.wt-leading-7{
  line-height: 28px;
}
.wt-leading-8{
  line-height: 32px;
}
.wt-leading-\[14px\]{
  line-height: 14px;
}
.wt-leading-\[20px\]{
  line-height: 20px;
}
.wt-leading-\[24px\]{
  line-height: 24px;
}
.wt-leading-\[26px\]{
  line-height: 26px;
}
.wt-leading-\[28px\]{
  line-height: 28px;
}
.wt-leading-relaxed{
  line-height: 1.625;
}
.wt-leading-tight{
  line-height: 1.25;
}
.wt-tracking-\[\.01em\]{
  letter-spacing: .01em;
}
.wt-tracking-body{
  letter-spacing: 0.15px;
}
.wt-tracking-categoryTitle{
  letter-spacing: 0.4px;
}
.wt-tracking-settings{
  letter-spacing: 0.46px;
}
.wt-tracking-wide{
  letter-spacing: 0.025em;
}
.wt-tracking-wider{
  letter-spacing: 0.05em;
}
.wt-tracking-widest{
  letter-spacing: 0.1em;
}
.wt-text-\[\#461F93\]{
  --tw-text-opacity: 1;
  color: rgb(70 31 147 / var(--tw-text-opacity));
}
.wt-text-bg-brand-primary-default{
  --tw-text-opacity: 1;
  color: rgb(117 63 234 / var(--tw-text-opacity));
}
.wt-text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.wt-text-border-neutral-selected{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-error-main{
  --tw-text-opacity: 1;
  color: rgb(244 71 47 / var(--tw-text-opacity));
}
.wt-text-gray-dark{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.wt-text-gray-darkest{
  --tw-text-opacity: 1;
  color: rgb(31 33 39 / var(--tw-text-opacity));
}
.wt-text-gray-main{
  --tw-text-opacity: 1;
  color: rgb(195 198 206 / var(--tw-text-opacity));
}
.wt-text-info-main{
  --tw-text-opacity: 1;
  color: rgb(41 121 255 / var(--tw-text-opacity));
}
.wt-text-neutral-disabled{
  --tw-text-opacity: 1;
  color: rgb(199 199 204 / var(--tw-text-opacity));
}
.wt-text-neutral-secondary{
  --tw-text-opacity: 1;
  color: rgb(72 72 74 / var(--tw-text-opacity));
}
.wt-text-neutral-tertiary{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-text-brand-contrast{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-text-text-brand-default{
  --tw-text-opacity: 1;
  color: rgb(117 63 234 / var(--tw-text-opacity));
}
.wt-text-text-info-selected{
  --tw-text-opacity: 1;
  color: rgb(32 70 226 / var(--tw-text-opacity));
}
.wt-text-text-neutral-primary{
  --tw-text-opacity: 1;
  color: rgb(40 42 47 / var(--tw-text-opacity));
}
.wt-text-text-neutral-secondary{
  --tw-text-opacity: 1;
  color: rgb(72 77 86 / var(--tw-text-opacity));
}
.wt-text-text-neutral-tertiary{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-text-premium-default{
  --tw-text-opacity: 1;
  color: rgb(254 102 17 / var(--tw-text-opacity));
}
.wt-text-text-turquoise-default{
  --tw-text-opacity: 1;
  color: rgb(18 150 168 / var(--tw-text-opacity));
}
.wt-text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-underline{
  text-decoration-line: underline;
}
.wt-no-underline{
  text-decoration-line: none;
}
.wt-opacity-0{
  opacity: 0;
}
.wt-opacity-100{
  opacity: 1;
}
.wt-opacity-20{
  opacity: 0.2;
}
.wt-opacity-30{
  opacity: 0.3;
}
.wt-opacity-50{
  opacity: 0.5;
}
.wt-opacity-60{
  opacity: 0.6;
}
.wt-opacity-\[0\.7\]{
  opacity: 0.7;
}
.wt-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.brand\.default\)\]{
  --tw-shadow: inset 0px 0px 0px 1px #C1B6FC;
  --tw-shadow-colored: inset 0px 0px 0px 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border{
  --tw-shadow: 0px 0px 0px 0.5px #C3C6CE inset;
  --tw-shadow-colored: inset 0px 0px 0px 0.5px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-left{
  --tw-shadow: 1px 0px 0px 0px #E6EAEC inset;
  --tw-shadow-colored: inset 1px 0px 0px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-right-thick{
  --tw-shadow: -2px 0px 0px 0px #E6EAEC inset;
  --tw-shadow-colored: inset -2px 0px 0px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-top{
  --tw-shadow: 0px -1px 0px #E6EAEC;
  --tw-shadow-colored: 0px -1px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-card{
  --tw-shadow: 0px 4px 14px rgba(72, 72, 74, 0.2);
  --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-inner-border-top{
  --tw-shadow: inset 0px 1px 0px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: inset 0px 1px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-panel-border{
  --tw-shadow: -3px 0px 10px 0px rgba(0, 0, 0, 0.04), -3px 0px 5px 0px rgba(0, 0, 0, 0.06), -3px 0px 4px -1px rgba(40, 42, 47, 0.05);
  --tw-shadow-colored: -3px 0px 10px 0px var(--tw-shadow-color), -3px 0px 5px 0px var(--tw-shadow-color), -3px 0px 4px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-toolbar{
  --tw-shadow: 0px 4px 14px rgba(28, 28, 30, 0.05);
  --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-gray-light{
  --tw-shadow-color: #E6EAEC;
  --tw-shadow: var(--tw-shadow-colored);
}
.wt-outline-none{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.wt-outline-0{
  outline-width: 0px;
}
.wt-ring-1{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.wt-ring-inset{
  --tw-ring-inset: inset;
}
.wt-ring-border-brand-default{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(193 182 252 / var(--tw-ring-opacity));
}
.wt-ring-border-neutral-default{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(204 208 213 / var(--tw-ring-opacity));
}
.wt-ring-gray-light{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(230 234 236 / var(--tw-ring-opacity));
}
.wt-backdrop-blur-\[15px\]{
  --tw-backdrop-blur: blur(15px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.wt-transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-\[right\]{
  transition-property: right;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-\[width\]{
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-colors{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-opacity{
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-duration-100{
  transition-duration: 100ms;
}
.wt-duration-500{
  transition-duration: 500ms;
}
.wt-duration-75{
  transition-duration: 75ms;
}
.wt-duration-\[250ms\]{
  transition-duration: 250ms;
}
.wt-duration-\[400ms\]{
  transition-duration: 400ms;
}
.wt-duration-\[500ms\]{
  transition-duration: 500ms;
}
.wt-ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.wt-ease-out{
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.\[a-zA-Z0-9\:\\\\-\\\\\._\$\]{
  a-z-a--z0-9: \\-\\. $;
}
.placeholder\:wt-font-body::-moz-placeholder{
  font-family: Inter, "Open Sans", sans-serif;
}
.placeholder\:wt-font-body::placeholder{
  font-family: Inter, "Open Sans", sans-serif;
}
.placeholder\:wt-font-extralight::-moz-placeholder{
  font-weight: 200;
}
.placeholder\:wt-font-extralight::placeholder{
  font-weight: 200;
}
.placeholder\:wt-leading-5::-moz-placeholder{
  line-height: 20px;
}
.placeholder\:wt-leading-5::placeholder{
  line-height: 20px;
}
.placeholder\:wt-tracking-\[0\.15px\]::-moz-placeholder{
  letter-spacing: 0.15px;
}
.placeholder\:wt-tracking-\[0\.15px\]::placeholder{
  letter-spacing: 0.15px;
}
.placeholder\:wt-text-gray-dark::-moz-placeholder{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.placeholder\:wt-text-gray-dark::placeholder{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.before\:wt-h-3::before{
  content: var(--tw-content);
  height: 12px;
}
.before\:wt-w-3::before{
  content: var(--tw-content);
  width: 12px;
}
.before\:wt-rounded-full::before{
  content: var(--tw-content);
  border-radius: 9999px;
}
.before\:wt-bg-white::before{
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.before\:wt-shadow::before{
  content: var(--tw-content);
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.before\:wt-transition-transform::before{
  content: var(--tw-content);
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.before\:wt-duration-300::before{
  content: var(--tw-content);
  transition-duration: 300ms;
}
.before\:wt-content-\[\"\"\]::before{
  --tw-content: "";
  content: var(--tw-content);
}
.visited\:wt-text-text-neutral-primary:visited{
  color: rgb(40 42 47 );
}
.visited\:wt-text-text-neutral-secondary:visited{
  color: rgb(72 77 86 );
}
.focus-within\:wt-border-border-brand-selected:focus-within{
  --tw-border-opacity: 1;
  border-color: rgb(132 95 243 / var(--tw-border-opacity));
}
.hover\:wt-w-\[181px\]:hover{
  width: 181px;
}
.hover\:wt-cursor-pointer:hover{
  cursor: pointer;
}
.hover\:wt-bg-bg-brand-light-default:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(244 243 255 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-brand-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(101 43 214 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-neutral-light-hover:hover{
  background-color: #393B400A;
}
.hover\:wt-bg-bg-neutral-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(23 24 28 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-premium-light-default:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(252 251 249 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-premium-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(239 74 7 / var(--tw-bg-opacity));
}
.hover\:wt-bg-error-dark:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(227 27 12 / var(--tw-bg-opacity));
}
.hover\:wt-bg-gray-lightest:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.hover\:wt-bg-text-info-selected:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(32 70 226 / var(--tw-bg-opacity));
}
.hover\:wt-p-\[0\]:hover{
  padding: 0;
}
.hover\:wt-text-bg-premium-primary-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(239 74 7 / var(--tw-text-opacity));
}
.hover\:wt-text-brand-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(101 43 214 / var(--tw-text-opacity));
}
.hover\:wt-text-text-brand-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(101 43 214 / var(--tw-text-opacity));
}
.hover\:wt-no-underline:hover{
  text-decoration-line: none;
}
.hover\:wt-opacity-100:hover{
  opacity: 1;
}
.hover\:wt-opacity-\[1\]:hover{
  opacity: 1;
}
.hover\:wt-shadow-border-brand-hover:hover{
  --tw-shadow-color: #A28DF8;
  --tw-shadow: var(--tw-shadow-colored);
}
.hover\:wt-ring-border-neutral-hover:hover{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(169 176 183 / var(--tw-ring-opacity));
}
.hover\:wt-brightness-\[0\.97\]:hover{
  --tw-brightness: brightness(0.97);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.focus\:wt-bg-gray-lightest:focus{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-brand-light-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-brand-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(84 36 179 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-neutral-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-premium-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(198 53 8 / var(--tw-bg-opacity));
}
.active\:wt-bg-error-darker:active{
  --tw-bg-opacity: 1;
  background-color: rgb(161 18 18 / var(--tw-bg-opacity));
}
.active\:wt-bg-error-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(254 236 235 / var(--tw-bg-opacity));
}
.active\:wt-bg-gray-light:active{
  --tw-bg-opacity: 1;
  background-color: rgb(230 234 236 / var(--tw-bg-opacity));
}
.active\:wt-bg-info-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(234 242 255 / var(--tw-bg-opacity));
}
.active\:wt-bg-primary-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.active\:wt-text-text-brand-selected:active{
  --tw-text-opacity: 1;
  color: rgb(84 36 179 / var(--tw-text-opacity));
}
.active\:wt-text-text-premium-selected:active{
  --tw-text-opacity: 1;
  color: rgb(198 53 8 / var(--tw-text-opacity));
}
.active\:wt-opacity-100:active{
  opacity: 1;
}
.active\:wt-shadow-border-brand-selected:active{
  --tw-shadow-color: #845FF3;
  --tw-shadow: var(--tw-shadow-colored);
}
.active\:wt-shadow-info-light:active{
  --tw-shadow-color: #649EFF;
  --tw-shadow: var(--tw-shadow-colored);
}
.enabled\:wt-cursor-pointer:enabled{
  cursor: pointer;
}
.disabled\:wt-text-text-neutral-disabled:disabled{
  --tw-text-opacity: 1;
  color: rgb(169 176 183 / var(--tw-text-opacity));
}
.disabled\:wt-shadow-border-neutral-disabled:disabled{
  --tw-shadow-color: #E6EAEC;
  --tw-shadow: var(--tw-shadow-colored);
}
.disabled\:hover\:wt-bg-transparent:hover:disabled{
  background-color: transparent;
}
.wt-group:hover .group-hover\:wt-visible{
  visibility: visible;
}
.wt-group:hover .group-hover\:wt-border-border-brand-hover{
  --tw-border-opacity: 1;
  border-color: rgb(162 141 248 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-border-border-danger-selected{
  --tw-border-opacity: 1;
  border-color: rgb(233 73 64 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-border-error-main{
  --tw-border-opacity: 1;
  border-color: rgb(244 71 47 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-bg-error-main\/10{
  background-color: rgb(244 71 47 / 0.1);
}
.wt-group:hover .group-hover\:wt-bg-primary-main\/5{
  background-color: rgb(117 63 234 / 0.05);
}
.wt-group:hover .group-hover\:wt-bg-text-info-selected{
  --tw-bg-opacity: 1;
  background-color: rgb(32 70 226 / var(--tw-bg-opacity));
}
.wt-group:hover .group-hover\:wt-text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-peer:checked ~ .peer-checked\:wt-bg-accent-primary{
  --tw-bg-opacity: 1;
  background-color: rgb(41 121 255 / var(--tw-bg-opacity));
}
.wt-peer:checked ~ .peer-checked\:wt-bg-accent-secondary{
  --tw-bg-opacity: 1;
  background-color: rgb(189 213 255 / var(--tw-bg-opacity));
}
.wt-peer:checked ~ .peer-checked\:before\:wt-translate-x-full::before{
  content: var(--tw-content);
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-peer:focus-visible ~ .peer-focus-visible\:wt-outline{
  outline-style: solid;
}
.wt-peer:focus-visible ~ .peer-focus-visible\:wt-outline-offset-2{
  outline-offset: 2px;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGVzL3RhaWx3aW5kLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTs7OztDQUlDO0FBQ0Q7O0VBRUUsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUFBLGVBQWM7RUFBZDtBQUFjOztBQUFkO0VBQUEsd0JBQWM7RUFBZCx3QkFBYztFQUFkLG1CQUFjO0VBQWQsbUJBQWM7RUFBZCxjQUFjO0VBQWQsY0FBYztFQUFkLGNBQWM7RUFBZCxlQUFjO0VBQWQsZUFBYztFQUFkLGFBQWM7RUFBZCxhQUFjO0VBQWQsa0JBQWM7RUFBZCxzQ0FBYztFQUFkLDhCQUFjO0VBQWQsNkJBQWM7RUFBZCw0QkFBYztFQUFkLGVBQWM7RUFBZCxvQkFBYztFQUFkLHNCQUFjO0VBQWQsdUJBQWM7RUFBZCx3QkFBYztFQUFkLGtCQUFjO0VBQWQsMkJBQWM7RUFBZCw0QkFBYztFQUFkLHNDQUFjO0VBQWQsa0NBQWM7RUFBZCwyQkFBYztFQUFkLHNCQUFjO0VBQWQsOEJBQWM7RUFBZCxZQUFjO0VBQWQsa0JBQWM7RUFBZCxnQkFBYztFQUFkLGlCQUFjO0VBQWQsa0JBQWM7RUFBZCxjQUFjO0VBQWQsZ0JBQWM7RUFBZCxhQUFjO0VBQWQsbUJBQWM7RUFBZCxxQkFBYztFQUFkLDJCQUFjO0VBQWQseUJBQWM7RUFBZCwwQkFBYztFQUFkLDJCQUFjO0VBQWQsdUJBQWM7RUFBZCx3QkFBYztFQUFkLHlCQUFjO0VBQWQ7QUFBYzs7QUFBZDtFQUFBLHdCQUFjO0VBQWQsd0JBQWM7RUFBZCxtQkFBYztFQUFkLG1CQUFjO0VBQWQsY0FBYztFQUFkLGNBQWM7RUFBZCxjQUFjO0VBQWQsZUFBYztFQUFkLGVBQWM7RUFBZCxhQUFjO0VBQWQsYUFBYztFQUFkLGtCQUFjO0VBQWQsc0NBQWM7RUFBZCw4QkFBYztFQUFkLDZCQUFjO0VBQWQsNEJBQWM7RUFBZCxlQUFjO0VBQWQsb0JBQWM7RUFBZCxzQkFBYztFQUFkLHVCQUFjO0VBQWQsd0JBQWM7RUFBZCxrQkFBYztFQUFkLDJCQUFjO0VBQWQsNEJBQWM7RUFBZCxzQ0FBYztFQUFkLGtDQUFjO0VBQWQsMkJBQWM7RUFBZCxzQkFBYztFQUFkLDhCQUFjO0VBQWQsWUFBYztFQUFkLGtCQUFjO0VBQWQsZ0JBQWM7RUFBZCxpQkFBYztFQUFkLGtCQUFjO0VBQWQsY0FBYztFQUFkLGdCQUFjO0VBQWQsYUFBYztFQUFkLG1CQUFjO0VBQWQscUJBQWM7RUFBZCwyQkFBYztFQUFkLHlCQUFjO0VBQWQsMEJBQWM7RUFBZCwyQkFBYztFQUFkLHVCQUFjO0VBQWQsd0JBQWM7RUFBZCx5QkFBYztFQUFkO0FBQWM7QUFDZDtFQUFBLGVBQW9CO0VBQXBCLGdDQUFvQjtFQUFwQixnQkFBb0I7RUFBcEIsaUJBQW9CO0VBQXBCLG1CQUFvQjtFQUFwQixvQkFBb0I7RUFBcEIscUJBQW9CO0VBQXBCLG1DQUFvQjtFQUFwQjtBQUFvQjtBQUFwQjtFQUFBLGVBQW9CO0VBQXBCLGdDQUFvQjtFQUFwQixnQkFBb0I7RUFBcEIsaUJBQW9CO0VBQXBCLG1CQUFvQjtFQUFwQixvQkFBb0I7RUFBcEIscUJBQW9CO0VBQXBCLG1DQUFvQjtFQUFwQjtBQUFvQjtBQUFwQjtFQUFBLGVBQW9CO0VBQXBCLGdDQUFvQjtFQUFwQixnQkFBb0I7RUFBcEIsaUJBQW9CO0VBQXBCLG1CQUFvQjtFQUFwQixvQkFBb0I7RUFBcEIscUJBQW9CO0VBQXBCLG1DQUFvQjtFQUFwQjtBQUFvQjtBQUFwQjtFQUFBLGVBQW9CO0VBQXBCLGdDQUFvQjtFQUFwQixnQkFBb0I7RUFBcEIsaUJBQW9CO0VBQXBCLG1CQUFvQjtFQUFwQixvQkFBb0I7RUFBcEIscUJBQW9CO0VBQXBCLG1DQUFvQjtFQUFwQjtBQUFvQjtBQUFwQjtFQUFBLGVBQW9CO0VBQXBCLGdDQUFvQjtFQUFwQixnQkFBb0I7RUFBcEIsaUJBQW9CO0VBQXBCLG1CQUFvQjtFQUFwQixvQkFBb0I7RUFBcEIscUJBQW9CO0VBQXBCLG1DQUFvQjtFQUFwQjtBQUFvQjtBQVloQjs7RUFBQTtBQUFvQjtBQUd0QjtJQUNFLFVBQVU7SUFDVixXQUFXO0VBQ2I7QUFDQTtJQUNFLFVBQVU7SUFDVixXQUFXO0VBQ2I7QUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsbUJBQW1CO0VBQ3JCO0FBQ0E7SUFDRSxtQkFBbUI7RUFDckI7QUFDQTtJQUNFLG1CQUFtQjtFQUNyQjtBQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixrQkFBa0I7RUFDcEI7QUFDQTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0FBQ0E7SUFDRSx1QkFBdUI7RUFDekI7QUFLRTtFQUFBLG9CQUFxQztFQUFyQztBQUFxQztBQW5EekM7RUFBQSxrQkFBbUI7RUFBbkIsVUFBbUI7RUFBbkIsV0FBbUI7RUFBbkIsVUFBbUI7RUFBbkIsWUFBbUI7RUFBbkIsZ0JBQW1CO0VBQW5CLHNCQUFtQjtFQUFuQixtQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxnQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxpQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxlQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGdCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGVBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsd0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBLHVCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZUFBbUI7RUFBbkIsZUFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxpQkFBbUI7RUFBbkIsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtJQUFBO0VBQW1CO0FBQUE7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBLHlCQUFtQjtLQUFuQixzQkFBbUI7VUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO09BQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO09BQW5CO0FBQW1CO0FBQW5CO0VBQUEsdUJBQW1CO0VBQW5CLDJEQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxnQ0FBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxnQ0FBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSw0QkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxzQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxrQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBLGlCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGlCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGlCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGlCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtCQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGVBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsbUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsa0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaUJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBLGVBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxlQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGVBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZUFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxlQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsb0JBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUEsMENBQW1CO0VBQW5CLGlFQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLDRDQUFtQjtFQUFuQixtRUFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSwwQ0FBbUI7RUFBbkIsaUVBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsMkNBQW1CO0VBQW5CLGtFQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGlDQUFtQjtFQUFuQix3REFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSwrQ0FBbUI7RUFBbkIsd0RBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsaURBQW1CO0VBQW5CLDZEQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLGtJQUFtQjtFQUFuQixnSkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxnREFBbUI7RUFBbkIsd0RBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsMEJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsOEJBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSwyR0FBbUI7RUFBbkIseUdBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQSxvQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxvQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSxvQkFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSw4QkFBbUI7RUFBbkIsK1FBQW1CO1VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsZ0tBQW1CO0VBQW5CLHdKQUFtQjtFQUFuQixpTEFBbUI7RUFBbkIsd0RBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsMEJBQW1CO0VBQW5CLHdEQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLDBCQUFtQjtFQUFuQix3REFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQSx3QkFBbUI7RUFBbkIsd0RBQW1CO0VBQW5CO0FBQW1CO0FBQW5CO0VBQUEsK0ZBQW1CO0VBQW5CLHdEQUFtQjtFQUFuQjtBQUFtQjtBQUFuQjtFQUFBLDRCQUFtQjtFQUFuQix3REFBbUI7RUFBbkI7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFBbkI7RUFBQTtBQUFtQjtBQUFuQjtFQUFBO0FBQW1CO0FBQW5CO0VBQUE7QUFBbUI7QUFmbkI7RUFBQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUEsb0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsb0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBLGtCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBLDBCQXFFQTtFQXJFQSwwRUFxRUE7RUFyRUEsOEZBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBLDhCQXFFQTtFQXJFQSx3REFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSwwQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxnQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUEsc0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBLGtCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBLGtCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsa0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQSwwQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxpQ0FxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBLDBCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBLDBCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUEsb0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUEsMEJBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQTtBQXJFQTtFQUFBLHNCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBLHNCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBLHNCQXFFQTtFQXJFQTtBQXFFQTtBQXJFQTtFQUFBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxvQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSxrQkFxRUE7RUFyRUE7QUFxRUE7QUFyRUE7RUFBQSwwQkFxRUE7RUFyRUEsc0JBcUVBO0VBckVBO0FBcUVBO0FBckVBO0VBQUE7QUFxRUE7QUFyRUE7RUFBQTtBQXFFQSIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uL2ZvbnRzL2ZvbnRzLmNzcyc7XG5cbi8qIFxuICAgIEFsbG93IGFkZGluZyBhIGJvcmRlciB0byBhbiBlbGVtZW50IGJ5IGp1c3QgYWRkaW5nIGEgYm9yZGVyLXdpZHRoLiAoaHR0cHM6IC8vZ2l0aHViLmNvbS90YWlsd2luZGNzcy90YWlsd2luZGNzcy9wdWxsLzExNilcbiAgICAvLyBieSBkZWZhdWx0IHRoaXMgZ2V0IGxvYWRlZCBmcm9tIHByZWZsaWdodCBzZXR0aW5nIChyZXNldCBjc3MpLCBcbiAgICAvLyBidXQgd2UgbmVlZCB0byBzZXQgdGhpcyB0byBmYWxzZSBhcyB0aGlzIG92ZXJyaWRlcyBleHRlcm5hbCBzaXRlcyB0aGF0IGNvbnRlbnQgaXMgbG9hZGVkIHRvXG4qL1xuW2NsYXNzXj0nd3QtJ10sXG5bY2xhc3MqPScgd3QtJ10ge1xuICBib3JkZXItd2lkdGg6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG59XG5cbkB0YWlsd2luZCBiYXNlO1xuQHRhaWx3aW5kIGNvbXBvbmVudHM7XG5AdGFpbHdpbmQgdXRpbGl0aWVzO1xuXG5AbGF5ZXIgYmFzZSB7XG4gIGgzIHtcbiAgICBAYXBwbHkgd3QtdGV4dC1iYXNlO1xuICB9XG59XG5cbkBsYXllciBjb21wb25lbnRzIHtcbiAgLnd0LXJld3JpdGUtY2FyZCAud3QtbWVudS1pdGVtLFxuICAud3QtcmV3cml0ZS1jYXJkIC53dC1kcm9wZG93biBidXR0b24ge1xuICAgIEBhcHBseSB3dC1jYXBpdGFsaXplO1xuICB9XG5cbiAgLnd0LXNjcm9sbGJhcjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIHdpZHRoOiA4cHg7XG4gICAgaGVpZ2h0OiA4cHg7XG4gIH1cbiAgLnd0LXNjcm9sbGJhcjo6LXdlYmtpdC1zY3JvbGxiYXItYnV0dG9uIHtcbiAgICB3aWR0aDogOHB4O1xuICAgIGhlaWdodDogOHB4O1xuICB9XG4gIC53dC1zY3JvbGxiYXI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xuICAgIGJvcmRlcjogMHB4IHNvbGlkICNmZmZmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgfVxuICAud3Qtc2Nyb2xsYmFyOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2U2ZTZlNjtcbiAgfVxuICAud3Qtc2Nyb2xsYmFyOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICNlNmU2ZTY7XG4gIH1cbiAgLnd0LXNjcm9sbGJhcjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlcjogMjhweCBub25lICM3NTQ5OGQ7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9XG4gIC53dC1zY3JvbGxiYXI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgfVxuICAud3Qtc2Nyb2xsYmFyOjotd2Via2l0LXNjcm9sbGJhci10cmFjazphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICNmMmYyZjI7XG4gIH1cbiAgLnd0LXNjcm9sbGJhcjo6LXdlYmtpdC1zY3JvbGxiYXItY29ybmVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgfVxuICBhLnd0LWxpbms6bGluayB7XG4gICAgQGFwcGx5IHd0LXRleHQtYmctbmV1dHJhbC1wcmltYXJ5LWRlZmF1bHQ7XG4gIH1cbiAgYS53dC1saW5rLXNlY29uZGFyeTpsaW5rIHtcbiAgICBAYXBwbHkgd3QtdGV4dC10ZXh0LW5ldXRyYWwtc2Vjb25kYXJ5O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */</wordtune-style><wordtune-style>@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap);</wordtune-style><wordtune-style>/*! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com*/*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}:after,:before{--tw-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:initial}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:initial;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:initial}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,::backdrop,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.ds-prose-components-button-large{font-size:16px}.ds-prose-components-button-large,.ds-prose-components-button-medium{font-family:Inter,sans-serif;font-weight:500;line-height:24px;letter-spacing:0;text-transform:none;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.ds-prose-components-button-medium{font-size:14px}.ds-prose-components-button-small{line-height:20px}.ds-prose-components-button-small,.ds-prose-components-tag{font-size:14px;font-family:Inter,sans-serif;font-weight:500;letter-spacing:0;text-transform:none;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.ds-prose-components-tag{line-height:16px}.ds-prose-components-tooltip-regular{font-size:10px;font-weight:600;line-height:14px}.ds-prose-components-tooltip-regular,.ds-prose-system-body1-regular{font-family:Inter,sans-serif;letter-spacing:0;text-transform:none;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.ds-prose-system-body1-regular{font-size:14px;font-weight:400;line-height:24px}.ds-invisible{visibility:hidden}.ds-bottom-0{bottom:0}.ds-z-50{z-index:50}.ds-box-border{box-sizing:border-box}.ds-flex{display:flex}.ds-inline-flex{display:inline-flex}.ds-grid{display:grid}.ds-inline-grid{display:inline-grid}.ds-aspect-square{aspect-ratio:1/1}.ds-h-11{height:2.75rem}.ds-h-4{height:1rem}.ds-h-5{height:1.25rem}.ds-h-6{height:1.5rem}.ds-h-8{height:2rem}.ds-h-9{height:2.25rem}.ds-h-\[30px\]{height:30px}.ds-h-fit{height:-moz-fit-content;height:fit-content}.ds-h-full{height:100%}.ds-w-14{width:3.5rem}.ds-w-4{width:1rem}.ds-w-5{width:1.25rem}.ds-w-6{width:1.5rem}.ds-w-fit{width:-moz-fit-content;width:fit-content}.ds-w-full{width:100%}.ds-min-w-\[4\.5rem\]{min-width:4.5rem}.ds-min-w-\[4rem\]{min-width:4rem}.ds-min-w-\[5rem\]{min-width:5rem}.ds-min-w-fit{min-width:-moz-fit-content;min-width:fit-content}.ds-min-w-full{min-width:100%}.ds-shrink-0{flex-shrink:0}.ds-grid-cols-\[repeat\(3\,_auto\)\]{grid-template-columns:repeat(3,auto)}.ds-grid-cols-\[repeat\(7\,_auto\)\]{grid-template-columns:repeat(7,auto)}.ds-flex-row{flex-direction:row}.ds-flex-col{flex-direction:column}.ds-flex-wrap{flex-wrap:wrap}.ds-place-items-center{place-items:center}.ds-content-center{align-content:center}.ds-items-center{align-items:center}.ds-items-stretch{align-items:stretch}.ds-justify-center{justify-content:center}.ds-gap-1{gap:.25rem}.ds-gap-2{gap:.5rem}.ds-gap-4{gap:1rem}.ds-gap-8{gap:2rem}.ds-self-center{align-self:center}.ds-overflow-hidden{overflow:hidden}.ds-whitespace-nowrap{white-space:nowrap}.ds-rounded-s{border-radius:8px}.ds-rounded-xs{border-radius:4px}.ds-border-\[0\.5px\]{border-width:.5px}.ds-border-r{border-right-width:1px}.ds-border-border-neutral-darkmode{--tw-border-opacity:1;border-color:rgb(72 77 86/var(--tw-border-opacity))}.ds-border-text-neutral-disabled{--tw-border-opacity:1;border-color:rgb(169 176 183/var(--tw-border-opacity))}.ds-border-text-neutral-secondary{--tw-border-opacity:1;border-color:rgb(72 77 86/var(--tw-border-opacity))}.ds-bg-\[\#545A66\]{--tw-bg-opacity:1;background-color:rgb(84 90 102/var(--tw-bg-opacity))}.ds-bg-\[\#DAECFD\]{--tw-bg-opacity:1;background-color:rgb(218 236 253/var(--tw-bg-opacity))}.ds-bg-bg-brand-light-default{--tw-bg-opacity:1;background-color:rgb(244 243 255/var(--tw-bg-opacity))}.ds-bg-bg-brand-light-selected{--tw-bg-opacity:1;background-color:rgb(236 233 254/var(--tw-bg-opacity))}.ds-bg-bg-brand-primary-default{--tw-bg-opacity:1;background-color:rgb(117 63 234/var(--tw-bg-opacity))}.ds-bg-bg-danger-light-default{--tw-bg-opacity:1;background-color:rgb(255 241 240/var(--tw-bg-opacity))}.ds-bg-bg-danger-light-selected{--tw-bg-opacity:1;background-color:rgb(255 224 222/var(--tw-bg-opacity))}.ds-bg-bg-danger-primary-default{--tw-bg-opacity:1;background-color:rgb(233 73 64/var(--tw-bg-opacity))}.ds-bg-bg-info-light-default{--tw-bg-opacity:1;background-color:rgb(235 246 255/var(--tw-bg-opacity))}.ds-bg-bg-neutral-primary-default{--tw-bg-opacity:1;background-color:rgb(57 59 64/var(--tw-bg-opacity))}.ds-bg-bg-neutral-primary-disabled{--tw-bg-opacity:1;background-color:rgb(245 246 246/var(--tw-bg-opacity))}.ds-bg-bg-premium-light-default{--tw-bg-opacity:1;background-color:rgb(252 251 249/var(--tw-bg-opacity))}.ds-bg-bg-premium-light-selected{--tw-bg-opacity:1;background-color:rgb(255 246 237/var(--tw-bg-opacity))}.ds-bg-bg-premium-primary-default{--tw-bg-opacity:1;background-color:rgb(254 102 17/var(--tw-bg-opacity))}.ds-bg-bg-success-light-default{--tw-bg-opacity:1;background-color:rgb(240 253 243/var(--tw-bg-opacity))}.ds-bg-bg-success-light-selected{--tw-bg-opacity:1;background-color:rgb(219 253 228/var(--tw-bg-opacity))}.ds-bg-bg-success-primary-default{--tw-bg-opacity:1;background-color:rgb(17 168 60/var(--tw-bg-opacity))}.ds-bg-bg-success-primary-hover{--tw-bg-opacity:1;background-color:rgb(17 132 50/var(--tw-bg-opacity))}.ds-bg-bg-system-light-default{--tw-bg-opacity:1;background-color:rgb(248 248 245/var(--tw-bg-opacity))}.ds-bg-bg-system-primary-default{--tw-bg-opacity:1;background-color:rgb(120 104 86/var(--tw-bg-opacity))}.ds-bg-bg-turquoise-light-default{--tw-bg-opacity:1;background-color:rgb(237 254 254/var(--tw-bg-opacity))}.ds-bg-bg-turquoise-light-selected{--tw-bg-opacity:1;background-color:rgb(210 251 251/var(--tw-bg-opacity))}.ds-bg-bg-warning-light-default{--tw-bg-opacity:1;background-color:rgb(254 252 232/var(--tw-bg-opacity))}.ds-bg-bg-warning-light-selected{--tw-bg-opacity:1;background-color:rgb(255 249 194/var(--tw-bg-opacity))}.ds-bg-bg-warning-primary-default{--tw-bg-opacity:1;background-color:rgb(206 136 0/var(--tw-bg-opacity))}.ds-bg-border-brand-selected{--tw-bg-opacity:1;background-color:rgb(132 95 243/var(--tw-bg-opacity))}.ds-bg-border-neutral-disabled{--tw-bg-opacity:1;background-color:rgb(230 234 236/var(--tw-bg-opacity))}.ds-bg-paper-dark{--tw-bg-opacity:1;background-color:rgb(23 24 28/var(--tw-bg-opacity))}.ds-bg-text-danger-default{--tw-bg-opacity:1;background-color:rgb(210 15 3/var(--tw-bg-opacity))}.ds-bg-text-info-selected{--tw-bg-opacity:1;background-color:rgb(32 70 226/var(--tw-bg-opacity))}.ds-bg-text-turquoise-hover{--tw-bg-opacity:1;background-color:rgb(22 120 136/var(--tw-bg-opacity))}.ds-bg-transparent{background-color:initial}.ds-fill-bg-danger-primary-default{fill:#e94940}.ds-fill-paper-dark{fill:#17181c}.ds-p-1{padding:.25rem}.ds-p-2{padding:.5rem}.ds-px-1{padding-left:.25rem;padding-right:.25rem}.ds-px-2{padding-left:.5rem;padding-right:.5rem}.ds-px-2\.5{padding-left:.625rem;padding-right:.625rem}.ds-px-3{padding-left:.75rem;padding-right:.75rem}.ds-px-4{padding-left:1rem;padding-right:1rem}.ds-py-1{padding-top:.25rem;padding-bottom:.25rem}.ds-py-1\.5{padding-top:.375rem;padding-bottom:.375rem}.ds-py-2{padding-top:.5rem;padding-bottom:.5rem}.ds-py-2\.5{padding-top:.625rem;padding-bottom:.625rem}.ds-py-3{padding-top:.75rem;padding-bottom:.75rem}.ds-text-lg{font-size:1.125rem;line-height:1.75rem}.ds-text-sm{font-size:.875rem;line-height:1.25rem}.ds-text-border-success-default{--tw-text-opacity:1;color:rgb(130 243 161/var(--tw-text-opacity))}.ds-text-text-brand-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-brand-default{--tw-text-opacity:1;color:rgb(117 63 234/var(--tw-text-opacity))}.ds-text-text-brand-selected{--tw-text-opacity:1;color:rgb(84 36 179/var(--tw-text-opacity))}.ds-text-text-danger-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-danger-default{--tw-text-opacity:1;color:rgb(210 15 3/var(--tw-text-opacity))}.ds-text-text-danger-selected{--tw-text-opacity:1;color:rgb(143 21 13/var(--tw-text-opacity))}.ds-text-text-info-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-info-hover{--tw-text-opacity:1;color:rgb(61 103 255/var(--tw-text-opacity))}.ds-text-text-info-selected{--tw-text-opacity:1;color:rgb(32 70 226/var(--tw-text-opacity))}.ds-text-text-neutral-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-neutral-darkmode-secondary{color:#fffc}.ds-text-text-neutral-disabled{--tw-text-opacity:1;color:rgb(169 176 183/var(--tw-text-opacity))}.ds-text-text-neutral-primary{--tw-text-opacity:1;color:rgb(40 42 47/var(--tw-text-opacity))}.ds-text-text-neutral-secondary{--tw-text-opacity:1;color:rgb(72 77 86/var(--tw-text-opacity))}.ds-text-text-premium-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-premium-default{--tw-text-opacity:1;color:rgb(254 102 17/var(--tw-text-opacity))}.ds-text-text-premium-selected{--tw-text-opacity:1;color:rgb(198 53 8/var(--tw-text-opacity))}.ds-text-text-success-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-success-default{--tw-text-opacity:1;color:rgb(17 132 50/var(--tw-text-opacity))}.ds-text-text-success-hover{--tw-text-opacity:1;color:rgb(19 104 44/var(--tw-text-opacity))}.ds-text-text-system-contrast,.ds-text-text-turquoise-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-turquoise-hover{--tw-text-opacity:1;color:rgb(22 120 136/var(--tw-text-opacity))}.ds-text-text-turquoise-selected{--tw-text-opacity:1;color:rgb(27 97 111/var(--tw-text-opacity))}.ds-text-text-warning-contrast{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.ds-text-text-warning-default{--tw-text-opacity:1;color:rgb(164 96 4/var(--tw-text-opacity))}.ds-text-text-warning-selected{--tw-text-opacity:1;color:rgb(115 61 16/var(--tw-text-opacity))}.ds-text-white\/80{color:#fffc}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.brand\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #c1b6fc;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.danger\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #ff9d97;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.neutral\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #ccd0d5;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.success\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #82f3a1;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.system\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #dcd9cc;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.ds-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.warning\.default\)\]{--tw-shadow:inset 0px 0px 0px 1px #ffdf43;--tw-shadow-colored:inset 0px 0px 0px 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}@keyframes enter{0%{opacity:var(--tw-enter-opacity,1);transform:translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0) scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1)) rotate(var(--tw-enter-rotate,0))}}@keyframes exit{to{opacity:var(--tw-exit-opacity,1);transform:translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0) scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1)) rotate(var(--tw-exit-rotate,0))}}.hover\:ds-border-border-neutral-darkmode:hover{--tw-border-opacity:1;border-color:rgb(72 77 86/var(--tw-border-opacity))}.hover\:ds-bg-bg-brand-light-default:hover{--tw-bg-opacity:1;background-color:rgb(244 243 255/var(--tw-bg-opacity))}.hover\:ds-bg-bg-brand-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(101 43 214/var(--tw-bg-opacity))}.hover\:ds-bg-bg-danger-light-default:hover{--tw-bg-opacity:1;background-color:rgb(255 241 240/var(--tw-bg-opacity))}.hover\:ds-bg-bg-danger-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(227 46 35/var(--tw-bg-opacity))}.hover\:ds-bg-bg-neutral-darkmode-hover:hover{--tw-bg-opacity:1;background-color:rgb(40 42 47/var(--tw-bg-opacity))}.hover\:ds-bg-bg-neutral-light-hover:hover{background-color:#393b400a}.hover\:ds-bg-bg-neutral-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(23 24 28/var(--tw-bg-opacity))}.hover\:ds-bg-bg-premium-light-default:hover{--tw-bg-opacity:1;background-color:rgb(252 251 249/var(--tw-bg-opacity))}.hover\:ds-bg-bg-premium-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(239 74 7/var(--tw-bg-opacity))}.hover\:ds-bg-bg-success-light-default:hover{--tw-bg-opacity:1;background-color:rgb(240 253 243/var(--tw-bg-opacity))}.hover\:ds-bg-bg-success-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(17 132 50/var(--tw-bg-opacity))}.hover\:ds-bg-bg-system-light-hover:hover{--tw-bg-opacity:1;background-color:rgb(238 237 230/var(--tw-bg-opacity))}.hover\:ds-bg-bg-system-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(99 86 73/var(--tw-bg-opacity))}.hover\:ds-bg-bg-warning-light-default:hover{--tw-bg-opacity:1;background-color:rgb(254 252 232/var(--tw-bg-opacity))}.hover\:ds-bg-bg-warning-primary-hover:hover{--tw-bg-opacity:1;background-color:rgb(164 96 4/var(--tw-bg-opacity))}.hover\:ds-text-text-brand-hover:hover{--tw-text-opacity:1;color:rgb(101 43 214/var(--tw-text-opacity))}.hover\:ds-text-text-danger-hover:hover{--tw-text-opacity:1;color:rgb(173 17 7/var(--tw-text-opacity))}.hover\:ds-text-text-neutral-darkmode-secondary:hover{color:#fffc}.hover\:ds-text-text-neutral-primary:hover{--tw-text-opacity:1;color:rgb(40 42 47/var(--tw-text-opacity))}.hover\:ds-text-text-premium-hover:hover{--tw-text-opacity:1;color:rgb(239 74 7/var(--tw-text-opacity))}.hover\:ds-text-text-success-hover:hover{--tw-text-opacity:1;color:rgb(19 104 44/var(--tw-text-opacity))}.hover\:ds-text-text-warning-hover:hover{--tw-text-opacity:1;color:rgb(136 75 11/var(--tw-text-opacity))}.hover\:ds-shadow-border-brand-hover:hover{--tw-shadow-color:#a28df8;--tw-shadow:var(--tw-shadow-colored)}.hover\:ds-shadow-border-danger-hover:hover{--tw-shadow-color:#ff655c;--tw-shadow:var(--tw-shadow-colored)}.hover\:ds-shadow-border-neutral-hover:hover{--tw-shadow-color:#a9b0b7;--tw-shadow:var(--tw-shadow-colored)}.hover\:ds-shadow-border-success-hover:hover{--tw-shadow-color:#45e371;--tw-shadow:var(--tw-shadow-colored)}.hover\:ds-shadow-border-system-hover:hover{--tw-shadow-color:#c5bfac;--tw-shadow:var(--tw-shadow-colored)}.hover\:ds-shadow-border-warning-hover:hover{--tw-shadow-color:#ffd029;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-border-border-neutral-darkmode:active{--tw-border-opacity:1;border-color:rgb(72 77 86/var(--tw-border-opacity))}.active\:ds-bg-bg-brand-light-selected:active{--tw-bg-opacity:1;background-color:rgb(236 233 254/var(--tw-bg-opacity))}.active\:ds-bg-bg-brand-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(84 36 179/var(--tw-bg-opacity))}.active\:ds-bg-bg-danger-light-selected:active{--tw-bg-opacity:1;background-color:rgb(255 224 222/var(--tw-bg-opacity))}.active\:ds-bg-bg-danger-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(210 15 3/var(--tw-bg-opacity))}.active\:ds-bg-bg-neutral-darkmode-selected:active{--tw-bg-opacity:1;background-color:rgb(57 59 64/var(--tw-bg-opacity))}.active\:ds-bg-bg-neutral-light-selected:active{background-color:#393b401a}.active\:ds-bg-bg-neutral-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity))}.active\:ds-bg-bg-premium-light-selected:active{--tw-bg-opacity:1;background-color:rgb(255 246 237/var(--tw-bg-opacity))}.active\:ds-bg-bg-premium-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(198 53 8/var(--tw-bg-opacity))}.active\:ds-bg-bg-success-light-selected:active{--tw-bg-opacity:1;background-color:rgb(219 253 228/var(--tw-bg-opacity))}.active\:ds-bg-bg-success-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(19 104 44/var(--tw-bg-opacity))}.active\:ds-bg-bg-system-light-selected:active{--tw-bg-opacity:1;background-color:rgb(232 230 222/var(--tw-bg-opacity))}.active\:ds-bg-bg-system-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(81 71 61/var(--tw-bg-opacity))}.active\:ds-bg-bg-warning-light-selected:active{--tw-bg-opacity:1;background-color:rgb(255 249 194/var(--tw-bg-opacity))}.active\:ds-bg-bg-warning-primary-selected:active{--tw-bg-opacity:1;background-color:rgb(136 75 11/var(--tw-bg-opacity))}.active\:ds-text-text-brand-selected:active{--tw-text-opacity:1;color:rgb(84 36 179/var(--tw-text-opacity))}.active\:ds-text-text-danger-selected:active{--tw-text-opacity:1;color:rgb(143 21 13/var(--tw-text-opacity))}.active\:ds-text-text-neutral-darkmode-secondary:active{color:#fffc}.active\:ds-text-text-neutral-primary:active{--tw-text-opacity:1;color:rgb(40 42 47/var(--tw-text-opacity))}.active\:ds-text-text-premium-selected:active{--tw-text-opacity:1;color:rgb(198 53 8/var(--tw-text-opacity))}.active\:ds-text-text-success-selected:active{--tw-text-opacity:1;color:rgb(18 85 39/var(--tw-text-opacity))}.active\:ds-text-text-warning-selected:active{--tw-text-opacity:1;color:rgb(115 61 16/var(--tw-text-opacity))}.active\:ds-shadow-border-brand-selected:active{--tw-shadow-color:#845ff3;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-shadow-border-danger-selected:active{--tw-shadow-color:#e94940;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-shadow-border-neutral-selected:active{--tw-shadow-color:#7e8792;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-shadow-border-success-selected:active{--tw-shadow-color:#23e058;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-shadow-border-system-selected:active{--tw-shadow-color:#ada38a;--tw-shadow:var(--tw-shadow-colored)}.active\:ds-shadow-border-warning-selected:active{--tw-shadow-color:#efb203;--tw-shadow:var(--tw-shadow-colored)}.disabled\:ds-bg-bg-neutral-primary-disabled:disabled{--tw-bg-opacity:1;background-color:rgb(245 246 246/var(--tw-bg-opacity))}.disabled\:ds-bg-transparent:disabled{background-color:initial}.disabled\:ds-text-text-neutral-disabled:disabled{--tw-text-opacity:1;color:rgb(169 176 183/var(--tw-text-opacity))}.disabled\:ds-shadow-border-neutral-disabled:disabled{--tw-shadow-color:#e6eaec;--tw-shadow:var(--tw-shadow-colored)}.disabled\:hover\:ds-bg-transparent:hover:disabled{background-color:initial}.data-\[state\=open\]\:ds-animate-in[data-state=open]{animation-name:enter;animation-duration:.15s;--tw-enter-opacity:initial;--tw-enter-scale:initial;--tw-enter-rotate:initial;--tw-enter-translate-x:initial;--tw-enter-translate-y:initial}.data-\[state\=closed\]\:ds-animate-out[data-state=closed]{animation-name:exit;animation-duration:.15s;--tw-exit-opacity:initial;--tw-exit-scale:initial;--tw-exit-rotate:initial;--tw-exit-translate-x:initial;--tw-exit-translate-y:initial}.data-\[state\=closed\]\:ds-fade-out-0[data-state=closed]{--tw-exit-opacity:0}.data-\[state\=open\]\:ds-fade-in-0[data-state=open]{--tw-enter-opacity:0}.data-\[state\=closed\]\:ds-zoom-out-95[data-state=closed]{--tw-exit-scale:.95}.data-\[state\=open\]\:ds-zoom-in-95[data-state=open]{--tw-enter-scale:.95}.data-\[state\=closed\]\:ds-slide-out-to-bottom-2[data-state=closed]{--tw-exit-translate-y:0.5rem}.data-\[state\=open\]\:ds-slide-in-from-bottom-2[data-state=open]{--tw-enter-translate-y:0.5rem}
/*# sourceMappingURL=data:application/json;base64, */</wordtune-style><wordtune-style>/* 
    Allow adding a border to an element by just adding a border-width. (https: //github.com/tailwindcss/tailwindcss/pull/116)
    // by default this get loaded from preflight setting (reset css), 
    // but we need to set this to false as this overrides external sites that content is loaded to
*/
[class^='wt-'],
[class*=' wt-'] {
  border-width: 0;
  border-style: solid;
}

h3{
  font-size: 16px;
  line-height: 24px;
}

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.wt-prose-components-button-medium{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body1-bold{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 600;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body1-regular{
  font-size: 14px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body2-bold{
  font-size: 12px;
  font-family: "Inter", sans-serif;
  font-weight: 600;
  line-height: 20px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-prose-system-body2-regular{
  font-size: 12px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 20px;
  letter-spacing: 0px;
  text-transform: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.wt-rewrite-card .wt-menu-item,
  .wt-rewrite-card .wt-dropdown button{
  text-transform: capitalize;
}
.wt-scrollbar::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-button {
    width: 8px;
    height: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-thumb {
    background: #f2f2f2;
    border: 0px solid #ffffff;
    border-radius: 50px;
  }
.wt-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #e6e6e6;
  }
.wt-scrollbar::-webkit-scrollbar-thumb:active {
    background: #e6e6e6;
  }
.wt-scrollbar::-webkit-scrollbar-track {
    background: white;
    border: 28px none #75498d;
    border-radius: 8px;
  }
.wt-scrollbar::-webkit-scrollbar-track:hover {
    background: white;
  }
.wt-scrollbar::-webkit-scrollbar-track:active {
    background: #f2f2f2;
  }
.wt-scrollbar::-webkit-scrollbar-corner {
    background: transparent;
  }
.wt-sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.wt-invisible{
  visibility: hidden;
}
.wt-fixed{
  position: fixed;
}
.wt-absolute{
  position: absolute;
}
.wt-relative{
  position: relative;
}
.wt-inset-0{
  inset: 0px;
}
.-wt-right-\[55px\]{
  right: -55px;
}
.wt-bottom-0{
  bottom: 0px;
}
.wt-bottom-1{
  bottom: 4px;
}
.wt-right-0{
  right: 0px;
}
.wt-right-1{
  right: 4px;
}
.wt-right-4{
  right: 16px;
}
.wt-right-\[8px\]{
  right: 8px;
}
.wt-top-0{
  top: 0px;
}
.wt-top-1{
  top: 4px;
}
.wt-top-11{
  top: 44px;
}
.wt-top-2{
  top: 8px;
}
.wt-top-4{
  top: 16px;
}
.wt-top-\[-20px\]{
  top: -20px;
}
.wt-top-\[0\]{
  top: 0;
}
.wt-top-\[80px\]{
  top: 80px;
}
.wt-z-0{
  z-index: 0;
}
.wt-z-10{
  z-index: 10;
}
.wt-z-\[10000\]{
  z-index: 10000;
}
.wt-z-\[1099\]{
  z-index: 1099;
}
.wt-z-\[2099\]{
  z-index: 2099;
}
.wt-z-\[9999\]{
  z-index: 9999;
}
.wt-m-0{
  margin: 0px;
}
.wt-m-10{
  margin: 40px;
}
.wt-m-20{
  margin: 80px;
}
.wt-m-5{
  margin: 20px;
}
.wt-mx-2{
  margin-left: 8px;
  margin-right: 8px;
}
.wt-mx-4{
  margin-left: 16px;
  margin-right: 16px;
}
.wt-my-2{
  margin-top: 8px;
  margin-bottom: 8px;
}
.wt-my-2\.5{
  margin-top: 10px;
  margin-bottom: 10px;
}
.wt-my-\[8px\]{
  margin-top: 8px;
  margin-bottom: 8px;
}
.wt-mb-0{
  margin-bottom: 0px;
}
.wt-mb-0\.5{
  margin-bottom: 2px;
}
.wt-mb-2{
  margin-bottom: 8px;
}
.wt-mb-3{
  margin-bottom: 12px;
}
.wt-mb-8{
  margin-bottom: 32px;
}
.wt-mb-\[12px\]{
  margin-bottom: 12px;
}
.wt-mb-\[24px\]{
  margin-bottom: 24px;
}
.wt-mb-\[2px\]{
  margin-bottom: 2px;
}
.wt-ml-1{
  margin-left: 4px;
}
.wt-ml-2{
  margin-left: 8px;
}
.wt-ml-3{
  margin-left: 12px;
}
.wt-ml-\[2px\]{
  margin-left: 2px;
}
.wt-ml-\[4px\]{
  margin-left: 4px;
}
.wt-ml-auto{
  margin-left: auto;
}
.wt-mr-1{
  margin-right: 4px;
}
.wt-mr-2{
  margin-right: 8px;
}
.wt-mr-4{
  margin-right: 16px;
}
.wt-mr-\[2px\]{
  margin-right: 2px;
}
.wt-mr-\[6px\]{
  margin-right: 6px;
}
.wt-mt-0{
  margin-top: 0px;
}
.wt-mt-0\.5{
  margin-top: 2px;
}
.wt-mt-1{
  margin-top: 4px;
}
.wt-mt-2{
  margin-top: 8px;
}
.wt-mt-2\.5{
  margin-top: 10px;
}
.wt-mt-6{
  margin-top: 24px;
}
.wt-mt-\[4px\]{
  margin-top: 4px;
}
.wt-mt-\[8px\]{
  margin-top: 8px;
}
.wt-box-border{
  box-sizing: border-box;
}
.wt-box-content{
  box-sizing: content-box;
}
.wt-inline-block{
  display: inline-block;
}
.wt-flex{
  display: flex;
}
.wt-inline-flex{
  display: inline-flex;
}
.wt-hidden{
  display: none;
}
.wt-h-10{
  height: 40px;
}
.wt-h-12{
  height: 48px;
}
.wt-h-2{
  height: 8px;
}
.wt-h-3{
  height: 12px;
}
.wt-h-4{
  height: 16px;
}
.wt-h-5{
  height: 20px;
}
.wt-h-6{
  height: 24px;
}
.wt-h-7{
  height: 28px;
}
.wt-h-8{
  height: 32px;
}
.wt-h-96{
  height: 384px;
}
.wt-h-\[11px\]{
  height: 11px;
}
.wt-h-\[24px\]{
  height: 24px;
}
.wt-h-\[33px\]{
  height: 33px;
}
.wt-h-\[381px\]{
  height: 381px;
}
.wt-h-\[52px\]{
  height: 52px;
}
.wt-h-\[72px\]{
  height: 72px;
}
.wt-h-\[calc\(100vh-56px\)\]{
  height: calc(100vh - 56px);
}
.wt-h-auto{
  height: auto;
}
.wt-h-fit{
  height: -moz-fit-content;
  height: fit-content;
}
.wt-h-full{
  height: 100%;
}
.wt-max-h-80{
  max-height: 320px;
}
.wt-max-h-\[208px\]{
  max-height: 208px;
}
.wt-max-h-\[250px\]{
  max-height: 250px;
}
.wt-max-h-\[428px\]{
  max-height: 428px;
}
.wt-min-h-\[190px\]{
  min-height: 190px;
}
.wt-min-h-\[32px\]{
  min-height: 32px;
}
.wt-min-h-\[40px\]{
  min-height: 40px;
}
.wt-min-h-full{
  min-height: 100%;
}
.wt-min-h-screen{
  min-height: 100vh;
}
.wt-w-0{
  width: 0px;
}
.wt-w-10{
  width: 40px;
}
.wt-w-12{
  width: 48px;
}
.wt-w-2{
  width: 8px;
}
.wt-w-4{
  width: 16px;
}
.wt-w-40{
  width: 160px;
}
.wt-w-48{
  width: 192px;
}
.wt-w-5{
  width: 20px;
}
.wt-w-6{
  width: 24px;
}
.wt-w-60{
  width: 240px;
}
.wt-w-72{
  width: 288px;
}
.wt-w-8{
  width: 32px;
}
.wt-w-80{
  width: 320px;
}
.wt-w-96{
  width: 384px;
}
.wt-w-\[100\%\]{
  width: 100%;
}
.wt-w-\[165px\]{
  width: 165px;
}
.wt-w-\[200px\]{
  width: 200px;
}
.wt-w-\[213px\]{
  width: 213px;
}
.wt-w-\[24px\]{
  width: 24px;
}
.wt-w-\[272px\]{
  width: 272px;
}
.wt-w-\[328px\]{
  width: 328px;
}
.wt-w-\[360px\]{
  width: 360px;
}
.wt-w-\[368px\]{
  width: 368px;
}
.wt-w-\[380px\]{
  width: 380px;
}
.wt-w-\[400px\]{
  width: 400px;
}
.wt-w-\[48px\]{
  width: 48px;
}
.wt-w-\[520px\]{
  width: 520px;
}
.wt-w-\[600px\]{
  width: 600px;
}
.wt-w-\[72px\]{
  width: 72px;
}
.wt-w-\[740px\]{
  width: 740px;
}
.wt-w-auto{
  width: auto;
}
.wt-w-fit{
  width: -moz-fit-content;
  width: fit-content;
}
.wt-w-full{
  width: 100%;
}
.wt-min-w-0{
  min-width: 0px;
}
.wt-min-w-\[160px\]{
  min-width: 160px;
}
.wt-min-w-\[300px\]{
  min-width: 300px;
}
.wt-max-w-3xl{
  max-width: 768px;
}
.wt-max-w-\[442px\]{
  max-width: 442px;
}
.wt-max-w-\[600px\]{
  max-width: 600px;
}
.wt-max-w-full{
  max-width: 100%;
}
.wt-flex-1{
  flex: 1 1 0%;
}
.wt-flex-none{
  flex: none;
}
.wt-shrink-0{
  flex-shrink: 0;
}
.wt-grow{
  flex-grow: 1;
}
.wt-basis-0{
  flex-basis: 0px;
}
.wt-rotate-45{
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-scale-100{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-scale-95{
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes wt-pulse{
  50%{
    opacity: .5;
  }
}
.wt-animate-pulse{
  animation: wt-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.wt-cursor-default{
  cursor: default;
}
.wt-cursor-ns-resize{
  cursor: ns-resize;
}
.wt-cursor-pointer{
  cursor: pointer;
}
.wt-select-none{
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.wt-list-none{
  list-style-type: none;
}
.wt-flex-row{
  flex-direction: row;
}
.wt-flex-row-reverse{
  flex-direction: row-reverse;
}
.wt-flex-col{
  flex-direction: column;
}
.wt-flex-wrap{
  flex-wrap: wrap;
}
.wt-content-center{
  align-content: center;
}
.wt-items-start{
  align-items: flex-start;
}
.wt-items-end{
  align-items: flex-end;
}
.wt-items-center{
  align-items: center;
}
.wt-justify-end{
  justify-content: flex-end;
}
.wt-justify-center{
  justify-content: center;
}
.wt-justify-between{
  justify-content: space-between;
}
.wt-justify-items-center{
  justify-items: center;
}
.wt-gap-0{
  gap: 0px;
}
.wt-gap-0\.5{
  gap: 2px;
}
.wt-gap-1{
  gap: 4px;
}
.wt-gap-1\.5{
  gap: 6px;
}
.wt-gap-2{
  gap: 8px;
}
.wt-gap-3{
  gap: 12px;
}
.wt-gap-4{
  gap: 16px;
}
.wt-gap-\[12px\]{
  gap: 12px;
}
.wt-gap-\[14px\]{
  gap: 14px;
}
.wt-gap-\[32px\]{
  gap: 32px;
}
.wt-gap-\[3px\]{
  gap: 3px;
}
.wt-gap-\[4px\]{
  gap: 4px;
}
.wt-gap-\[8px\]{
  gap: 8px;
}
.wt-gap-x-1{
  -moz-column-gap: 4px;
       column-gap: 4px;
}
.wt-gap-x-2{
  -moz-column-gap: 8px;
       column-gap: 8px;
}
.wt-space-y-2 &gt; :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(8px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(8px * var(--tw-space-y-reverse));
}
.wt-self-center{
  align-self: center;
}
.wt-self-stretch{
  align-self: stretch;
}
.wt-justify-self-center{
  justify-self: center;
}
.wt-overflow-auto{
  overflow: auto;
}
.wt-overflow-hidden{
  overflow: hidden;
}
.wt-overflow-y-auto{
  overflow-y: auto;
}
.wt-overflow-x-hidden{
  overflow-x: hidden;
}
.wt-overflow-ellipsis{
  text-overflow: ellipsis;
}
.wt-whitespace-nowrap{
  white-space: nowrap;
}
.wt-whitespace-pre-wrap{
  white-space: pre-wrap;
}
.wt-break-words{
  overflow-wrap: break-word;
}
.\!wt-rounded-none{
  border-radius: 0px !important;
}
.wt-rounded{
  border-radius: 4px;
}
.wt-rounded-3xl{
  border-radius: 24px;
}
.wt-rounded-\[10px\]{
  border-radius: 10px;
}
.wt-rounded-\[4px\]{
  border-radius: 4px;
}
.wt-rounded-\[8px\]{
  border-radius: 8px;
}
.wt-rounded-full{
  border-radius: 9999px;
}
.wt-rounded-lg{
  border-radius: 8px;
}
.wt-rounded-md{
  border-radius: 6px;
}
.wt-rounded-sm{
  border-radius: 2px;
}
.wt-rounded-xl{
  border-radius: 12px;
}
.wt-rounded-xs{
  border-radius: 4px;
}
.wt-rounded-b-\[12px\]{
  border-bottom-right-radius: 12px;
  border-bottom-left-radius: 12px;
}
.wt-rounded-b-xl{
  border-bottom-right-radius: 12px;
  border-bottom-left-radius: 12px;
}
.wt-rounded-t-xl{
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
}
.wt-rounded-bl-\[12px\]{
  border-bottom-left-radius: 12px;
}
.wt-rounded-bl-\[36px\]{
  border-bottom-left-radius: 36px;
}
.wt-rounded-tl-\[12px\]{
  border-top-left-radius: 12px;
}
.wt-rounded-tl-\[14px\]{
  border-top-left-radius: 14px;
}
.wt-rounded-tl-\[36px\]{
  border-top-left-radius: 36px;
}
.\!wt-border-\[1px\]{
  border-width: 1px !important;
}
.wt-border{
  border-width: 1px;
}
.\!wt-border-t{
  border-top-width: 1px !important;
}
.wt-border-b{
  border-bottom-width: 1px;
}
.wt-border-b-2{
  border-bottom-width: 2px;
}
.wt-border-solid{
  border-style: solid;
}
.wt-border-none{
  border-style: none;
}
.wt-border-border-brand-selected{
  --tw-border-opacity: 1;
  border-color: rgb(132 95 243 / var(--tw-border-opacity));
}
.wt-border-border-danger-default{
  --tw-border-opacity: 1;
  border-color: rgb(255 157 151 / var(--tw-border-opacity));
}
.wt-border-border-danger-selected{
  --tw-border-opacity: 1;
  border-color: rgb(233 73 64 / var(--tw-border-opacity));
}
.wt-border-border-neutral-default{
  --tw-border-opacity: 1;
  border-color: rgb(204 208 213 / var(--tw-border-opacity));
}
.wt-border-border-neutral-divider{
  --tw-border-opacity: 1;
  border-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-border-error-main{
  --tw-border-opacity: 1;
  border-color: rgb(244 71 47 / var(--tw-border-opacity));
}
.wt-border-gray-dark{
  --tw-border-opacity: 1;
  border-color: rgb(160 162 168 / var(--tw-border-opacity));
}
.wt-border-gray-light{
  --tw-border-opacity: 1;
  border-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-border-gray-lighter{
  --tw-border-opacity: 1;
  border-color: rgb(245 246 249 / var(--tw-border-opacity));
}
.wt-border-t-gray-light{
  --tw-border-opacity: 1;
  border-top-color: rgb(230 234 236 / var(--tw-border-opacity));
}
.wt-bg-\[\#ECE9FE\]{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-\[\#F4FAFF\]{
  --tw-bg-opacity: 1;
  background-color: rgb(244 250 255 / var(--tw-bg-opacity));
}
.wt-bg-background-light{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-light-default{
  --tw-bg-opacity: 1;
  background-color: rgb(244 243 255 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-light-selected{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-bg-brand-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(117 63 234 / var(--tw-bg-opacity));
}
.wt-bg-bg-neutral-light-hover{
  background-color: #393B400A;
}
.wt-bg-bg-neutral-light-selected{
  background-color: #393B401A;
}
.wt-bg-bg-neutral-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(57 59 64 / var(--tw-bg-opacity));
}
.wt-bg-bg-neutral-primary-hover{
  --tw-bg-opacity: 1;
  background-color: rgb(23 24 28 / var(--tw-bg-opacity));
}
.wt-bg-bg-premium-primary-default{
  --tw-bg-opacity: 1;
  background-color: rgb(254 102 17 / var(--tw-bg-opacity));
}
.wt-bg-black{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.wt-bg-error-main{
  --tw-bg-opacity: 1;
  background-color: rgb(244 71 47 / var(--tw-bg-opacity));
}
.wt-bg-error-main\/10{
  background-color: rgb(244 71 47 / 0.1);
}
.wt-bg-gray-lighter{
  --tw-bg-opacity: 1;
  background-color: rgb(245 246 249 / var(--tw-bg-opacity));
}
.wt-bg-gray-lightest{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.wt-bg-gray-main{
  --tw-bg-opacity: 1;
  background-color: rgb(195 198 206 / var(--tw-bg-opacity));
}
.wt-bg-neutral-default{
  --tw-bg-opacity: 1;
  background-color: rgb(28 28 30 / var(--tw-bg-opacity));
}
.wt-bg-neutral-disabled-secondary{
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 234 / var(--tw-bg-opacity));
}
.wt-bg-paper-ai{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-paper-system{
  --tw-bg-opacity: 1;
  background-color: rgb(248 248 245 / var(--tw-bg-opacity));
}
.wt-bg-primary-lightest{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.wt-bg-primary-main\/5{
  background-color: rgb(117 63 234 / 0.05);
}
.wt-bg-text-info-hover{
  --tw-bg-opacity: 1;
  background-color: rgb(61 103 255 / var(--tw-bg-opacity));
}
.wt-bg-transparent{
  background-color: transparent;
}
.wt-bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.wt-bg-white-gradient{
  background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.81) 0%, #FFF 44.07%);
}
.wt-fill-\[\#4946f0\]{
  fill: #4946f0;
}
.wt-fill-brand-primary{
  fill: #753FEA;
}
.wt-p-0{
  padding: 0px;
}
.wt-p-0\.5{
  padding: 2px;
}
.wt-p-1{
  padding: 4px;
}
.wt-p-10{
  padding: 40px;
}
.wt-p-14{
  padding: 56px;
}
.wt-p-2{
  padding: 8px;
}
.wt-p-6{
  padding: 24px;
}
.wt-p-\[12px\]{
  padding: 12px;
}
.wt-px-0{
  padding-left: 0px;
  padding-right: 0px;
}
.wt-px-0\.5{
  padding-left: 2px;
  padding-right: 2px;
}
.wt-px-1{
  padding-left: 4px;
  padding-right: 4px;
}
.wt-px-12{
  padding-left: 48px;
  padding-right: 48px;
}
.wt-px-2{
  padding-left: 8px;
  padding-right: 8px;
}
.wt-px-2\.5{
  padding-left: 10px;
  padding-right: 10px;
}
.wt-px-3{
  padding-left: 12px;
  padding-right: 12px;
}
.wt-px-4{
  padding-left: 16px;
  padding-right: 16px;
}
.wt-px-6{
  padding-left: 24px;
  padding-right: 24px;
}
.wt-px-\[0\]{
  padding-left: 0;
  padding-right: 0;
}
.wt-px-\[12px\]{
  padding-left: 12px;
  padding-right: 12px;
}
.wt-px-\[14px\]{
  padding-left: 14px;
  padding-right: 14px;
}
.wt-px-\[16px\]{
  padding-left: 16px;
  padding-right: 16px;
}
.wt-px-\[200px\]{
  padding-left: 200px;
  padding-right: 200px;
}
.wt-px-\[20px\]{
  padding-left: 20px;
  padding-right: 20px;
}
.wt-px-\[38px\]{
  padding-left: 38px;
  padding-right: 38px;
}
.wt-px-\[40px\]{
  padding-left: 40px;
  padding-right: 40px;
}
.wt-px-\[48px\]{
  padding-left: 48px;
  padding-right: 48px;
}
.wt-px-\[4px\]{
  padding-left: 4px;
  padding-right: 4px;
}
.wt-py-0{
  padding-top: 0px;
  padding-bottom: 0px;
}
.wt-py-0\.5{
  padding-top: 2px;
  padding-bottom: 2px;
}
.wt-py-1{
  padding-top: 4px;
  padding-bottom: 4px;
}
.wt-py-1\.5{
  padding-top: 6px;
  padding-bottom: 6px;
}
.wt-py-10{
  padding-top: 40px;
  padding-bottom: 40px;
}
.wt-py-2{
  padding-top: 8px;
  padding-bottom: 8px;
}
.wt-py-2\.5{
  padding-top: 10px;
  padding-bottom: 10px;
}
.wt-py-3{
  padding-top: 12px;
  padding-bottom: 12px;
}
.wt-py-4{
  padding-top: 16px;
  padding-bottom: 16px;
}
.wt-py-\[10px\]{
  padding-top: 10px;
  padding-bottom: 10px;
}
.wt-py-\[21px\]{
  padding-top: 21px;
  padding-bottom: 21px;
}
.wt-py-\[2px\]{
  padding-top: 2px;
  padding-bottom: 2px;
}
.wt-py-\[32px\]{
  padding-top: 32px;
  padding-bottom: 32px;
}
.wt-py-\[6px\]{
  padding-top: 6px;
  padding-bottom: 6px;
}
.wt-py-\[8px\]{
  padding-top: 8px;
  padding-bottom: 8px;
}
.wt-pb-0{
  padding-bottom: 0px;
}
.wt-pb-1{
  padding-bottom: 4px;
}
.wt-pb-2{
  padding-bottom: 8px;
}
.wt-pb-3{
  padding-bottom: 12px;
}
.wt-pb-8{
  padding-bottom: 32px;
}
.wt-pb-\[16px\]{
  padding-bottom: 16px;
}
.wt-pb-\[8px\]{
  padding-bottom: 8px;
}
.wt-pl-1{
  padding-left: 4px;
}
.wt-pl-2{
  padding-left: 8px;
}
.wt-pl-6{
  padding-left: 24px;
}
.wt-pr-2{
  padding-right: 8px;
}
.wt-pr-3{
  padding-right: 12px;
}
.wt-pr-4{
  padding-right: 16px;
}
.wt-pr-7{
  padding-right: 28px;
}
.wt-pt-1{
  padding-top: 4px;
}
.wt-pt-3{
  padding-top: 12px;
}
.wt-pt-5{
  padding-top: 20px;
}
.wt-pt-6{
  padding-top: 24px;
}
.wt-pt-\[12px\]{
  padding-top: 12px;
}
.wt-pt-\[240px\]{
  padding-top: 240px;
}
.wt-text-center{
  text-align: center;
}
.wt-text-start{
  text-align: start;
}
.wt-indent-1{
  text-indent: 4px;
}
.wt-indent-1\.5{
  text-indent: 6px;
}
.wt-indent-2{
  text-indent: 8px;
}
.wt-indent-2\.5{
  text-indent: 10px;
}
.wt-align-sub{
  vertical-align: sub;
}
.wt-font-body{
  font-family: Inter, "Open Sans", sans-serif;
}
.wt-font-inter{
  font-family: Inter, "Open Sans", sans-serif;
}
.wt-text-2xl{
  font-size: 24px;
  line-height: 32px;
}
.wt-text-\[10px\]{
  font-size: 10px;
}
.wt-text-\[11px\]{
  font-size: 11px;
}
.wt-text-\[12px\]{
  font-size: 12px;
}
.wt-text-\[14px\]{
  font-size: 14px;
}
.wt-text-\[16px\]{
  font-size: 16px;
}
.wt-text-\[18px\]{
  font-size: 18px;
}
.wt-text-\[20px\]{
  font-size: 20px;
}
.wt-text-base{
  font-size: 16px;
  line-height: 24px;
}
.wt-text-lg{
  font-size: 18px;
  line-height: 28px;
}
.wt-text-sm{
  font-size: 14px;
  line-height: 20px;
}
.wt-text-xs{
  font-size: 12px;
  line-height: 16px;
}
.wt-font-bold{
  font-weight: 700;
}
.wt-font-light{
  font-weight: 300;
}
.wt-font-medium{
  font-weight: 500;
}
.wt-font-normal{
  font-weight: 400;
}
.wt-font-semibold{
  font-weight: 600;
}
.wt-not-italic{
  font-style: normal;
}
.wt-leading-10{
  line-height: 40px;
}
.wt-leading-5{
  line-height: 20px;
}
.wt-leading-6{
  line-height: 24px;
}
.wt-leading-7{
  line-height: 28px;
}
.wt-leading-8{
  line-height: 32px;
}
.wt-leading-\[14px\]{
  line-height: 14px;
}
.wt-leading-\[20px\]{
  line-height: 20px;
}
.wt-leading-\[24px\]{
  line-height: 24px;
}
.wt-leading-\[26px\]{
  line-height: 26px;
}
.wt-leading-\[28px\]{
  line-height: 28px;
}
.wt-leading-relaxed{
  line-height: 1.625;
}
.wt-leading-tight{
  line-height: 1.25;
}
.wt-tracking-\[\.01em\]{
  letter-spacing: .01em;
}
.wt-tracking-body{
  letter-spacing: 0.15px;
}
.wt-tracking-categoryTitle{
  letter-spacing: 0.4px;
}
.wt-tracking-settings{
  letter-spacing: 0.46px;
}
.wt-tracking-wide{
  letter-spacing: 0.025em;
}
.wt-tracking-wider{
  letter-spacing: 0.05em;
}
.wt-tracking-widest{
  letter-spacing: 0.1em;
}
.wt-text-\[\#461F93\]{
  --tw-text-opacity: 1;
  color: rgb(70 31 147 / var(--tw-text-opacity));
}
.wt-text-bg-brand-primary-default{
  --tw-text-opacity: 1;
  color: rgb(117 63 234 / var(--tw-text-opacity));
}
.wt-text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.wt-text-border-neutral-selected{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-error-main{
  --tw-text-opacity: 1;
  color: rgb(244 71 47 / var(--tw-text-opacity));
}
.wt-text-gray-dark{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.wt-text-gray-darkest{
  --tw-text-opacity: 1;
  color: rgb(31 33 39 / var(--tw-text-opacity));
}
.wt-text-gray-main{
  --tw-text-opacity: 1;
  color: rgb(195 198 206 / var(--tw-text-opacity));
}
.wt-text-info-main{
  --tw-text-opacity: 1;
  color: rgb(41 121 255 / var(--tw-text-opacity));
}
.wt-text-neutral-disabled{
  --tw-text-opacity: 1;
  color: rgb(199 199 204 / var(--tw-text-opacity));
}
.wt-text-neutral-secondary{
  --tw-text-opacity: 1;
  color: rgb(72 72 74 / var(--tw-text-opacity));
}
.wt-text-neutral-tertiary{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-text-brand-contrast{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-text-text-brand-default{
  --tw-text-opacity: 1;
  color: rgb(117 63 234 / var(--tw-text-opacity));
}
.wt-text-text-info-selected{
  --tw-text-opacity: 1;
  color: rgb(32 70 226 / var(--tw-text-opacity));
}
.wt-text-text-neutral-primary{
  --tw-text-opacity: 1;
  color: rgb(40 42 47 / var(--tw-text-opacity));
}
.wt-text-text-neutral-secondary{
  --tw-text-opacity: 1;
  color: rgb(72 77 86 / var(--tw-text-opacity));
}
.wt-text-text-neutral-tertiary{
  --tw-text-opacity: 1;
  color: rgb(126 135 146 / var(--tw-text-opacity));
}
.wt-text-text-premium-default{
  --tw-text-opacity: 1;
  color: rgb(254 102 17 / var(--tw-text-opacity));
}
.wt-text-text-turquoise-default{
  --tw-text-opacity: 1;
  color: rgb(18 150 168 / var(--tw-text-opacity));
}
.wt-text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-underline{
  text-decoration-line: underline;
}
.wt-no-underline{
  text-decoration-line: none;
}
.wt-opacity-0{
  opacity: 0;
}
.wt-opacity-100{
  opacity: 1;
}
.wt-opacity-20{
  opacity: 0.2;
}
.wt-opacity-30{
  opacity: 0.3;
}
.wt-opacity-50{
  opacity: 0.5;
}
.wt-opacity-60{
  opacity: 0.6;
}
.wt-opacity-\[0\.7\]{
  opacity: 0.7;
}
.wt-shadow-\[inset_0px_0px_0px_1px_theme\(colors\.border\.brand\.default\)\]{
  --tw-shadow: inset 0px 0px 0px 1px #C1B6FC;
  --tw-shadow-colored: inset 0px 0px 0px 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border{
  --tw-shadow: 0px 0px 0px 0.5px #C3C6CE inset;
  --tw-shadow-colored: inset 0px 0px 0px 0.5px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-left{
  --tw-shadow: 1px 0px 0px 0px #E6EAEC inset;
  --tw-shadow-colored: inset 1px 0px 0px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-right-thick{
  --tw-shadow: -2px 0px 0px 0px #E6EAEC inset;
  --tw-shadow-colored: inset -2px 0px 0px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-border-top{
  --tw-shadow: 0px -1px 0px #E6EAEC;
  --tw-shadow-colored: 0px -1px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-card{
  --tw-shadow: 0px 4px 14px rgba(72, 72, 74, 0.2);
  --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-inner-border-top{
  --tw-shadow: inset 0px 1px 0px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: inset 0px 1px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-panel-border{
  --tw-shadow: -3px 0px 10px 0px rgba(0, 0, 0, 0.04), -3px 0px 5px 0px rgba(0, 0, 0, 0.06), -3px 0px 4px -1px rgba(40, 42, 47, 0.05);
  --tw-shadow-colored: -3px 0px 10px 0px var(--tw-shadow-color), -3px 0px 5px 0px var(--tw-shadow-color), -3px 0px 4px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-toolbar{
  --tw-shadow: 0px 4px 14px rgba(28, 28, 30, 0.05);
  --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.wt-shadow-gray-light{
  --tw-shadow-color: #E6EAEC;
  --tw-shadow: var(--tw-shadow-colored);
}
.wt-outline-none{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.wt-outline-0{
  outline-width: 0px;
}
.wt-ring-1{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.wt-ring-inset{
  --tw-ring-inset: inset;
}
.wt-ring-border-brand-default{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(193 182 252 / var(--tw-ring-opacity));
}
.wt-ring-border-neutral-default{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(204 208 213 / var(--tw-ring-opacity));
}
.wt-ring-gray-light{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(230 234 236 / var(--tw-ring-opacity));
}
.wt-backdrop-blur-\[15px\]{
  --tw-backdrop-blur: blur(15px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.wt-transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-\[right\]{
  transition-property: right;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-\[width\]{
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-colors{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-transition-opacity{
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.wt-duration-100{
  transition-duration: 100ms;
}
.wt-duration-500{
  transition-duration: 500ms;
}
.wt-duration-75{
  transition-duration: 75ms;
}
.wt-duration-\[250ms\]{
  transition-duration: 250ms;
}
.wt-duration-\[400ms\]{
  transition-duration: 400ms;
}
.wt-duration-\[500ms\]{
  transition-duration: 500ms;
}
.wt-ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.wt-ease-out{
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.\[a-zA-Z0-9\:\\\\-\\\\\._\$\]{
  a-z-a--z0-9: \\-\\. $;
}
.placeholder\:wt-font-body::-moz-placeholder{
  font-family: Inter, "Open Sans", sans-serif;
}
.placeholder\:wt-font-body::placeholder{
  font-family: Inter, "Open Sans", sans-serif;
}
.placeholder\:wt-font-extralight::-moz-placeholder{
  font-weight: 200;
}
.placeholder\:wt-font-extralight::placeholder{
  font-weight: 200;
}
.placeholder\:wt-leading-5::-moz-placeholder{
  line-height: 20px;
}
.placeholder\:wt-leading-5::placeholder{
  line-height: 20px;
}
.placeholder\:wt-tracking-\[0\.15px\]::-moz-placeholder{
  letter-spacing: 0.15px;
}
.placeholder\:wt-tracking-\[0\.15px\]::placeholder{
  letter-spacing: 0.15px;
}
.placeholder\:wt-text-gray-dark::-moz-placeholder{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.placeholder\:wt-text-gray-dark::placeholder{
  --tw-text-opacity: 1;
  color: rgb(160 162 168 / var(--tw-text-opacity));
}
.before\:wt-h-3::before{
  content: var(--tw-content);
  height: 12px;
}
.before\:wt-w-3::before{
  content: var(--tw-content);
  width: 12px;
}
.before\:wt-rounded-full::before{
  content: var(--tw-content);
  border-radius: 9999px;
}
.before\:wt-bg-white::before{
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.before\:wt-shadow::before{
  content: var(--tw-content);
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.before\:wt-transition-transform::before{
  content: var(--tw-content);
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.before\:wt-duration-300::before{
  content: var(--tw-content);
  transition-duration: 300ms;
}
.before\:wt-content-\[\"\"\]::before{
  --tw-content: "";
  content: var(--tw-content);
}
.visited\:wt-text-text-neutral-primary:visited{
  color: rgb(40 42 47 );
}
.visited\:wt-text-text-neutral-secondary:visited{
  color: rgb(72 77 86 );
}
.focus-within\:wt-border-border-brand-selected:focus-within{
  --tw-border-opacity: 1;
  border-color: rgb(132 95 243 / var(--tw-border-opacity));
}
.hover\:wt-w-\[181px\]:hover{
  width: 181px;
}
.hover\:wt-cursor-pointer:hover{
  cursor: pointer;
}
.hover\:wt-bg-bg-brand-light-default:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(244 243 255 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-brand-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(101 43 214 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-neutral-light-hover:hover{
  background-color: #393B400A;
}
.hover\:wt-bg-bg-neutral-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(23 24 28 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-premium-light-default:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(252 251 249 / var(--tw-bg-opacity));
}
.hover\:wt-bg-bg-premium-primary-hover:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(239 74 7 / var(--tw-bg-opacity));
}
.hover\:wt-bg-error-dark:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(227 27 12 / var(--tw-bg-opacity));
}
.hover\:wt-bg-gray-lightest:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.hover\:wt-bg-text-info-selected:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(32 70 226 / var(--tw-bg-opacity));
}
.hover\:wt-p-\[0\]:hover{
  padding: 0;
}
.hover\:wt-text-bg-premium-primary-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(239 74 7 / var(--tw-text-opacity));
}
.hover\:wt-text-brand-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(101 43 214 / var(--tw-text-opacity));
}
.hover\:wt-text-text-brand-hover:hover{
  --tw-text-opacity: 1;
  color: rgb(101 43 214 / var(--tw-text-opacity));
}
.hover\:wt-no-underline:hover{
  text-decoration-line: none;
}
.hover\:wt-opacity-100:hover{
  opacity: 1;
}
.hover\:wt-opacity-\[1\]:hover{
  opacity: 1;
}
.hover\:wt-shadow-border-brand-hover:hover{
  --tw-shadow-color: #A28DF8;
  --tw-shadow: var(--tw-shadow-colored);
}
.hover\:wt-ring-border-neutral-hover:hover{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(169 176 183 / var(--tw-ring-opacity));
}
.hover\:wt-brightness-\[0\.97\]:hover{
  --tw-brightness: brightness(0.97);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.focus\:wt-bg-gray-lightest:focus{
  --tw-bg-opacity: 1;
  background-color: rgb(249 249 252 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-brand-light-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-brand-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(84 36 179 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-neutral-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.active\:wt-bg-bg-premium-primary-selected:active{
  --tw-bg-opacity: 1;
  background-color: rgb(198 53 8 / var(--tw-bg-opacity));
}
.active\:wt-bg-error-darker:active{
  --tw-bg-opacity: 1;
  background-color: rgb(161 18 18 / var(--tw-bg-opacity));
}
.active\:wt-bg-error-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(254 236 235 / var(--tw-bg-opacity));
}
.active\:wt-bg-gray-light:active{
  --tw-bg-opacity: 1;
  background-color: rgb(230 234 236 / var(--tw-bg-opacity));
}
.active\:wt-bg-info-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(234 242 255 / var(--tw-bg-opacity));
}
.active\:wt-bg-primary-lightest:active{
  --tw-bg-opacity: 1;
  background-color: rgb(236 233 254 / var(--tw-bg-opacity));
}
.active\:wt-text-text-brand-selected:active{
  --tw-text-opacity: 1;
  color: rgb(84 36 179 / var(--tw-text-opacity));
}
.active\:wt-text-text-premium-selected:active{
  --tw-text-opacity: 1;
  color: rgb(198 53 8 / var(--tw-text-opacity));
}
.active\:wt-opacity-100:active{
  opacity: 1;
}
.active\:wt-shadow-border-brand-selected:active{
  --tw-shadow-color: #845FF3;
  --tw-shadow: var(--tw-shadow-colored);
}
.active\:wt-shadow-info-light:active{
  --tw-shadow-color: #649EFF;
  --tw-shadow: var(--tw-shadow-colored);
}
.enabled\:wt-cursor-pointer:enabled{
  cursor: pointer;
}
.disabled\:wt-text-text-neutral-disabled:disabled{
  --tw-text-opacity: 1;
  color: rgb(169 176 183 / var(--tw-text-opacity));
}
.disabled\:wt-shadow-border-neutral-disabled:disabled{
  --tw-shadow-color: #E6EAEC;
  --tw-shadow: var(--tw-shadow-colored);
}
.disabled\:hover\:wt-bg-transparent:hover:disabled{
  background-color: transparent;
}
.wt-group:hover .group-hover\:wt-visible{
  visibility: visible;
}
.wt-group:hover .group-hover\:wt-border-border-brand-hover{
  --tw-border-opacity: 1;
  border-color: rgb(162 141 248 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-border-border-danger-selected{
  --tw-border-opacity: 1;
  border-color: rgb(233 73 64 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-border-error-main{
  --tw-border-opacity: 1;
  border-color: rgb(244 71 47 / var(--tw-border-opacity));
}
.wt-group:hover .group-hover\:wt-bg-error-main\/10{
  background-color: rgb(244 71 47 / 0.1);
}
.wt-group:hover .group-hover\:wt-bg-primary-main\/5{
  background-color: rgb(117 63 234 / 0.05);
}
.wt-group:hover .group-hover\:wt-bg-text-info-selected{
  --tw-bg-opacity: 1;
  background-color: rgb(32 70 226 / var(--tw-bg-opacity));
}
.wt-group:hover .group-hover\:wt-text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.wt-peer:checked ~ .peer-checked\:wt-bg-accent-primary{
  --tw-bg-opacity: 1;
  background-color: rgb(41 121 255 / var(--tw-bg-opacity));
}
.wt-peer:checked ~ .peer-checked\:wt-bg-accent-secondary{
  --tw-bg-opacity: 1;
  background-color: rgb(189 213 255 / var(--tw-bg-opacity));
}
.wt-peer:checked ~ .peer-checked\:before\:wt-translate-x-full::before{
  content: var(--tw-content);
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.wt-peer:focus-visible ~ .peer-focus-visible\:wt-outline{
  outline-style: solid;
}
.wt-peer:focus-visible ~ .peer-focus-visible\:wt-outline-offset-2{
  outline-offset: 2px;
}

/*# sourceMappingURL=data:application/json;base64, */</wordtune-style></wordtune-styles><style></style><style type="text/css">.lf-progress {
  -webkit-appearance: none;
  -moz-apperance: none;
  width: 100%;
  /* margin: 0 10px; */
  height: 4px;
  border-radius: 3px;
  cursor: pointer;
}
.lf-progress:focus {
  outline: none;
  border: none;
}
.lf-progress::-moz-range-track {
  cursor: pointer;
  background: none;
  border: none;
  outline: none;
}
.lf-progress::-webkit-slider-thumb {
  -webkit-appearance: none !important;
  height: 13px;
  width: 13px;
  border: 0;
  border-radius: 50%;
  background: #0fccce;
  cursor: pointer;
}
.lf-progress::-moz-range-thumb {
  -moz-appearance: none !important;
  height: 13px;
  width: 13px;
  border: 0;
  border-radius: 50%;
  background: #0fccce;
  cursor: pointer;
}
.lf-progress::-ms-track {
  width: 100%;
  height: 3px;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  color: transparent;
}
.lf-progress::-ms-fill-lower {
  background: #ccc;
  border-radius: 3px;
}
.lf-progress::-ms-fill-upper {
  background: #ccc;
  border-radius: 3px;
}
.lf-progress::-ms-thumb {
  border: 0;
  height: 15px;
  width: 15px;
  border-radius: 50%;
  background: #0fccce;
  cursor: pointer;
}
.lf-progress:focus::-ms-fill-lower {
  background: #ccc;
}
.lf-progress:focus::-ms-fill-upper {
  background: #ccc;
}
.lf-player-container :focus {
  outline: 0;
}
.lf-popover {
  position: relative;
}

.lf-popover-content {
  display: inline-block;
  position: absolute;
  opacity: 1;
  visibility: visible;
  transform: translate(0, -10px);
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);
}

.lf-popover-content.hidden {
  opacity: 0;
  visibility: hidden;
  transform: translate(0, 0px);
}

.lf-player-btn-container {
  display: flex;
  align-items: center;
}
.lf-player-btn {
  cursor: pointer;
  fill: #999;
  width: 14px;
}

.lf-player-btn.active {
  fill: #555;
}

.lf-popover {
  position: relative;
}

.lf-popover-content {
  display: inline-block;
  position: absolute;
  background-color: #ffffff;
  opacity: 1;

  transform: translate(0, -10px);
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
  transition: all 0.3s cubic-bezier(0.75, -0.02, 0.2, 0.97);
  padding: 10px;
}

.lf-popover-content.hidden {
  opacity: 0;
  visibility: hidden;
  transform: translate(0, 0px);
}

.lf-arrow {
  position: absolute;
  z-index: -1;
  content: '';
  bottom: -9px;
  border-style: solid;
  border-width: 10px 10px 0px 10px;
}

.lf-left-align,
.lf-left-align .lfarrow {
  left: 0;
  right: unset;
}

.lf-right-align,
.lf-right-align .lf-arrow {
  right: 0;
  left: unset;
}

.lf-text-input {
  border: 1px #ccc solid;
  border-radius: 5px;
  padding: 3px;
  width: 60px;
  margin: 0;
}

.lf-color-picker {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  height: 90px;
}

.lf-color-selectors {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.lf-color-component {
  display: flex;
  flex-direction: row;
  font-size: 12px;
  align-items: center;
  justify-content: center;
}

.lf-color-component strong {
  width: 40px;
}

.lf-color-component input[type='range'] {
  margin: 0 0 0 10px;
}

.lf-color-component input[type='number'] {
  width: 50px;
  margin: 0 0 0 10px;
}

.lf-color-preview {
  font-size: 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding-left: 5px;
}

.lf-preview {
  height: 60px;
  width: 60px;
}

.lf-popover-snapshot {
  width: 150px;
}
.lf-popover-snapshot h5 {
  margin: 5px 0 10px 0;
  font-size: 0.75rem;
}
.lf-popover-snapshot a {
  display: block;
  text-decoration: none;
}
.lf-popover-snapshot a:before {
  content: '⥼';
  margin-right: 5px;
}
.lf-popover-snapshot .lf-note {
  display: block;
  margin-top: 10px;
  color: #999;
}
.lf-player-controls > div {
  margin-right: 5px;
  margin-left: 5px;
}
.lf-player-controls > div:first-child {
  margin-left: 0px;
}
.lf-player-controls > div:last-child {
  margin-right: 0px;
}
</style><style></style><style></style><style></style><style>@font-face {
	font-family: "wticons";
	font-display: block;
	src: url(data:font/woff2;charset=utf-8;base64,) format("woff2");
}

.wticons {
	line-height: 1;
}

.wticons:before {
	font-family: wticons !important;
	font-style: normal;
	font-weight: normal !important;
	vertical-align: top;
}

.wticon-account:before {
	content: "\f101";
}
.wticon-add:before {
	content: "\f102";
}
.wticon-BlackFridayStar:before {
	content: "\f103";
}
.wticon-cardResizeDrag:before {
	content: "\f104";
}
.wticon-casual:before {
	content: "\f105";
}
.wticon-check:before {
	content: "\f106";
}
.wticon-checkSmall:before {
	content: "\f107";
}
.wticon-chevron:before {
	content: "\f108";
}
.wticon-copy:before {
	content: "\f109";
}
.wticon-copySmall:before {
	content: "\f10a";
}
.wticon-dismiss:before {
	content: "\f10b";
}
.wticon-downChevron:before {
	content: "\f10c";
}
.wticon-error:before {
	content: "\f10d";
}
.wticon-expand:before {
	content: "\f10e";
}
.wticon-feedback:before {
	content: "\f10f";
}
.wticon-filledDownArrow:before {
	content: "\f110";
}
.wticon-find:before {
	content: "\f111";
}
.wticon-formal:before {
	content: "\f112";
}
.wticon-gift:before {
	content: "\f113";
}
.wticon-grayLogo:before {
	content: "\f114";
}
.wticon-grayW:before {
	content: "\f115";
}
.wticon-ignore:before {
	content: "\f116";
}
.wticon-info:before {
	content: "\f117";
}
.wticon-leftChevron:before {
	content: "\f118";
}
.wticon-logo:before {
	content: "\f119";
}
.wticon-love:before {
	content: "\f11a";
}
.wticon-noRecommendations:before {
	content: "\f11b";
}
.wticon-paragraphRewrite:before {
	content: "\f11c";
}
.wticon-paste:before {
	content: "\f11d";
}
.wticon-pin:before {
	content: "\f11e";
}
.wticon-premium:before {
	content: "\f11f";
}
.wticon-premiumDetail:before {
	content: "\f120";
}
.wticon-premiumFull:before {
	content: "\f121";
}
.wticon-recommendationLight:before {
	content: "\f122";
}
.wticon-recommendationLightCard:before {
	content: "\f123";
}
.wticon-recommendationLightNoSuggestions:before {
	content: "\f124";
}
.wticon-refine:before {
	content: "\f125";
}
.wticon-rewrite:before {
	content: "\f126";
}
.wticon-rightChevron:before {
	content: "\f127";
}
.wticon-rocket:before {
	content: "\f128";
}
.wticon-sentenceExamples:before {
	content: "\f129";
}
.wticon-settings:before {
	content: "\f12a";
}
.wticon-shorten:before {
	content: "\f12b";
}
.wticon-tutorial:before {
	content: "\f12c";
}
.wticon-unlock:before {
	content: "\f12d";
}
.wticon-warn:before {
	content: "\f12e";
}
.wticon-WordtuneButton:before {
	content: "\f12f";
}
.wticon-x:before {
	content: "\f130";
}

/*# sourceMappingURL=data:application/json;base64, */</style><meta http-equiv="origin-trial" content="AymqwRC7u88Y4JPvfIF2F37QKylC04248hLCdJAsh8xgOfe/dVJPV3XS3wLFca1ZMVOtnBfVjaCMTVudWM//5g4AAAB7eyJvcmlnaW4iOiJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjk1MTY3OTk5LCJpc1RoaXJkUGFydHkiOnRydWV9"><link id="load-css-0" rel="stylesheet" type="text/css" href="https://www.gstatic.com/charts/51/css/core/tooltip.css"><link id="load-css-1" rel="stylesheet" type="text/css" href="https://www.gstatic.com/charts/51/css/util/util.css"><script type="text/javascript" charset="UTF-8" src="https://www.gstatic.com/charts/51/js/jsapi_compiled_default_module.js"></script><script type="text/javascript" charset="UTF-8" src="https://www.gstatic.com/charts/51/js/jsapi_compiled_graphics_module.js"></script><script type="text/javascript" charset="UTF-8" src="https://www.gstatic.com/charts/51/js/jsapi_compiled_ui_module.js"></script><script type="text/javascript" charset="UTF-8" src="https://www.gstatic.com/charts/51/js/jsapi_compiled_corechart_module.js"></script><meta http-equiv="origin-trial" content="AymqwRC7u88Y4JPvfIF2F37QKylC04248hLCdJAsh8xgOfe/dVJPV3XS3wLFca1ZMVOtnBfVjaCMTVudWM//5g4AAAB7eyJvcmlnaW4iOiJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjk1MTY3OTk5LCJpc1RoaXJkUGFydHkiOnRydWV9"><script crossorigin="anonymous" type="text/javascript" referrerpolicy="strict-origin-when-cross-origin" src="https://r.bing.com/rp/6Lt3qhCeUAo6GZfmPu6OA0VQWkI.br.js"></script></head>
<body class="">
       <div id="loaderWrapper" class="lmask d-none">
        <div id="loader"></div>
   </div>
        <div style="background-color: #f2f2f2" id="headerNav">  
        <nav style="background:#337ab7d4">
              <div class="container-fluid">
                    <div class="navbar-header">
                         <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>                        
                          </button>
                        </div>
                        <div class="navbar-collapse collapse">
                         <ul class="nav navbar-nav">
                            <li style="text-align:center;">
                                <a href="/home">
                                    <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-home" id="fa-home"></i></label><br>
                                    <label>Home</label>
                                </a>
                            </li>
                            <li style="padding:8px;margin-top:10px">
                                <div class="input-group" style="width:250px">
                                     <span class="input-group-btn">
                                          <button class="btn btn-default" style="border-left:0px;border-top-left-radius: 0px; border-bottom-left-radius:0px;" type="button" id="filter-search" data-trigger="focus" data-toggle="searchpopover" data-placement="bottom" data-original-title="" title=""><i class="fa fa-caret-down" style="color:#337ab7"></i></button>
                                    </span> 
                                    <span id="searchParam" style="display:none"></span>
                                    <input name="seacrh" type="text" id="seacrh" placeholder="" minlength="4" style="border:0px ;width:100%;padding:6px;margin-top:1px;">
                                    <span class="input-group-btn">
                                          <button class="btn btn-default" style="border-right:0px;border-top-left-radius: 0px; border-bottom-left-radius: 0px;border-bottom-right-radius: 0px;border-top-right-radius: 0px;z-index:0" type="button" id="search" onclick="searchDataWithSearchBox()"><i class="fa fa-search" style="color:#337ab7"></i></button>
                                    </span>  
                               </div>
                            </li>
                            <li style="text-align:center;" onclick="openSearchModal()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-search"></i></label><br>
                               <label>Search</label></a>
                            </li>
                            <li style="text-align:center;" onclick="openLayerModal()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-clone"></i></label><br>
                               <label>Layers</label></a>
                            </li>
                           <li style="text-align:center;" onclick="openCloseListModal()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-table"></i></label><br>
                               <label>List</label></a>
                            </li>
                            <li style="text-align:center;" data-toggle="bookMarkpopover" data-trigger="focus" data-placement="bottom" data-original-title="" title=""><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-bookmark"></i></label><br>
                               <label>Bookmarks</label></a>
                            </li>
                          <!--  <li style="text-align:center;"><a href="">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-files-o" ></i></label><br>
                               <label>Reports</label></a>
                            </li>
                            <li style="text-align:center;" data-toggle="dashboardpopover" data-placement="bottom"><a href="#">-->
                            <li style="text-align:center;" onclick="openDashboardModal()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-dashboard "></i></label><br>
                               <label>Dashboard</label></a>
                            </li>
                          <!--  <li style="text-align:center;" onclick="importShapefile()"><a href="#">
                               <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-upload" ></i></label><br>
                               <label>Import Shapefile</label></a>
                            </li>
                          <li style="text-align:center;" onclick="exportToShapefile()" ><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-file-text " ></i></label><br>
                               <label>Export Shapefile</label></a>
                          </li>
                           <li style="text-align:center;" onclick="openQCToolModal()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-dashboard"></i></label><br>
                               <label>QC Tool</label></a>
                            </li>-->
                           <li style="text-align:center;" data-toggle="quickmeasurepopover" data-placement="bottom" data-original-title="" title=""><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-dashboard "></i></label><br>
                               <label>Quick Measure</label></a>
                            </li>
                            <li style="text-align:center;" data-toggle="markuppopover" data-placement="bottom" data-original-title="" title=""><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-pencil "></i></label><br>
                               <label>Markup</label></a>
                            </li>
                          <li style="text-align:center;" onclick="openAdvancedMeasure()"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-dashboard"></i></label><br>
                               <label>Advanced Measure</label></a>
                            </li>
                            <!-- <li style="text-align:center;" data-toggle="exportpdf" data-placement="bottom"><a href="#">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-image"></i></label><br>
                               <label>Export</label></a>
                            </li>-->
                           <!-- <li style="text-align:center;"><a href="">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-upload" ></i></label><br>
                               <label>Water Data</label></a>
                            </li>-->
                            <li style="text-align:center;"><a href="">
                                <label style="margin-bottom:0px;margin-top:5px"><i class="fa fa-question-circle"></i></label><br>
                               <label>Help</label></a>
                            </li>
                            <!-- <li style="text-align:center;margin-right:5px">
                                <label style="margin-bottom:0px;margin-top:5px;margin-right:5px"><i class="fa fa-undo" ></i></label><br>
                            </li>
                             <li style="text-align:center;margin-right:5px">
                                <label style="margin-bottom:0px;margin-top:5px;margin-right:5px"><i class="fa fa-repeat" ></i></label><br>
                            </li>-->
                        </ul>
                        <div style="padding:5px;float:right;margin-top:10px">
                        	<label for="unit2">Unit</label>
                            <select class="browser-default custom-select" name="unit2" id="unit2" onchange="unitConverstionDeatils(this)">
                                <option selected="true" value="CCFDetails">CCF</option>
                                <option value="GallonsDetails">Gallons</option>
                                <option value="Acre-FeetDetails">Acre-Feet</option>
                            </select>
                            <span>Welcome  Pallavi</span>
                            <a style="padding:5px" href="/logout">[Log Out]</a>
                        </div>
                    </div> 
              </div>
            </nav> 
            
            </div>
<div class="container-fluid">
<div id="before_map" style="display:none;"></div>
<div id="myMap" class="map-container" style="height:93vh!important;position:absolute!important;width:100%!important;left:0"><div class="MicrosoftMap" style="position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;"><div style="position: absolute; overflow: hidden; width: 100%; height: 100%; top: 0px; left: 0px;"><div class="ms-composite" tabindex="-1" dir="ltr" style="z-index: 0; background-color: rgb(1, 20, 34); opacity: 1; position: absolute; top: 0px; left: 0px;"><canvas id="Microsoft.Maps.Imagery.LiteAerial" width="956" height="873" style="z-index: 0; position: absolute; left: 0px; opacity: 1; transform-origin: left top; zoom: 1; width: 956px; height: 873px; transform: matrix(1, 0, 0, 1, 0, 0);"></canvas><div tabindex="0" id="mapFocus" role="region" aria-label="Bing Maps – Interact to see more" style="top: 1px; left: 1px; z-index: 25100; pointer-events: none; position: absolute; width: 954px; height: 871px;"></div><canvas style="z-index: 25000; position: absolute; opacity: 0; width: 1874px; height: 873px;" width="1874" height="873"></canvas><canvas id="labelCanvasId" class="labelCanvas" width="1156" height="1073" style="outline: none; position: absolute; z-index: 20000; width: 1156px; height: 1073px; top: -100px; left: -100px; transform: translate(0px, 0px); display: block;"></canvas></div></div><div style="position: absolute; overflow: hidden; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none; transform: scale(1); z-index: 100;"><div style="position: absolute; width: 100%; height: 100%; pointer-events: none;"><div id="MicrosoftNav" class="NavBar_Container Dark" style="position: absolute; inset: 0px 0px auto auto;"><div class="NavBar_MapTypeButtonContainerWrapper" style="display: none;"><div class="NavBar_MapTypeButtonContainer NavBar_MapTypeButtonHeight NavBar_Delay withBackground" id="MapStyleSelector" tabindex="0" title="Current Map Type: Aerial - View aerial, birds eye, and more..." role="button" aria-expanded="false"><div id="NavBar_MapTypeIcon" class="NavBar_MapTypeButtonIcon NavBar_MapTypeButtonHeight selectorIconAerial"></div><div id="NavBar_MapTypeText" class="NavBar_MapTypeButtonText NavBar_MapTypeButtonHeight">Aerial</div><div class="NavBar_MapTypeButtonDropDownIcon NavBar_MapTypeButtonHeight selectorIconDropDown"></div></div></div><div id="RadialMenu" class="NavBar_DropDown menu" role="listbox" aria-multiselectable="true" aria-label="View aerial, birds eye, and more..."><div class="slot road" tabindex="0" role="option" aria-selected="false"><div class="mapTypeIcon"></div><div class="pie-label labelStyle">Road</div><div class="pie-label-description labelStyleDescription">A standard road map</div></div><div class="slot aerial selected" tabindex="0" role="option" aria-selected="true"><div class="mapTypeIcon"></div><div class="pie-label labelStyle">Aerial</div><div class="pie-label-description labelStyleDescription">A detailed look from above</div></div><div class="slot birdseye disabled" tabindex="-1" role="option" aria-selected="false"><div class="mapTypeIcon"></div><div class="pie-label labelStyle">Bird's eye</div><div class="pie-label-description labelStyleDescription">A better angle of aerial photography</div></div><div class="switchSlot labelToggle" for="navbarLabelToggleInput" tabindex="0" role="checkbox" aria-checked="true" aria-label="" title="Turn labels on or off" aria-selected="false"><div class="labelToggle_Container labelStyle"><input id="navbarLabelToggleInput" type="checkbox" class="labelToggle_Input" checked="" tabindex="-1" aria-disabled="true"><label class="labelStyleSwitch" title="Labels">Labels</label><label class="labelToggle_label" helper="[object Object]" role="button" aria-label="Labels"></label></div></div></div><div class="birdseyeV2InfoExitControl be2LabelsEnabled" style="display: none;"><div class="birdseyeV2InfoExitControl left"><div class="birdseyeV2InfoExitControl left bottom"><div class="birdseyeV2Geochain"></div></div></div><div class="birdseyeV2InfoExitControl right"><a id="BirdseyeV2ExitButton" class="NavBar_Button birdseyeV2Exit" href="#" role="button"><div class="NavButton_Icon" title="Exit Bird's eye"></div></a><div class="be2LabelToggleContainer"><div class="be2LabelsTag">Labels</div><div class="be2LabelToggle switchSlot labelToggle" for="be2ToggleInput"><div class="labelToggle_Container labelStyle"><input id="be2ToggleInput" type="checkbox" class="labelToggle_Input" checked="" tabindex="-1"><label class="labelToggle_label" role="button" aria-label="Labels"></label></div></div></div></div></div><div id="RotateButtonContainer" class="NavBarButton_Container" style="margin-top: 316.5px; display: none;"><a id="RotateLeftButton" class="NavBar_Button NavBar_rotateLeft" href="#" role="button"><div class="NavButton_Icon" title="Rotate left"></div></a><a id="RotateButton" class="NavBar_Button NavBar_rotate NavBar_heading_0D" href="#" role="button"><div class="NavButton_Icon" title="Reset orientation"></div></a><a id="RotateRightButton" class="NavBar_Button NavBar_rotateRight" href="#" role="button"><div class="NavButton_Icon" title="Rotate right"></div></a></div><a id="ZoomInButton" class="NavBar_Button NavBar_zoomIn" href="#" role="button" aria-label="Current Level 13, Zoom In "><div class="NavButton_Icon" title="Zoom in"></div></a><a id="ZoomOutButton" class="NavBar_Button NavBar_zoomOut" href="#" role="button" aria-label="Current Level 13, Zoom Out"><div class="NavButton_Icon" title="Zoom out"></div></a></div></div><div class="bm_bottomLeftOverlay" style="position: absolute; left: 5px; bottom: 5px;"><div class="bm_LogoContainer quadrantOverride"><a href="http://www.bing.com/maps?cp=34.02422386674861~-117.72550619641709&amp;lvl=13&amp;style=a&amp;FORM=BMLOGO" title="Microsoft Bing" aria-label="Microsoft Bing" target="mc_bingMaps" style="pointer-events: auto"><div id="bingLogo" class="bingLogoDark"></div></a></div></div><div class="bm_bottomRightOverlay" style="position: absolute; right: 25px; bottom: 5px;"><div class="ScaleBar bm_disable_highlighting quadrantOverride" style="z-index: 0;font-family: arial, helvetica, sans-serif;font-size: 9px;text-align: right;display: block"><div style="display: inline-block;position: relative;margin-left: 1em;padding-top: .5em;padding-bottom: .05em;width: 98px"><div style="color: #000;text-shadow: #fff 1px 1px">5000 feet</div><div style="width: 100%;height: 3px;border: 1px solid #fff;line-height: 0;overflow: hidden"><div style="width: 100%;height: 0;border: 10px solid #49f"></div></div></div><div style="display: inline-block;position: relative;margin-left: 1em;padding-top: .5em;padding-bottom: .05em;width: 65px"><div style="color: #000;text-shadow: #fff 1px 1px">1 km</div><div style="width: 100%;height: 3px;border: 1px solid #fff;line-height: 0;overflow: hidden"><div style="width: 100%;height: 0;border: 10px solid #49f"></div></div></div></div><div class="CopyrightContainer quadrantOverride"><div class="CopyrightControl" style="max-width: 831px;"><span class="ShadowTextDark"><span class="CopyrightAttributionStyle">© 2023 TomTom, © Vexcel Imaging, © 2023 Microsoft Corporation</span><a class="copyrightLink ShadowTextDark" style="pointer-events: auto; display: none;" role="link"></a></span></div><div id="TermsLinkContainer" class="TermsLinkContainer"><a class="ShadowTextDark" href="https://www.microsoft.com/maps/assets/docs/terms.aspx" title="Terms" target="mc_bingMaps" style="pointer-events: auto">Terms</a></div></div></div></div></div></div>
<div id="after_map" style="display:none;"></div>
<!-- Manage Campaign Modal -->           
 <div class="modal fade" id="CampaignModal" tabindex="-1" role="dialog" aria-labelledby="CampaignModalLabel" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:600px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeCampaignModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="CampaignModalLabel" style="font-size:14px;font-weight:bold;color:black">Track Groups</h4>
      </div>
      <div class="modal-body" id="camapaignBody" style="min-height:300px;margin-bottom:60px;min-width:50%;overflow: auto;max-height: 350px;"><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte12</strong></label><label style="font-size: 11px;">/Mnte11</label></div><div class="col-sm-8"><div class="row">2023-04-06<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;06042023062511PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte12&quot;,&quot;description&quot;:&quot;Mnte11&quot;,&quot;actionDate&quot;:&quot;2023-04-06&quot;,&quot;notes&quot;:&quot;Contains Mnte11&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;06042023062511PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte12&quot;,&quot;description&quot;:&quot;Mnte11&quot;,&quot;actionDate&quot;:&quot;2023-04-06&quot;,&quot;notes&quot;:&quot;Contains Mnte11&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;06042023062511PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte12&quot;,&quot;description&quot;:&quot;Mnte11&quot;,&quot;actionDate&quot;:&quot;2023-04-06&quot;,&quot;notes&quot;:&quot;Contains Mnte11&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;06042023062511PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte12&quot;,&quot;description&quot;:&quot;Mnte11&quot;,&quot;actionDate&quot;:&quot;2023-04-06&quot;,&quot;notes&quot;:&quot;Contains Mnte11&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">largestPremise</strong></label><label style="font-size: 11px;">/Largest Premise</label></div><div class="col-sm-8"><div class="row">2023-05-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19052023024034PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;largestPremise&quot;,&quot;description&quot;:&quot;Largest Premise&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;test&quot;,&quot;premIds&quot;:[&quot;Mnte173&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19052023024034PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;largestPremise&quot;,&quot;description&quot;:&quot;Largest Premise&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;test&quot;,&quot;premIds&quot;:[&quot;Mnte173&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19052023024034PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;largestPremise&quot;,&quot;description&quot;:&quot;Largest Premise&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;test&quot;,&quot;premIds&quot;:[&quot;Mnte173&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19052023024034PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;largestPremise&quot;,&quot;description&quot;:&quot;Largest Premise&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;test&quot;,&quot;premIds&quot;:[&quot;Mnte173&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">dummy</strong></label><label style="font-size: 11px;">/dummy</label></div><div class="col-sm-8"><div class="row">2023-05-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19052023041251PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummy&quot;,&quot;description&quot;:&quot;dummy&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;dummy&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19052023041251PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummy&quot;,&quot;description&quot;:&quot;dummy&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;dummy&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19052023041251PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummy&quot;,&quot;description&quot;:&quot;dummy&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;dummy&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19052023041251PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummy&quot;,&quot;description&quot;:&quot;dummy&quot;,&quot;actionDate&quot;:&quot;2023-05-19&quot;,&quot;notes&quot;:&quot;dummy&quot;,&quot;premIds&quot;:[&quot;Mnte114,Mnte118,Mnte113,Mnte117,Mnte110,Mnte115,Mnte116,Mnte11,Mnte112,Mnte119,Mnte111&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">dummyTest</strong></label><label style="font-size: 11px;">/dummyTest</label></div><div class="col-sm-8"><div class="row">2023-05-20<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;20052023053112PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummyTest&quot;,&quot;description&quot;:&quot;dummyTest&quot;,&quot;actionDate&quot;:&quot;2023-05-20&quot;,&quot;notes&quot;:&quot;dummyTest&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;20052023053112PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummyTest&quot;,&quot;description&quot;:&quot;dummyTest&quot;,&quot;actionDate&quot;:&quot;2023-05-20&quot;,&quot;notes&quot;:&quot;dummyTest&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;20052023053112PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummyTest&quot;,&quot;description&quot;:&quot;dummyTest&quot;,&quot;actionDate&quot;:&quot;2023-05-20&quot;,&quot;notes&quot;:&quot;dummyTest&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;20052023053112PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;dummyTest&quot;,&quot;description&quot;:&quot;dummyTest&quot;,&quot;actionDate&quot;:&quot;2023-05-20&quot;,&quot;notes&quot;:&quot;dummyTest&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">test Camp</strong></label><label style="font-size: 11px;">/test camp</label></div><div class="col-sm-8"><div class="row">2023-05-22<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;22052023054628PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;test Camp&quot;,&quot;description&quot;:&quot;test camp&quot;,&quot;actionDate&quot;:&quot;2023-05-22&quot;,&quot;notes&quot;:&quot;test camp&quot;,&quot;premIds&quot;:[&quot;Mnte61&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;22052023054628PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;test Camp&quot;,&quot;description&quot;:&quot;test camp&quot;,&quot;actionDate&quot;:&quot;2023-05-22&quot;,&quot;notes&quot;:&quot;test camp&quot;,&quot;premIds&quot;:[&quot;Mnte61&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;22052023054628PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;test Camp&quot;,&quot;description&quot;:&quot;test camp&quot;,&quot;actionDate&quot;:&quot;2023-05-22&quot;,&quot;notes&quot;:&quot;test camp&quot;,&quot;premIds&quot;:[&quot;Mnte61&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;22052023054628PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;test Camp&quot;,&quot;description&quot;:&quot;test camp&quot;,&quot;actionDate&quot;:&quot;2023-05-22&quot;,&quot;notes&quot;:&quot;test camp&quot;,&quot;premIds&quot;:[&quot;Mnte61&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055735PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055735PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055735PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055735PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055736PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055736PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055736PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055736PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055737PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055737PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055737PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055737PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055738PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055738PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055738PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055738PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055739PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055739PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055739PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055739PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055740PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte139</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-06-19<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;19062023055741PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;19062023055741PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;19062023055741PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;19062023055741PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte139&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-06-19&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte139HOA&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte162_latest</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-10-25<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte162_latest</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-10-25<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte162_latest</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-10-25<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte162_latest</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-10-25<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Dashboard</button></div></div></div><div class="row" style="margin-top:10px"><div class="col-sm-4"><label><strong style="font-size: 11px;">Mnte162_latest</strong></label><label style="font-size: 11px;">/</label></div><div class="col-sm-8"><div class="row">2023-10-25<button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignDelete({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Delete</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="campaignEdit({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Edit</button><button class="btn btn-primary" style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" onclick="displayOnMap({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Show On Map</button><button style="margin-left:10px;font-size: 11px;padding: 0.3em 1em;" class="btn btn-primary" onclick="openDashboard({&quot;hashKey&quot;:&quot;25102023033858PM&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;title&quot;:&quot;Mnte162_latest&quot;,&quot;description&quot;:&quot;&quot;,&quot;actionDate&quot;:&quot;2023-10-25&quot;,&quot;notes&quot;:&quot;&quot;,&quot;premIds&quot;:[&quot;Mnte162&quot;]})">Dashboard</button></div></div></div></div>
      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>
            <!-- Layer Management -->
<div class="fade layermodal in" id="layerModal" aria-labelledby="myModalLabel" data-backdrop="false" style="z-index: 9999; display: block;">
  <div class="modal-dialog ui-draggable" role="document" style="width:350px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeLayerModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="layerModalLabel" style="font-size:14px;font-weight:bold;color:black">Layers</h4>
      </div>
      <div class="modal-body" style="overflow-y:scroll;max-height:300px;padding:2px;background-color:#f2f2f2;">
        <div id="layerId" role="layerlist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="UsageAllocation">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="Current_Percent_Allocation" name="Current_Percent_Allocation" value="Current_Percent_Allocation">
                        <label class="form-check-label">Current % of Allocation</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#percentAllocation" aria-expanded="false" aria-controls="percentAllocation"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="percentAllocation" class="panel-collapse collapse" role="tabpanel" aria-labelledby="UsageAllocation">
                    <div class="panel-body">
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(28, 100, 0);stroke-width:3;stroke:rgb(28, 100, 0)"></rect>
</svg> 0% To 50% 
                        <br>
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(154, 205, 50);stroke-width:3;stroke:rgb(154, 205, 50)"></rect>
</svg> 51% To 100% <br>
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(247, 165, 5);stroke-width:3;stroke:rgb(247, 165, 5)"></rect>
</svg> 101% To 150% <br>
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(243, 1, 6);stroke-width:3;stroke:rgb(243, 1, 6)"></rect>
</svg> 151% To 200% <br>
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(139, 0, 0);stroke-width:3;stroke:rgb(139, 0, 0)"></rect>
</svg> 200% and above <br>
                    </div>
                </div>
            </div>
             <!---<div class="panel panel-default">
                <div class="panel-heading" role="tab" id="etAreas">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="ET_Areas" name="ET_Areas" value="ET_Areas">
                        <label class="form-check-label">ET Areas</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#ET_Areas_Panel" aria-expanded="false" aria-controls="ET_Areas_Panel"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-cog"></i><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="ET_Areas_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="ET_Areas_Panel">
                    <div class="panel-body">
                    </div>
                </div>
            </div>-->
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="sites_heading">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="Premises" name="Premises" value="Premises">
                        <label class="form-check-label">Premises</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#Sites_Panel" aria-expanded="false" aria-controls="ET_Areas_Panel"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Sites_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Sites_Panel">
                    <div class="panel-body">
						Premises
                        <svg width="40" height="15">
                          <rect width="40" height="15" style="fill:rgb(51, 51, 255);stroke-width:3;stroke:rgb(51, 51, 255)"></rect>
                        </svg>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="wd_boundaries_heading">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="WD_Boundaries" name="WD_Boundaries" value="WD_Boundaries">
                        <label class="form-check-label">WD Boundaries</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#WD_Boundaries_Panel" aria-expanded="false" aria-controls="WD_Boundaries_Panel"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="WD_Boundaries_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="WD_Boundaries_Panel">
                    <div class="panel-body">
						WD Boundaries
                        <svg width="40" height="15">
                          <rect width="40" height="15" style="fill:rgb(0,0,0);stroke-width:3;stroke:#ffffff"></rect>
                        </svg>
                    </div>
                </div>
            </div>                        
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Meter_Location_heading">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="Meter_Location" name="Meter_Location" value="Meter_Location">
                        <label class="form-check-label">Meters</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#Meter_Location_Panel" aria-expanded="false" aria-controls="Meter_Location_Panel"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Meter_Location_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Meter_Location_Panel">
                     <div class="panel-body">
 Meters
                        <svg viewBox="0 0 100 100" width="40" height="15">
  <circle cx="50" cy="50" r="50" style="fill:rgb(103,147,222);stroke-width:3;stroke:rgb(103,147,222)"></circle>
</svg>
                    </div>
                </div>
            </div>
            <div class="panel panel-default"><div class="panel-heading" role="tab" id="ALL_LAYER_PANEL_HEAD"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="ALL_LAYER" name="ALL_LAYER" value="ALL_LAYER" data-bind="[&quot;LANDSCAPE_IMPERVIOUS&quot; ,&quot;LANDSCAPE_SWIMMING_POOLS&quot; ,&quot;LANDSCAPE_II_TURF&quot; ,&quot;LANDSCAPE_INI_TURF&quot; ,&quot;LANDSCAPE_II_CANOPY&quot; ,&quot;LANDSCAPE_INI_CANOPY&quot; ]"><label class="form-check-label" style="color:grey;font-size:14px;"> &nbsp;All Layers</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#All_LAYER_DIV" aria-expanded="false" aria-controls="All_LAYER"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="All_LAYER_DIV" class="panel-collapse collapse" role="tabpanel" aria-labelledby="All_LAYER"><div class="panel-body"> &nbsp;All Layer<svg width="40" height="15"></svg></div></div></div> 
            <div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_IMPERVIOUS"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_IMPERVIOUS" name="LANDSCAPE_IMPERVIOUS" value="LANDSCAPE_IMPERVIOUS"><label class="form-check-label"> &nbsp;IMPERVIOUS</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#IMPERVIOUS" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="IMPERVIOUS" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_IMPERVIOUS"><div class="panel-body"> &nbsp;LANDSCAPE IMPERVIOUS<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(255, 0, 0,0.2);stroke-width:3;stroke:rgba(255, 0, 0,0.2)"></rect></svg></div></div></div><div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_SWIMMING_POOLS"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_SWIMMING_POOLS" name="LANDSCAPE_SWIMMING_POOLS" value="LANDSCAPE_SWIMMING_POOLS"><label class="form-check-label"> &nbsp;SWIMMING POOLS</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#SWIMMING_POOLS" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="SWIMMING_POOLS" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_SWIMMING_POOLS"><div class="panel-body"> &nbsp;LANDSCAPE SWIMMING POOLS<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(0,31,255,0.2);stroke-width:3;stroke:rgba(0,31,255,0.2)"></rect></svg></div></div></div><div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_II_TURF"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_II_TURF" name="LANDSCAPE_II_TURF" value="LANDSCAPE_II_TURF"><label class="form-check-label"> &nbsp;II TURF</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#II_TURF" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="II_TURF" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_II_TURF"><div class="panel-body"> &nbsp;LANDSCAPE II TURF<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(36, 255, 0,0.2);stroke-width:3;stroke:rgba(36, 255, 0,0.2)"></rect></svg></div></div></div><div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_INI_TURF"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_INI_TURF" name="LANDSCAPE_INI_TURF" value="LANDSCAPE_INI_TURF"><label class="form-check-label"> &nbsp;INI TURF</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#INI_TURF" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="INI_TURF" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_INI_TURF"><div class="panel-body"> &nbsp;LANDSCAPE INI TURF<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(255, 255, 0,0.2);stroke-width:3;stroke:rgba(255, 255, 0,0.2)"></rect></svg></div></div></div><div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_II_CANOPY"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_II_CANOPY" name="LANDSCAPE_II_CANOPY" value="LANDSCAPE_II_CANOPY"><label class="form-check-label"> &nbsp;II CANOPY</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#II_CANOPY" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="II_CANOPY" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_II_CANOPY"><div class="panel-body"> &nbsp;LANDSCAPE II CANOPY<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(0,255,255,0.2);stroke-width:3;stroke:rgba(0,255,255,0.2)"></rect></svg></div></div></div><div class="panel panel-default"><div class="panel-heading" role="tab" id="LANDSCAPE_INI_CANOPY"><h5 class="panel-title"><input class="form-check-input" type="checkbox" id="LANDSCAPE_INI_CANOPY" name="LANDSCAPE_INI_CANOPY" value="LANDSCAPE_INI_CANOPY"><label class="form-check-label"> &nbsp;INI CANOPY</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#INI_CANOPY" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i></h5></div><div id="INI_CANOPY" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LANDSCAPE_INI_CANOPY"><div class="panel-body"> &nbsp;LANDSCAPE INI CANOPY<svg width="40" height="15"><rect width="40" height="15" style="fill:rgba(255, 255, 0,0.2);stroke-width:3;stroke:rgba(255, 255, 0,0.2)"></rect></svg></div></div></div> 
         <!---   <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Pools">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_POOLS" name="LANDSCAPE_AREA_POOLS" value="LANDSCAPE_AREA_POOLS">
                        <label class="form-check-label">Pools</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#pools" aria-expanded="false" aria-controls="pools"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="pools" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Landscape_Pools">
                    <div class="panel-body">
                        Pools
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(103,147,222);stroke-width:3;stroke:rgb(103,147,222)" />
</svg>
                </div>
            </div>
                                <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Imprevious">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_IMPREVIOUS" name="LANDSCAPE_AREA_IMPREVIOUS" value="LANDSCAPE_AREA_IMPREVIOUS">
                        <label class="form-check-label">Imprevious</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#Imprevious" aria-expanded="false" aria-controls="Imprevious"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Imprevious" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Landscape_Imprevious">
                    <div class="panel-body">
						Imprevious
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(255, 187, 153);stroke-width:3;stroke:rgb(255, 187, 153)" />
</svg>
                    </div>
                </div>
            </div>
                                
                                <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Non_Irrigated_Turf">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_TURF" name="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_TURF" value="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_TURF">
                        <label class="form-check-label">Non Irrigated Turf</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#Non_Irrigated_Turf" aria-expanded="false" aria-controls="Landscape_Non_Irrigated_Turf"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Non_Irrigated_Turf" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Landscape_Non_Irrigated_Turf">
                    <div class="panel-body">
						Non Irrigated Turf
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(198,219,199);stroke-width:3;stroke:rgb(198,219,199)" />
</svg>
                    </div>
                </div>
            </div>
                  
                                              <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Non_Irrigated_Canopy">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_CANOPY" name="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_CANOPY" value="LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED_CANOPY">
                        <label class="form-check-label">Non Irrigated Canopy</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#Non_Irrigated_Canopy" aria-expanded="false" aria-controls="Landscape_Non_Irrigated_Canopy"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Non_Irrigated_Canopy" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Landscape_Non_Irrigated_Canopy">
                    <div class="panel-body">
						Non Irrigated Canopy
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(198,219,199);stroke-width:3;stroke:rgb(198,219,199)" />
</svg>
                    </div>
                </div>
            </div>
                                
                                
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Irrigated_Grass">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_IRRIGATED_GRASS" name="LANDSCAPE_AREA_IRRIGATED_GRASS" value="LANDSCAPE_AREA_IRRIGATED_GRASS" >
                        <label class="form-check-label">Irrigable Not Irrigated Area</label><a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#Irrigated_Grass" aria-expanded="false" aria-controls="pools"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Irrigated_Grass" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LandscapeNotIrrigated">
                    <div class="panel-body">
						Irrigable Not Irrigated Area
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(198,219,199);stroke-width:3;stroke:rgb(198,219,199)" />
</svg>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Artificial_Turf">
                    <h5 class="panel-title">        
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_ARTIFICIAL_TURF" name="LANDSCAPE_AREA_ARTIFICIAL_TURF" value="LANDSCAPE_AREA_ARTIFICIAL_TURF" >
                        <label class="form-check-label">Artificial Turf</label><a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#ArtificialTurf" aria-expanded="false" aria-controls="ArtificialTurf"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="ArtificialTurf" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LandscapeArtificialTurf">
                    <div class="panel-body">
						Artificial Turf
                        <svg width="40" height="15">
  <rect width="40" height="15" style="fill:rgb(52, 99, 64);stroke-width:3;stroke:rgb(52, 99, 64)" />
</svg>
                    </div>
                </div>
            </div>
  <!-- <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Landscape_Artificial_Turf">
                    <h5 class="panel-title">        
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_IRRIGABLE_NOT_UNDEVELOPED_IRRIGATION" name="IRRIGABLE_NOT_UNDEVELOPED_IRRIGATION" value="IRRIGABLE_NOT_UNDEVELOPED_IRRIGATION" >
                        <label class="form-check-label">IRRIGABLE NOT UNDEVELOPED</label><a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#ArtificialTurfUNDEVELOPED" aria-expanded="false" aria-controls="ArtificialTurf"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-cog"></i><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="ArtificialTurfUNDEVELOPED" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LandscapeArtificialTurfUNDEVELOPED">
                    <div class="panel-body">
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="LandscapeBuildings">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="LANDSCAPE_AREA_BUILDINGS" name="LANDSCAPE_AREA_BUILDINGS" value="LANDSCAPE_AREA_BUILDINGS" >
                        <label class="form-check-label">Buildings</label><a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#buildings" aria-expanded="false" aria-controls="buildings"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-cog"></i><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="buildings" class="panel-collapse collapse" role="tabpanel" aria-labelledby="LandscapeBuildings">
                    <div class="panel-body">
                    </div>
                </div>
            </div>-->
              
            	<div class="panel panel-default">
                <div class="panel-heading" role="tab" id="Parcels>_panel">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="Parcels_custom" name="Parcels_custom" value="Parcels_custom">
                        <label class="form-check-label">PARCELS</label><a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#Parcels_panelBody" aria-expanded="false" aria-controls="Parcels_panelBody"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <div id="Parcels_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Parcels_panel">
                    <div class="panel-body">
                    </div>
                </div>
            </div>
            
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="WMS_layer_heading">
                    <h5 class="panel-title">
                        <input class="form-check-input" type="checkbox" id="WMS_Layer" name="WMS_Layer" value="WMS_Layer">
                        <label class="form-check-label">DWR LAM Imagery</label><a class="float-right" data-toggle="collapse" data-parent="#layerId" href="#WMS_layer_Panel" aria-expanded="false" aria-controls="WMS_layer_Panel"><i class="fa fa-caret-down"></i></a><i class="float-right fa fa-clock-o"></i>
                    </h5>
                </div>
                <!--<div id="WMS_layer_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="WMS_layer_Panel">
                    <div class="panel-body">
						Imagery
                        <svg width="40" height="15">
                          <rect width="40" height="15" style="fill:rgb(0,0,0);stroke-width:3;stroke:#ffffff" />
                        </svg>
                    </div>
                </div>-->
            </div>    
            <div class="panel panel-default" id="demo77_markuplayer"> <div class="panel-heading" role="tab" id="demo77_panel"> <h5 class="panel-title"> <input class="form-check-input" type="checkbox" id="demo77_markup" name="demo77_markup" value="demo77_markup"> <label class="form-check-label">&nbsp;DEMO77</label> <a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#demo77_panelBody" aria-expanded="false" aria-controls="demo77_panelBody"><i class="fa fa-caret-down"></i></a> <i class="float-right fa fa-clock-o"></i><i class="float-right fa fa-gear" data-toggle="markupexportpopover" data-placement="top" id="demo77_layer" onclick="openMarkupExportPopover(&quot;demo77_layer&quot;)" data-original-title="" title=""></i><i id="demo77_selectedMarkupEdit" class="float-right fa fa-pencil"></i> </h5> </div> <div id="demo77_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="demo77_panel"> <div class="panel-body"></div></div></div> <div class="panel panel-default" id="Markup1_markuplayer"> <div class="panel-heading" role="tab" id="Markup1_panel"> <h5 class="panel-title"> <input class="form-check-input" type="checkbox" id="Markup1_markup" name="Markup1_markup" value="Markup1_markup"> <label class="form-check-label">&nbsp;MARKUP1</label> <a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#Markup1_panelBody" aria-expanded="false" aria-controls="Markup1_panelBody"><i class="fa fa-caret-down"></i></a> <i class="float-right fa fa-clock-o"></i><i class="float-right fa fa-gear" data-toggle="markupexportpopover" data-placement="top" id="Markup1_layer" onclick="openMarkupExportPopover(&quot;Markup1_layer&quot;)" data-original-title="" title=""></i><i id="Markup1_selectedMarkupEdit" class="float-right fa fa-pencil d-none"></i> </h5> </div> <div id="Markup1_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Markup1_panel"> <div class="panel-body"></div></div></div> <div class="panel panel-default" id="Markup3_markuplayer"> <div class="panel-heading" role="tab" id="Markup3_panel"> <h5 class="panel-title"> <input class="form-check-input" type="checkbox" id="Markup3_markup" name="Markup3_markup" value="Markup3_markup"> <label class="form-check-label">&nbsp;MARKUP3</label> <a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#Markup3_panelBody" aria-expanded="false" aria-controls="Markup3_panelBody"><i class="fa fa-caret-down"></i></a> <i class="float-right fa fa-clock-o"></i><i class="float-right fa fa-gear" data-toggle="markupexportpopover" data-placement="top" id="Markup3_layer" onclick="openMarkupExportPopover(&quot;Markup3_layer&quot;)" data-original-title="" title=""></i><i id="Markup3_selectedMarkupEdit" class="float-right fa fa-pencil d-none"></i> </h5> </div> <div id="Markup3_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Markup3_panel"> <div class="panel-body"></div></div></div> <div class="panel panel-default" id="test4_markuplayer"> <div class="panel-heading" role="tab" id="test4_panel"> <h5 class="panel-title"> <input class="form-check-input" type="checkbox" id="test4_markup" name="test4_markup" value="test4_markup"> <label class="form-check-label">&nbsp;TEST4</label> <a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#test4_panelBody" aria-expanded="false" aria-controls="test4_panelBody"><i class="fa fa-caret-down"></i></a> <i class="float-right fa fa-clock-o"></i><i class="float-right fa fa-gear" data-toggle="markupexportpopover" data-placement="top" id="test4_layer" onclick="openMarkupExportPopover(&quot;test4_layer&quot;)" data-original-title="" title=""></i><i id="test4_selectedMarkupEdit" class="float-right fa fa-pencil d-none"></i> </h5> </div> <div id="test4_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="test4_panel"> <div class="panel-body"></div></div></div><div class="panel panel-default" id="basemap_layer">
                <div class="panel-heading" role="tab" id="Base_heading">
                    <a data-toggle="collapse" style="text-decoration: none;color: black;" data-parent="#layerId" href="#baseMap_Panel" aria-expanded="false" aria-controls="baseMap_Panel"><h5 class="panel-title">
                        Base Map                    <i class="float-right fa fa-caret-down"></i>
                    </h5></a>
                </div>
                <div id="baseMap_Panel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="baseMap_Panel">
                    <div class="panel-body" style="padding-top:5px;padding-bottom:5px;padding-left:5px;">
                        <input class="form-check-input" type="radio" id="BaseMap_Road" name="chkBaseMap" value="BaseMap_Road">
                        <label class="form-check-label">Road</label><br>
                                                                <input class="form-check-input" type="radio" id="BaseMap_Aerial" name="chkBaseMap" value="BaseMap_Aerial">
                                            
                        <label class="form-check-label">Aerial</label>
                                            <br>
                        <input class="form-check-input" type="radio" id="BaseMap_Aerial_Roads" name="chkBaseMap" value="BaseMap_Aerial_Roads" checked="checked">
                        <label class="form-check-label">Aerial with Labels</label>
                    </div>
                </div>
            </div>
         </div>
    <!--  <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" >Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>-->
   </div>
  <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
</div>
                </div>
<!--/ Layers Modal -->
              
 <!-- Dashboard -->           
<div class="modal fade" id="myDashboardModal" aria-labelledby="myDashboardModalLabel" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:820px;z-index:1051;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#669932">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeDashboardModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="myDashboardModalLabel" style="font-size:14px;font-weight:bold;color:white">Dashboard</h4>
      </div>
      <div class="modal-body" style="min-height:300px">
        <div>
          <div class="row" style="border-bottom:3px solid #000;">
              <div class="col-sm-7" style="float:right">
                                 <div class="col-sm-7">
                                     <label for="month">Months</label>
                                     <!--/<select class="browser-default custom-select" onchange="getWaterDistrictChart(this)" name="standDashmonth" id="standDashmonth" >-->
                                     <select class="browser-default custom-select" onchange="getWaterDistrictGoogleCharts(this)" name="standDashmonth" id="standDashmonth">

                                     <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>     
                                 </div>
                                 <div class="col-sm-5">
                                     <label for="unit">Unit</label>
                                     <select class="browser-default custom-select" name="unit" id="unit" onchange="unitConverstion(this)">
                                             <option selected="true" value="CCF">CCF</option>
                                             <option value="Gallons">Gallons</option>
                                             <option value="Acre-Feet">Acre-Feet</option>
                                     </select>     
                                 </div>
                            </div>
           </div>
           <div class="row" style="margin-top:10px;text-align:center">
                  <div class="col-sm-4">
                  		<div style="border:1px solid #000;padding:0">
	                          <h4 style="font-size:14px;color:black;font-weight:bold;padding-top:0">Dedicated Irrigation Meters</h4>
	                          <canvas id="waterDistrictmyChart" style="display: none; min-height: 150px !important; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>
	                          <div id="waterDistrictUsage" style="width: 200px; height: 180px;margin:10px;padding:10px"><div style="position: relative;"><div dir="ltr" style="position: relative; width: 200px; height: 180px;"><div style="position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;" aria-label="A chart."><svg width="200" height="180" aria-label="A chart." style="overflow: hidden;"><defs id="_ABSTRACT_RENDERER_ID_0"><clipPath id="_ABSTRACT_RENDERER_ID_1"><rect x="0" y="0" width="200" height="160"></rect></clipPath></defs><rect x="0" y="0" width="200" height="180" stroke="none" stroke-width="0" fill="#ffffff"></rect><g><rect x="0" y="0" width="200" height="160" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(http://192.168.5.13:8082/waterdistrict#_ABSTRACT_RENDERER_ID_1)"><g><rect x="0" y="159" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="0" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="119" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="0" y="80" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="0" y="40" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect></g><g><rect x="6" y="54" width="89" height="105" stroke="#2f6999" stroke-width="1" fill="#2f6999"></rect><rect x="105" y="39" width="89" height="120" stroke="#89a863" stroke-width="1" fill="#89a863"></rect></g><g><rect x="0" y="159" width="200" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g><g><rect x="50" y="54" width="1" height="0" stroke="none" stroke-width="0" fill="#999999"></rect><rect x="149" y="39" width="1" height="0" stroke="none" stroke-width="0" fill="#999999"></rect></g></g><g></g><g><g><text text-anchor="middle" x="50.25" y="173.15" font-family="Arial" font-size="9" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Current Allocation</text></g><g><text text-anchor="middle" x="149.75" y="173.15" font-family="Arial" font-size="9" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Current Usage</text></g></g><g><g><g><text text-anchor="middle" x="50" y="63.65" font-family="Arial" font-size="9" stroke="none" stroke-width="0" fill="#ffffff">13,346.893</text></g></g><g><g><text text-anchor="middle" x="149" y="48.65" font-family="Arial" font-size="9" stroke="none" stroke-width="0" fill="#ffffff">15,257.257</text></g></g></g></g><g></g></svg><div aria-label="A tabular representation of the data in the chart." style="position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"><table><thead><tr><th>Type</th><th>Usage</th></tr></thead><tbody><tr><td>Current Allocation</td><td>13,346.893</td></tr><tr><td>Current Usage</td><td>15,257.257</td></tr></tbody></table></div></div></div><div aria-hidden="true" style="display: none; position: absolute; top: 190px; left: 210px; white-space: nowrap; font-family: Arial; font-size: 9px;">15,257.257</div><div></div></div></div>
                     	</div>
                  </div>
                  <div class="col-sm-4">
                         <h4 style="font-size:14px;color:black;font-weight:bold">Current Objective %</h4>              
                         <div id="g3" class="gauge" style="height:180px"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-g3"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#ff0000" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M155,90L155,70L165,80Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">114%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>              
                  </div>
                   <div class="col-sm-4">
	                   <div style="border:1px solid #000;font-weight:bold;padding:0">
							<div class="row" style="margin-bottom:-10px;">
	                            <h4 style="font-size:14px;color:black;font-weight:bold" class="col-sm-7">Monthly Analysis</h4>
	                            <div style="font-size:10px;color:black;padding-top:10px" class="col-sm-5">
	                                  <label for="year" style="font-weight:bold">Months</label>
	                                     <select class="browser-default custom-select" name="months" id="months" onchange="loadMonthConsumptionData(this.value)">
	                                             <option selected="true" value="12">12</option>
	                                             <option value="18">18</option>
	                                             <option value="24">24</option>
	                                     </select>       
	                            </div>           
	                        </div>
							<canvas id="historicUsage" style="display: none; min-height: 150px !important; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>
	                        <div id="container" style="width:200px; height:180px;margin:10px;padding:8px"><div style="position: relative;"><div dir="ltr" style="position: relative; width: 200px; height: 180px;"><div style="position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;" aria-label="A chart."><svg width="200" height="180" aria-label="A chart." style="overflow: hidden;"><defs id="_ABSTRACT_RENDERER_ID_6"><clipPath id="_ABSTRACT_RENDERER_ID_7"><rect x="0" y="0" width="200" height="150"></rect></clipPath></defs><rect x="0" y="0" width="200" height="180" stroke="none" stroke-width="0" fill="#ffffff"></rect><g><rect x="71" y="166" width="54" height="9" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g><rect x="71" y="166" width="18" height="9" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="71" y="166" width="18" height="9" stroke="none" stroke-width="0" fill="#2f6999"></rect></g><g><rect x="107" y="166" width="18" height="9" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="107" y="166" width="18" height="9" stroke="none" stroke-width="0" fill="#89a863"></rect></g></g><g><rect x="0" y="0" width="200" height="150" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(http://192.168.5.13:8082/waterdistrict#_ABSTRACT_RENDERER_ID_7)"><g><rect x="0" y="149" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="112" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="75" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="37" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="0" width="200" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="0" y="130" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="0" y="93" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="0" y="56" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="0" y="19" width="200" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect></g><g><rect x="1" y="125" width="8" height="24" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="18" y="90" width="7" height="59" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="34" y="97" width="8" height="52" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="51" y="75" width="8" height="74" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="68" y="39" width="7" height="110" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="84" y="27" width="8" height="122" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="101" y="15" width="7" height="134" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="117" y="17" width="8" height="132" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="134" y="41" width="7" height="108" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="151" y="72" width="7" height="77" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="167" y="98" width="8" height="51" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="184" y="134" width="7" height="15" stroke="none" stroke-width="0" fill="#2f6999"></rect><rect x="9" y="122" width="7" height="27" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="25" y="102" width="8" height="47" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="42" y="105" width="7" height="44" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="59" y="99" width="7" height="50" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="75" y="66" width="8" height="83" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="92" y="49" width="7" height="100" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="108" y="36" width="8" height="113" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="125" y="31" width="7" height="118" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="141" y="36" width="8" height="113" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="158" y="44" width="8" height="105" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="175" y="100" width="7" height="49" stroke="none" stroke-width="0" fill="#89a863"></rect><rect x="191" y="140" width="8" height="9" stroke="none" stroke-width="0" fill="#89a863"></rect></g><g><rect x="0" y="149" width="200" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g></g><g></g><g><g><text text-anchor="middle" x="8.791666666666666" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Jan</text></g><g><text text-anchor="middle" x="25.375" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Feb</text></g><g><text text-anchor="middle" x="41.95833333333333" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Mar</text></g><g><text text-anchor="middle" x="58.541666666666664" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Apr</text></g><g><text text-anchor="middle" x="75.125" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">May</text></g><g><text text-anchor="middle" x="91.70833333333333" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Jun</text></g><g><text text-anchor="middle" x="108.29166666666666" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Jul</text></g><g><text text-anchor="middle" x="124.87499999999999" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Aug</text></g><g><text text-anchor="middle" x="141.45833333333331" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Sep</text></g><g><text text-anchor="middle" x="158.04166666666666" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Oct</text></g><g><text text-anchor="middle" x="174.625" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Nov</text></g><g><text text-anchor="middle" x="191.20833333333331" y="159.95" font-family="Arial" font-size="7" font-weight="bold" stroke="none" stroke-width="0" fill="#222222">Dec</text></g></g></g><g></g></svg><div aria-label="A tabular representation of the data in the chart." style="position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"><table><thead><tr><th>Month</th><th>Allocation</th><th>Consumption</th></tr></thead><tbody><tr><td>Jan </td><td>13,346.893</td><td>15,257.257</td></tr><tr><td>Feb </td><td>32,471.908</td><td>25,839.958</td></tr><tr><td>Mar </td><td>28,528.917</td><td>23,991.479</td></tr><tr><td>Apr </td><td>40,194.36</td><td>27,138.117</td></tr><tr><td>May </td><td>59,455.484</td><td>45,297.292</td></tr><tr><td>Jun </td><td>65,799.136</td><td>54,335.222</td></tr><tr><td>Jul </td><td>72,695.314</td><td>61,107.678</td></tr><tr><td>Aug </td><td>71,479.554</td><td>63,632.488</td></tr><tr><td>Sep </td><td>58,710.985</td><td>61,266.284</td></tr><tr><td>Oct </td><td>42,029.967</td><td>57,105.846</td></tr><tr><td>Nov </td><td>27,875.817</td><td>26,612.125</td></tr><tr><td>Dec </td><td>8,696.782</td><td>5,537.254</td></tr></tbody></table></div></div></div><div aria-hidden="true" style="display: none; position: absolute; top: 190px; left: 210px; white-space: nowrap; font-family: Arial; font-size: 9px;"></div><div></div></div></div>
                  	</div>
           		</div>
             </div>
            <div class="row" style="margin-top:10px;text-align:center;height:100px">
                  <div class="col-sm-4">
                  		  <h4 style="font-size:15px;color:black;font-weight:bold;margin-bottom:0;">Comparison Dashboard</h4>  
                  		  <br>
                  		  <a href="javascript:openMockManagersDashboardModal();"><img src="images/Comparision_Dash.png" height="150px" width="150px"></a>
                          <!--   <h1 style="font-size:120px;color:blue" onclick="closeDashboardModal()"><i class="fa fa-map-o iconchange" id="map"></i></h1>
                     <p style="font-size:12px;color:grey;text-align:left;">You can click on the image above to close the dashboard and enable the Water Use Efficiency layer </p> --> 
                  </div>
                  <div class="col-sm-4">
                         <h4 style="font-size:15px;color:black;font-weight:bold;margin-bottom:0">DIM Efficiency Tiers</h4>              
                         <canvas id="serviceAreaUsage" style="display: none; min-height: 150px !important; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>
                         <div id="serviceAreaUsageGoogle" style="width:240px; height:200px;padding:0"></div>
                               <!--<p style="font-size:12px;color:grey;text-align:left;">Clicking on any horizontal bar above will close the dashboard and select the sites in that tier</p>-->
                  </div>
                  <div class="col-sm-4">
                  		<h4 style="font-size:15px;color:black;font-weight:bold;margin-bottom:0;">Track Groups</h4>  
                  		<br>
                  		<a href="#" onclick="openManageModal()"><img src="images/Campaign_dash.png" height="150px" width="150px"></a>
                        <!--  <h1 style="font-size:120px;color:blue" onclick="openManageModal()"><i class="fa fa-envelope-o iconchange" id="map"></i></h1>
                     <p style="font-size:12px;color:grey;text-align:left;">You can click on the image above to the dashboard and display the campaigns that have been run.</p> -->
                  </div> 
           </div>
      </div>
    </div>
  <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
 <!-- <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#669932;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
  </div>  -->                
</div>
</div>
 <!--General Dashboard -->           
<div class="modal fade" id="generalDashboardModal" aria-labelledby="generalDashboardModalLabel" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:60%;z-index:1054;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeGeneralDashboardModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="generalDashboardModalLabel" style="font-size:14px;font-weight:bold;color:black">General Managers Dashboard</h4>
      </div>
      <div class="modal-body" style="min-height:300px">
                             
         <div style="padding:16px">
              <div class="row" style="border-bottom:2px solid #000;">
              <div class="col-sm-7" style="float:left">
                                 <div class="col-sm-7" style="padding-left:0px!important">
                                     <label for="areaOfInterest">Area of interest: <span style="font-weight:normal"> Monte Vista</span></label>
                                 </div>
                                 <div class="col-sm-5">
                                     <label for="unit">Unit</label>
                                     <select class="browser-default custom-select" name="gen-unit" id="gen-unit">
                                             <option selected="true" value="CCF">CCF</option>
                                             <option value="Gallons">Gallons</option>
                                             <option value="Acre-Feet">Acre-Feet</option>
                                     </select>     
                                 </div>
                            </div>
           </div> 
            <div class="row">
                <div class="col-sm-6" style="text-align:center;margin-top:8%">
                     <h4 style="font-weight:bold">Water Supplier Analysis Usage and Allocation Comparision</h4> 
                     <div class="row" style="margin-top:25px">
                           <div class="col-sm-6">
                                   <label for="fromMonth">From: </label>
                                   <select class="browser-default custom-select" name="fromMonth" id="fromMonth">
                                             <option selected="true" value=""></option>
                                   <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>               
                           </div> 
                           <div class="col-sm-6">
                                   <label for="toMonth">To: </label>
                                   <select class="browser-default custom-select" name="toMonth" id="toMonth" onchange="getUsagdeDataBetweenMonths()">
                                             <option selected="true" value=""></option>
                                   <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>               
                           </div>
                     </div>
                      <div class="row" style="margin-top:15px">
                           <div class="col-sm-6" style="border:1px solid #000">
                                   <label>Historic Water Analysis</label>
                                   <canvas id="historicUsageGeneralManager" style="min-height:150px!important;"></canvas>         
                           </div> 
                           <div class="col-sm-6">
                                   <label>Total % Allocation</label>
                                   <div id="totalAllocationGM" class="gauge" style="height:150px"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-totalAllocationGM"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#f9c802" stroke="none" d="M35,80L20,80A80,80,0,0,1,100,0L100,15A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M110,25L90,25L100,15Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">50%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>              
           
                           </div>
                     </div>
                </div>                     
                <div class="col-sm-6" style="border-left:2px solid #000;text-align:center;padding:10px">
                       <div class="row">
                             <div class="col-sm-6"><h4 style="font-weight:bold">Month #1 Analysis</h4></div>
                              <div class="col-sm-6">
                                   <label>Month: </label>
                                   <select class="browser-default custom-select" onchange="getWaterDistrictChartGeneralDashboard(this)" name="gmdMonth1" id="gmdMonth1">
                                             <option selected="true" value=""></option>
                                   <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>               
                           </div>
                        </div>
                       <div class="row" style="padding:5px">                
                            <div class="col-sm-6" style="border:1px solid #000;padding:15px">
                                 <canvas id="month1Usage" style="min-height: 150px !important; display: block; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>                         
                            </div>
                            <div class="col-sm-6">
                                <label style="font-weight:normal">Percent Allocation</label>
                                <div id="month1Allocation" class="gauge" style="height:150px"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-month1Allocation"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#a9d70b" stroke="none" d="M35,80L20,80A80,80,0,0,1,20,79.99999999999999L35,79.99999999999999A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M45,69.99999999999999L45,89.99999999999999L35,79.99999999999999Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>                      
                            </div>
                       </div>
                       <div class="row">
                             <div class="col-sm-6"><h4 style="font-weight:bold">Month #2 Analysis</h4></div>
                              <div class="col-sm-6">
                                   <label>Month: </label>
                                   <select class="browser-default custom-select" onchange="getWaterDistrictChartGeneralDashboard2(this)" name="gmdMonth2" id="gmdMonth2">
                                             <option selected="true" value=""></option>
                                   <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>               
                             </div>
                       </div>
                       <div class="row" style="padding:5px">
                            <div class="col-sm-6" style="border:1px solid #000;padding:15px">
                                 <canvas id="month2Usage" style="min-height: 150px !important; display: block; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>                         
                            </div>
                            <div class="col-sm-6">
                                <label style="font-weight:normal">Percent Allocation</label>
                                <div id="month2Allocation" class="gauge" style="height:150px"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-month2Allocation"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#f9c802" stroke="none" d="M35,80L20,80A80,80,0,0,1,100,0L100,15A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M110,25L90,25L100,15Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">50%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>                      
                            </div>
                       </div>                
                </div>                    
            </div>
         </div>
      </div>
      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>                  
  <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
</div>
</div>
           
            
 <!--Search Modal --> 
 <form id="searchForm" onsubmit="searchData()">          
 <div class="modal modal-dialog fade ui-draggable" id="searchQueryModal" aria-labelledby="searchQueryModalLabel" data-backdrop="false" style="min-height:500px;min-width:550px;width:600px;max-width:700px;">
  <div class="" role="document">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white;min-height:500px;max-height:500px;">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeSearchModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="searchQueryModalLabel" style="font-size:14px;font-weight:bold;color:black">Search Query</h4>
      </div>
      <div id="searchbody" class="modal-body" style="max-height:400px!important">
           <div class="row" style="font-size:12px;">
                   <div class="col-sm-4"><label>Column Name</label></div>
                   <div class="col-sm-2"><label>Operator</label></div>
                   <div class="col-sm-3"><label>Value</label></div>
                   <div class="col-sm-1"><label></label></div>
                   <div class="col-sm-2"><label>Remove Selected</label></div>
           </div>
           <div class="row" id="search-row-1">
               <div class="col-sm-4">
                            <select style="width:100%;padding:3px" name="queryName" id="queryName" onchange="getOperatorsList(this)"><option value="" selected="true"></option> <option value="Premise ID"> Premise ID </option> <option value="Customer"> Customer </option> <option value="Premise Area"> Premise Area </option> <option value="Premise Image Year"> Premise Image Year </option> <option value="Impervious"> Impervious </option> <option value="Buildings"> Buildings </option> <option value="Swimming Pools"> Swimming Pools </option> <option value="Public Pools-SLA"> Public Pools-SLA </option> <option value="Recycled Water pools-SLA"> Recycled Water pools-SLA </option> <option value="II-Turf"> II-Turf </option> <option value="II-Turf Rec Area-SLA"> II-Turf Rec Area-SLA </option> <option value="II-Turf Comm Garden-SLA"> II-Turf Comm Garden-SLA </option> <option value="II-Turf Rec-SLA"> II-Turf Rec-SLA </option> <option value="II-Turf Slopes-SLA"> II-Turf Slopes-SLA </option> <option value="II-Canopy"> II-Canopy </option> <option value="II-Canopy Rec Area-SLA"> II-Canopy Rec Area-SLA </option> <option value="II-Canopy Comm Garden-SLA"> II-Canopy Comm Garden-SLA </option> <option value="II-Canopy Rec-SLA"> II-Canopy Rec-SLA </option> <option value="II-Canopy Slopes-SLA"> II-Canopy Slopes-SLA </option> <option value="INI-Turf"> INI-Turf </option> <option value="INI-Turf Rec Area-SLA"> INI-Turf Rec Area-SLA </option> <option value="INI-Turf Comm Garden-SLA"> INI-Turf Comm Garden-SLA </option> <option value="INI-Turf Rec-SLA"> INI-Turf Rec-SLA </option> <option value="INI-Turf Slopes-SLA"> INI-Turf Slopes-SLA </option> <option value="INI-Canopy"> INI-Canopy </option> <option value="INI-Canopy Rec Area-SLA"> INI-Canopy Rec Area-SLA </option> <option value="INI-Canopy Comm Garden-SLA"> INI-Canopy Comm Garden-SLA </option> <option value="INI-Canopy Rec-SLA"> INI-Canopy Rec-SLA </option> <option value="INI-Canopy Slopes-SLA"> INI-Canopy Slopes-SLA </option> <option value="Undeveloped FPI"> Undeveloped FPI </option> <option value="Undeveloped"> Undeveloped </option> <option value="Class 7A"> Class 7A </option> <option value="Open Nat Water"> Open Nat Water </option> <option value="Open Nat Water Rec-SLA"> Open Nat Water Rec-SLA </option> <option value="Open Nat Water Sustb- SLA"> Open Nat Water Sustb- SLA </option> <option value="Artificial Turf"> Artificial Turf </option> <option value="Agricultural Land"> Agricultural Land </option> <option value="Irrigable Irrigated"> Irrigable Irrigated </option> <option value="Irrigable Irrigated SLA"> Irrigable Irrigated SLA </option> <option value="Irrigable Not Irrigated"> Irrigable Not Irrigated </option> <option value="Irrigable Not Irrigated SLA"> Irrigable Not Irrigated SLA </option> <option value="Not Irrigable"> Not Irrigable </option> <option value="Total II + INI"> Total II + INI </option> <option value="Consumption"> Consumption </option> <option value="Allocation"> Allocation </option> <option value="% Allocation"> % Allocation </option> <option value="Meter ID"> Meter ID </option> <option value="Meter Address"> Meter Address </option></select>
                    </div>
                   <div class="col-sm-2">
                         <select style="width:100%;padding:3px" name="operation" id="operation" onchange="getSelectedOperator(this)">
                                    <option selected="true" value=""></option>
                         </select>     
                   </div>
                   <div class="col-sm-3" id="singleValueDiv" name="singleValueDiv">
                         <input name="value" style="width:80%" type="text" minlength="1" maxlength="500" id="value"> 
                   </div>
                   <div class="col-sm-3" id="betweenDiv" name="betweenDiv" style="display:none;"> 
                        <div class="row">
                             <input name="value" style="width:40%" type="text" minlength="1" maxlength="500" id="value">  
                             <label style="margin:2.5px;">To</label> 
                             <input name="valueTo" style="width:40%" type="text" minlength="1" maxlength="500" id="valueTo">
                        </div>
                   </div>
                  <div class="col-sm-1">
                    <label name="unitid" id="unitid"></label>
                  </div>
                   <div class="col-sm-2" style="text-align:center"><button class="btn btn-danger" style="padding:3px 6px" disabled=""> - </button></div>

            </div>
      </div>
      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
             <button type="button" class="btn btn-info" id="addNewDivModal">Add New Query</button>  
             <button type="submit" ontouchstart="searchData()" class="btn btn-primary">Search</button>
             <button type="button" ontouchstart="closeSearchModal()" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>                  
  <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
</div>
</div>  
</form>         
 <!--/Search Modal -->                          
 <!--Display Modal -->                          
<div class="col-sm-12 panel-wrap panel-wrap-new" id="displayModal" style="z-index: 9999; height: 814px;">
  <div id="displayPanel" class="panel1" style="overflow: hidden; height: 814px;">
    <div style="background:rgba(243, 242, 241, 0.5);"> 
                 <div class="col-md-12" style="background:#aaa;border:2px solid #000">
                           <div class="row" style="padding-top:5px">
                                <div class="col-md-8">Current % Allocation</div>
                                <div class="col-md-4" style="text-align:right">
                                        <label style="margin-right:5px"><i class="fa fa-copy" id="fa-copy"></i></label>
                                        <label onclick="closeDetailsModal()"><i class="fa fa-times" id="fa-times"></i></label>
                                </div>
                           </div>
                 </div>
                 <div class="col-md-12" id="detailsdata" style="border-right: 2px solid rgb(0, 0, 0); background: rgb(248, 242, 242); max-height: 79vh; overflow: auto; height: 814px;">
                           <div style="padding-top:10px">
                                <div class="panel panel-default mb-15">
                                    <div class="panel-body" id="detailsModal" style="display: none;">
                                         <h4 id="detailHeader" style="font-weight:bold">Premise Details</h4><div class="row" id="premiseId-row" style="padding-top:5px;padding-bottom:5px"> <div class="col-md-4"> Premise ID </div> <div class="col-md-8"> <label id="premiseId"> </label><label id="premiseId_Unit">&nbsp;</label></div></div> <div class="row" id="premiseCustType-row" style="padding-top:5px;padding-bottom:5px"> <div class="col-md-4"> Customer </div> <div class="col-md-8"> <label id="premiseCustType"> </label><label id="premiseCustType_Unit">&nbsp;</label></div></div> <div class="row" id="premiseArea-row" style="padding-top:5px;padding-bottom:5px"> <div class="col-md-4"> Premise Area </div> <div class="col-md-8"> <label id="premiseArea"> </label><label id="premiseArea_Unit">&nbsp;SQFT</label></div></div> <div class="row" id="premiseConsumption-row" style="padding-top:5px;padding-bottom:5px"> <div class="col-md-4"> Consumption </div> <div class="col-md-8"> <label id="premiseConsumption">NaN&nbsp;CCF</label><label id="premiseConsumption_Unit">&nbsp;</label></div></div> <div class="row" id="premiseAllocation-row" style="padding-top:5px;padding-bottom:5px"> <div class="col-md-4"> Allocation </div> <div class="col-md-8"> <label id="premiseAllocation">NaN&nbsp;CCF</label><label id="premiseAllocation_Unit">&nbsp;</label></div></div>
                                          
                                          <div class="row" id="premisePrecentAllocation-row" style="padding-top:5px">
                                                <div class="col-md-4">Current % Allocation</div>
                                                <div class="col-md-8">
                                                      <label id="premisePrecentAllocation">49.08%</label>
                                                </div>
                                          </div>
                                          <div class="row" id="totalMeters-row" style="padding-top:5px">
                                                <div class="col-md-4">Total No. Of Meters</div>
                                                <div class="col-md-8">
                                                      <label id="totalMeters">2</label>
                                                </div>
                                          </div>
                                           <div class="row" id="chartView-row" style="padding-top:5px">
                                                <div class="col-md-4">Usage History</div>
                                                <div class="col-md-8">
                                                      <label id="chartView" style="color:blue;">View Chart</label>
                                                </div>
                                          </div>
                                          <div class="row" id="chartView-row-2" style="padding-top:5px">
                                                <div class="col-md-4">Tool</div>
                                                <div class="col-md-8">
                                                      <label id="qctoolop" style="color:blue;">QC Tool</label>
                                                </div>
                                          </div>
                                          <div class="row" id="premiseII-row" style="padding-top:5px">
                                          		<div class="col-md-7"><h4 style="font-weight:bold;font-size:16px">Irrigable Irrigated</h4></div>
                                                <div class="col-md-5" style="text-align:center;padding:10px">
                                                          <label id="premiseII"></label><label>&nbsp; SQFT</label>
                                                </div>
                                          </div>
                                           <section id="content-ii">
                                          	  <button id="content-ii-btn" class="accordion">Details</button><div class="panel col-md-12"> <div id="landscape2A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Swimming Pools </div><div class="col-md-5"> <label id="landscape2A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape2A_PP-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Public Pools-SLA </div><div class="col-md-5"> <label id="landscape2A_PP"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape2A_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Recycled Water pools-SLA </div><div class="col-md-5"> <label id="landscape2A_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Turf </div><div class="col-md-5"> <label id="landscape3A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3A_APR-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Turf Rec Area-SLA </div><div class="col-md-5"> <label id="landscape3A_APR"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3A_CG-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Turf Comm Garden-SLA </div><div class="col-md-5"> <label id="landscape3A_CG"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3A_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Turf Rec-SLA </div><div class="col-md-5"> <label id="landscape3A_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3A_ES-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Turf Slopes-SLA </div><div class="col-md-5"> <label id="landscape3A_ES"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3B-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Canopy </div><div class="col-md-5"> <label id="landscape3B"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3B_APR-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Canopy Rec Area-SLA </div><div class="col-md-5"> <label id="landscape3B_APR"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3B_CG-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Canopy Comm Garden-SLA </div><div class="col-md-5"> <label id="landscape3B_CG"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3B_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Canopy Rec-SLA </div><div class="col-md-5"> <label id="landscape3B_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape3B_ES-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> II-Canopy Slopes-SLA </div><div class="col-md-5"> <label id="landscape3B_ES"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape7A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Class 7A </div><div class="col-md-5"> <label id="landscape7A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape8A_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Open Nat Water Rec-SLA </div><div class="col-md-5"> <label id="landscape8A_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape8A_SW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Open Nat Water Sustb- SLA </div><div class="col-md-5"> <label id="landscape8A_SW"> </label><label>&nbsp;SQFT</label></div></div> </div>
                                              <div class="panel col-md-12">
                                               <div class="row" style="padding-top:5px">
                                                    <div class="col-md-6">Swimming Pools</div>
                                                    <div class="col-md-5">
                                                          <label id="landscape2A">9685003&nbsp; SQFT</label>
                                                    </div>
                                                </div>
                                              </div>
                                           </section>
                                           <div class="row" id="premiseINI-row" style="padding-top:5px">
                                          		<div class="col-md-7"><h4 style="font-weight:bold;font-size:16px">Irrigable Not Irrigated</h4></div>
                                                <div class="col-md-5" style="text-align:center;padding:10px">
                                                          <label id="premiseINI"></label><label>&nbsp; SQFT</label>
                                                </div>
                                          </div>
                                           <section id="content-ini">
                                          	  <button id="content-ini-btn" class="accordion">Details</button><div class="panel col-md-12"> <div id="landscape4A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Turf </div><div class="col-md-5"> <label id="landscape4A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4A_APR-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Turf Rec Area-SLA </div><div class="col-md-5"> <label id="landscape4A_APR"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4A_CG-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Turf Comm Garden-SLA </div><div class="col-md-5"> <label id="landscape4A_CG"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4A_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Turf Rec-SLA </div><div class="col-md-5"> <label id="landscape4A_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4A_ES-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Turf Slopes-SLA </div><div class="col-md-5"> <label id="landscape4A_ES"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4B-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Canopy </div><div class="col-md-5"> <label id="landscape4B"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4B_APR-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Canopy Rec Area-SLA </div><div class="col-md-5"> <label id="landscape4B_APR"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4B_CG-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Canopy Comm Garden-SLA </div><div class="col-md-5"> <label id="landscape4B_CG"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4B_RW-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Canopy Rec-SLA </div><div class="col-md-5"> <label id="landscape4B_RW"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape4B_ES-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> INI-Canopy Slopes-SLA </div><div class="col-md-5"> <label id="landscape4B_ES"> </label><label>&nbsp;SQFT</label></div></div> </div>
                                              <div class="panel col-md-12">
                                               <div class="row" style="padding-top:5px">
                                                    <div class="col-md-6">II Canopy</div>
                                                    <div class="col-md-5">
                                                          <label id="landscape2A">9685003&nbsp; SQFT</label>
                                                    </div>
                                                </div>
                                              </div>
                                           </section>
                                           <div class="row" id="premiseNI-row" style="padding-top:5px">
                                          		<div class="col-md-7"><h4 style="font-weight:bold;font-size:16px">Not Irrigable</h4></div>
                                                <div class="col-md-5" style="text-align:center;padding:10px">
                                                          <label id="premiseNI"></label><label>&nbsp; SQFT</label>
                                                </div>
                                          </div>
                                           <section id="content-ni">
                                          	  <button id="content-ni-btn" class="accordion">Details</button><div class="panel col-md-12"> <div id="landscape1A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Impervious </div><div class="col-md-5"> <label id="landscape1A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape1B-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Buildings </div><div class="col-md-5"> <label id="landscape1B"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape5A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Undeveloped FPI </div><div class="col-md-5"> <label id="landscape5A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape6A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Undeveloped </div><div class="col-md-5"> <label id="landscape6A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape8A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Open Nat Water </div><div class="col-md-5"> <label id="landscape8A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape9A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Artificial Turf </div><div class="col-md-5"> <label id="landscape9A"> </label><label>&nbsp;SQFT</label></div></div> <div id="landscape10A-row" class="row" style="padding-top:5px;padding-bottom:5px"><div class="col-md-6"> Agricultural Land </div><div class="col-md-5"> <label id="landscape10A"> </label><label>&nbsp;SQFT</label></div></div> </div>
                                              <div class="panel col-md-12">
                                               <div class="row" style="padding-top:5px">
                                                    <div class="col-md-6">Impervious</div>
                                                    <div class="col-md-5">
                                                          <label id="landscape2A">9685003&nbsp; SQFT</label>
                                                    </div>
                                                </div>
                                              </div>
                                           </section>
                                          <h4 style="font-weight:bold">Meter Details</h4>
                                          <section id="content" style="min-height:250px">
                                              <button class="accordion">Meter 1</button>
                                              <div class="panel col-md-12">
                                               <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Meter Id</div>
                                                    <div class="col-md-8">
                                                          <label>9685003</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Meter Address</div>
                                                    <div class="col-md-8">
                                                          <label>LIBERTY E/S, ALISO VIEJO</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Customer Name</div>
                                                    <div class="col-md-8">
                                                          <label>TDC ALISO VIEJO PARTNERS LLC</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Water Type</div>
                                                    <div class="col-md-8">
                                                          <label>Recycled</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">APN Number</div>
                                                    <div class="col-md-8">
                                                          <label>4344-009-021</label>
                                                    </div>
                                                </div>  
                                              </div>
                                              <button class="accordion">Meter 2</button>
                                              <div class="panel col-md-12">
                                                    <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Meter Id</div>
                                                    <div class="col-md-8">
                                                          <label>9685004</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Meter Address</div>
                                                    <div class="col-md-8">
                                                          <label>LIBERTY E/S, ALISO VIEJO</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Customer Name</div>
                                                    <div class="col-md-8">
                                                          <label>TDC ALISO VIEJO PARTNERS LLC</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">Water Type</div>
                                                    <div class="col-md-8">
                                                          <label>Recycled</label>
                                                    </div>
                                                </div>
                                                <div class="row" style="padding-top:5px">
                                                    <div class="col-md-4">APN Number</div>
                                                    <div class="col-md-8">
                                                          <label>4344-009-021</label>
                                                    </div>
                                                </div>
                                               </div>
                                          </section>
                                    </div>  
                                     <div class="panel-body" id="customLayer" style="display: block;">
                                    	<h4 id="customLayerHeader" style="font-weight:bold">Layer Details</h4>
                                    	<div id="customLayerDiv"><div class="row" style="padding-top: 5px; display: block;" id="shape_row"> <div class="col-md-4">Shape</div> <div class="col-md-8"><label id="shape"><a href="javascript:editShapes({&quot;hashKey&quot;:&quot;demo77_01122023124740PM&quot;,&quot;the_geom&quot;:&quot;POINT(-117.69809 34.04491)&quot;,&quot;type&quot;:&quot;Cross&quot;,&quot;label&quot;:&quot;&quot;,&quot;notes&quot;:&quot;&quot;,&quot;FillColor&quot;:&quot;#bbff00&quot;,&quot;StrokeColor&quot;:null,&quot;StrokeThickness&quot;:null,&quot;fontSize&quot;:&quot;72&quot;,&quot;zIndex&quot;:null})">Edit Shape</a></label></div></div> <div class="row" style="padding-top: 5px; display: block;" id="label_row"> <div class="col-md-4">Label</div> <div class="col-md-8"><label id="label"><a href="javascript:editData({&quot;hashKey&quot;:&quot;demo77_01122023124740PM&quot;,&quot;the_geom&quot;:&quot;POINT(-117.69809 34.04491)&quot;,&quot;type&quot;:&quot;Cross&quot;,&quot;label&quot;:&quot;&quot;,&quot;notes&quot;:&quot;&quot;,&quot;FillColor&quot;:&quot;#bbff00&quot;,&quot;StrokeColor&quot;:null,&quot;StrokeThickness&quot;:null,&quot;fontSize&quot;:&quot;72&quot;,&quot;zIndex&quot;:null})">Edit</a></label></div></div> <div class="row" style="padding-top: 5px; display: block;" id="notes_row"> <div class="col-md-4">Notes</div> <div class="col-md-8"><label id="notes"><a href="javascript:editData({&quot;hashKey&quot;:&quot;demo77_01122023124740PM&quot;,&quot;the_geom&quot;:&quot;POINT(-117.69809 34.04491)&quot;,&quot;type&quot;:&quot;Cross&quot;,&quot;label&quot;:&quot;&quot;,&quot;notes&quot;:&quot;&quot;,&quot;FillColor&quot;:&quot;#bbff00&quot;,&quot;StrokeColor&quot;:null,&quot;StrokeThickness&quot;:null,&quot;fontSize&quot;:&quot;72&quot;,&quot;zIndex&quot;:null})">Edit</a></label></div></div></div>
                                     </div>  
                             </div>
                     </div>
              </div>
        </div>
</div>
</div>
      <div class="modal modal-dialog fade ui-draggable" id="myUsageModal" aria-labelledby="myUsageModalLabel" style="top:15%;position:fixed;left:32%;width:450px">
  <div class="" role="document" style="width:450px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeMyUsageModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="myUsageModalLabel" style="font-size:14px;font-weight:bold;color:black"></h4>
      </div>
      <div class="modal-body">
        <canvas id="barChart" style="display: block; box-sizing: border-box; height: 0px; width: 0px;" height="0" width="0"></canvas>
      </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>  
        <!-- Create Bookmark Modal -->
        <div class="modal fade" id="bookmarkModal" aria-labelledby="bookmarkModalLabel" style="position: fixed;top:15%;left:50%;outline: none;overflow:hidden;">
  <div class="modal-dialog ui-draggable" role="document" style="width:300px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="bookmarkModalLabel" style="font-size:14px;font-weight:bold;color:black;">Add Bookmark</h4>
      </div>
      <div class="modal-body">
                        <label for="bookMarkName">Bookmark Name :</label>
                            
        <textarea name="bookMarkName" rows="2" id="bookMarkName" class="form-control" placeholder="" style="max-width:260px;max-height:50px"></textarea>
                         
                        
      </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="addBookmarkData()">Add</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                            
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>  
        <!-- Delete Bookmark Modal -->
        <div class="modal fade" id="deletebookmarkModal" aria-labelledby="deletebookmarkModalLabel" style="position: fixed;top:15%;left:50%;outline: none;overflow:hidden;">
  <div class="modal-dialog ui-draggable" role="document" style="width:300px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="deletebookmarkModalLabel" style="font-size:14px;font-weight:bold;color:black">Remove Bookmark</h4>
      </div>
      <div class="modal-body">
                        <label for="bookMarkSelect">Select bookmark to delete :</label>
                            
       <select class="form-select" aria-label="select bookmark" id="bookMarkSelect" style="width:265px">
<option value="06042023125435PM">test</option><option value="24042023064417PM">STATE ST</option><option value="24042023064442PM">MISSION BLVD</option><option value="24042023064510PM">AIRPORT</option><option value="20052023054124PM">WD Center</option></select>
                         
                        
      </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="deleteBookmarkData()">Delete</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                            
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>  
        <!-- Edit Campaign Modal -->           
<div class="modal fade" id="myModal1editCamp" aria-labelledby="myModal1editCampLabel" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:350px;margin-bottom:40px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white;min-height:400px">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="myModal1editCampLabel" style="font-size:14px;font-weight:bold;color:black">Edit Campaigns</h4>
      </div>
      <div class="modal-body" style="min-height:350px;height:auto">
             <form method="post" id="form">
                         <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_title_edit">Title</label>
                              </div>
                              <div class="col-sm-8">
                                       <input name="camp_title_edit" type="text" maxlength="100" id="camp_title_edit" class="form-control" placeholder="">
                                    <input name="camp_hash_edit" type="hidden" maxlength="100" id="camp_hash_edit" class="form-control" placeholder="">
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_desc_edit">Description</label>
                              </div>
                              <div class="col-sm-8">
                                       <textarea name="camp_desc_edit" type="text" maxlength="100" style="max-width:210px;max-height:50px" id="camp_desc_edit" class="form-control" placeholder=""></textarea>
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_date_edit">Action Date</label>
                              </div>
                              <div class="col-sm-8">
                                       <input name="camp_date_edit" type="date" id="camp_date_edit" class="form-control" placeholder="">
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px;margin-bottom:10px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_notes_edit">Notes</label>
                              </div>
                              <div class="col-sm-8">
                                       <textarea name="camp_notes_edit" type="text" maxlength="100" style="max-width:210px;max-height:50px" id="camp_notes_edit" class="form-control" placeholder=""></textarea>
                              </div>
                        </div>
                        
                </form>
      </div>
     <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" onclick="EditCampaignData()">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
      </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>
        
        
        <!-- Create Campaign Modal -->           
<div class="modal fade" id="myModal1" aria-labelledby="myModal1Label" data-backdrop="false" style="z-index: 9999;">
  <div class="modal-dialog ui-draggable" role="document" style="width:350px;margin-bottom:40px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white;min-height:400px">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="myModal1Label" style="font-size:14px;font-weight:bold;color:black">Create Groups</h4>
      </div>
      <div class="modal-body" style="min-height:350px;height:auto">
             <form method="post" id="form">
                         <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_title">Title</label>
                              </div>
                              <div class="col-sm-8">
                                       <input name="camp_title" type="text" maxlength="100" id="camp_title" class="form-control" placeholder="">
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_desc">Description</label>
                              </div>
                              <div class="col-sm-8">
                                       <textarea name="camp_desc" type="text" maxlength="100" style="max-width:210px;max-height:50px" id="camp_desc" class="form-control" placeholder=""></textarea>
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_date">Action Date</label>
                              </div>
                              <div class="col-sm-8">
                                       <input name="camp_date" type="date" id="camp_date" class="form-control" placeholder="">
                              </div>
                        </div>
                        <div class="row" style="margin-top:12px;margin-bottom:10px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="camp_notes">Notes</label>
                              </div>
                              <div class="col-sm-8">
                                       <textarea name="camp_notes" type="text" maxlength="100" style="max-width:210px;max-height:50px" id="camp_notes" class="form-control" placeholder=""></textarea>
                              </div>
                        </div>
                        
                </form>
      </div>
     <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" onclick="createCampaignData()">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
      </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>
             <!-- dashboard popover content -->
<div id="popover-content" style="display: none">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="openDashboardModal()" id="Standard Dashboard">Standard Dashboard</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="openMockManagersDashboardModal()" id="Comparison Dashboard">Comparison Dashboard</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="openManageModal()" id="Manage Campaigns">Manage Campaigns</li>
      </ul>
</div>
            <!-- Search popover content -->
<div id="popover-content-search" style="display: none">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="searchByPremiseId()" id="searchPremise">Locate By Premise Id</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="searchByAddress()" id="searchAddress">Locate By Address</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="searchByLatLong()" id="searchLatLon">Locate By Lat/Long(Ex: 33.5,-117.5)</li>
      </ul>
</div>
        <div id="popover-content-bookmark" style="display: none">
      <ul class="list-group custom-popover" id="bookMarkList" style="font-size:13px;min-width:150px;margin-left:10px;max-height:500px;max-width:200px;"><li class="list-group-item" onclick="addBookmark()" style="cursor: pointer;padding:0px">Add Bookmark</li><li class="list-group-item" onclick="removeBookmark()" style="cursor: pointer;padding:0px">Remove Bookmarks</li><li class="list-group-item" onclick="opneBookMark({&quot;hashKey&quot;:&quot;06042023125435PM&quot;,&quot;name&quot;:&quot;test&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;zoomLevel&quot;:&quot;13&quot;,&quot;centroidLat&quot;:34.05832834593013,&quot;centroidLon&quot;:-117.6943176513494})" style="cursor: pointer;padding:0px">test</li><li class="list-group-item" onclick="opneBookMark({&quot;hashKey&quot;:&quot;24042023064417PM&quot;,&quot;name&quot;:&quot;STATE ST&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;zoomLevel&quot;:&quot;18&quot;,&quot;centroidLat&quot;:34.06111807325373,&quot;centroidLon&quot;:-117.71018227977103})" style="cursor: pointer;padding:0px">STATE ST</li><li class="list-group-item" onclick="opneBookMark({&quot;hashKey&quot;:&quot;24042023064442PM&quot;,&quot;name&quot;:&quot;MISSION BLVD&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;zoomLevel&quot;:&quot;18&quot;,&quot;centroidLat&quot;:34.056336206268966,&quot;centroidLon&quot;:-117.6425996195675})" style="cursor: pointer;padding:0px">MISSION BLVD</li><li class="list-group-item" onclick="opneBookMark({&quot;hashKey&quot;:&quot;24042023064510PM&quot;,&quot;name&quot;:&quot;AIRPORT&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;zoomLevel&quot;:&quot;18&quot;,&quot;centroidLat&quot;:34.060161261613274,&quot;centroidLon&quot;:-117.61971540200244})" style="cursor: pointer;padding:0px">AIRPORT</li><li class="list-group-item" onclick="opneBookMark({&quot;hashKey&quot;:&quot;20052023054124PM&quot;,&quot;name&quot;:&quot;WD Center&quot;,&quot;userId&quot;:&quot;Pallavi&quot;,&quot;zoomLevel&quot;:&quot;13&quot;,&quot;centroidLat&quot;:34.05307000392542,&quot;centroidLon&quot;:-117.69105608518728})" style="cursor: pointer;padding:0px">WD Center</li></ul>
</div>
  
<!-- Campaign Dashboard Modal -->           
<div class="modal fade" id="campaignDashboardModal" aria-labelledby="campaignDashboardLabel" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:820px;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeCampaigndashboard()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="campaignDashboardLabel" style="font-size:14px;font-weight:bold;color:black">Campaign Progress</h4>
      </div>
      <div class="modal-body" style="min-height:400px;padding:15px;overflow:hidden;">
          <!--<div class="row" style="border-bottom:1px solid #000;">
                      <div class="col-sm-7" style="padding:5px;">
                             <label id="campaignTitleDisplay">Over 20CCF and 150%</label><br>
                             <label id="campaignDescDisplay" style="font-weight:normal;font-size:16px">/792 Customers</label>
                      </div>
                      <div class="col-sm-5">
                             <label></label>
                      </div>
            </div> -->
            <!--<div class="row" style="padding:16px">
                   <div class="col-sm-7" style="padding:5px;">
                             <h1><strong>Campaign Progress</strong></h1><br>
                             <div style="border:1px solid #000;padding:32px">
                                  <canvas id="campaignChart" style="min-height:290px!important"></canvas>  

                                 <div id="containerCampaign" style="height:200px!important;width:200px;margin:10px"></div>
                             </div>
                   </div>
                   <div class="col-sm-5" style="margin-top:10%;padding:16px">
                             <div class="row" style="margin-top:16px">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="fromDate">From: </label>
                              </div>
                              <div class="col-sm-8">
                                    <select style="width:90%;padding:3px" name="fromDate" id="fromDate" >
                                           
                                     </select>   
                              </div> 
                            </div>
                            <div class="row">
                              <div class="col-sm-3" style="padding:5px;margin-left:16px;">
                                      <label for="toDate">To: </label>
                              </div>
                              <div class="col-sm-8">
                                    <select style="width:90%;padding:3px" onchange="campaignDashboardChange(this)" name="toDate" id="toDate" >
                                            
                                     </select>   
                              </div> 
                            </div>
                            <div class="row" style="padding-left:16px;margin-top:5%;text-align:center">
                                   <h4><strong>Conservation Effectiveness Trend</strong></h4>
                            </div>
                             <div class="row" style="padding-left:16px;margin-top:5%;text-align:center">
                                  <div class="col-sm-4" ></div>
                                  <div class="col-sm-4" style="padding:5px;width:40%;background-color:#ffcf00;color:white" id="effectiveConservationScore">
                                            
                                  </div>
                                  <div class="col-sm-4" ></div>
                            </div>
                           <div class="row" style="padding-left:16px;margin-top:5%;text-align:center"><label style="font-weight:normal">Conservation Score</label></div>
                      </div>             
            </div>-->

                             
         <div style="padding:5px;margin-top:-15px">
            <div class="row" style="border-bottom:2px solid #000;padding-bottom:10px">
            <div class="row">
            	<h4 class="col-md-7" style="font-size:20px;">Date Range 1</h4>
				<div class="col-md-5" style="text-align:center">
					<label>Totals&nbsp;</label>
					<label class="switch">
					  <input type="checkbox" id="toggleCampaign">
					  <span class="slider round"></span>
					</label>
					<label>&nbsp;Averages</label>
				</div>
            </div>
            <div>
	            <div class="row">
	            	<div class="col-sm-6">
	            		<label>From: </label>
	                    <select class="browser-default custom-select" name="campaignFromMonthRange1" id="campaignFromMonthRange1">
	                               <option selected="true" value=""></option>
	                    </select>      
	            	</div>
	            	<div class="col-sm-6">
	            		<label>To: </label>
	                    <select class="browser-default custom-select" onchange="getCampaignBetweenMonthsRange1(this)" name="campaignToMonthRange1" id="campaignToMonthRange1">
	                               <option selected="true" value=""></option>
	                    </select>      
	            	</div>

	            </div>
	            <div class="row">
	            	<div class="col-sm-8">
	            		<div id="campaigndateRange1" style="width:100%!important">
	                    </div>
	            	</div>
	            	<div class="col-sm-4">
	            		<div style="border:1px solid #ccc;background-color:#f5f0f0;border-radius:10px">
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignUsageRange1" style="font-size:12px;margin:0;">Total Usage</label>
	            				<br>
	            				<label id="campaignUsageValRange1" style="font-size:12px;margin:0;">0.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignAllocationRange1" style="font-size:12px;margin:0;">Total Allocation</label>
	            				<br>
	            				<label id="campaignAllocationValRange1" style="font-size:12px;margin:0;">0.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignPerRange1" style="font-size:12px;margin:0;">Total Allocation %</label>
	            				<br>
	            				<label id="campaignPerValRange1" style="font-size:12px;margin:0;">0.00%</label>
	            			</div>
	            		</div>
	                      
	            	</div>
	            </div>
            </div>
           </div> 
           <div class="row" style="margin-bottom:5px">
             <h4 style="font-size:20px;">Date Range 2</h4>
             <div class="row">
            	<div class="col-sm-6">
            		<label>From: </label>
                    <select class="browser-default custom-select" name="campaignFromMonthRange2" id="campaignFromMonthRange2">
                               <option selected="true" value=""></option>
                    </select>      
            	</div>
            	<div class="col-sm-6">
            		<label>To: </label>
                    <select class="browser-default custom-select" onchange="getCampaignBetweenMonthsRange2(this)" name="campaignToMonthRange2" id="campaignToMonthRange2">
                               <option selected="true" value=""></option>
                    </select>      
            	</div>
            </div>
            <div class="row">
	            	<div class="col-sm-8">
	            		<div id="campaigndateRange2" style="width:100%">
	                    </div>
	            	</div>
	            	<div class="col-sm-4">
	            		<div style="border:1px solid #ccc;background-color:#f5f0f0;border-radius:10px">
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignusageRange2" style="font-size:12px;margin:0;">Total Usage</label>
	            				<br>
	            				<label id="campaignusageValRange2" style="font-size:12px;margin:0;">0.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignallocationRange2" style="font-size:12px;margin:0;">Total Allocation</label>
	            				<br>
	            				<label id="campaignallocationValRange2" style="font-size:12px;margin:0;">0.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="campaignallocationPerRange2" style="font-size:12px;margin:0;">Total Allocation %</label>
	            				<br>
	            				<label id="campaignallocationPerValRange2" style="font-size:12px;margin:0;">0.00%</label>
	            			</div>
	            		</div>
	            	</div>
	            </div>
         </div>
      </div>        
      </div>
    <!-- <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>-->
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div>
 <!--<div class="col-sm-12 panel-wrap-list" style="z-index: 999;" id="listmodal">
      <div class="panel-list">
              <div class="row" id="listBtndiv">
                    <div class="col-sm-5">
                        <div id="pAllocationBtn" class="btn btn-primary list-content-button">
                            Current % Allocation (0 Records) 
                        </div>
                    </div>
                    <div class="col-sm-7 text-right mt-10" >
                        <a class="btnHamburger" href="javascript:browseSavedSearchesModal()" id="browseSearch"><i class="fa fa-table"></i> Browse Lists</a>
                        <a class="btnHamburger" href="javascript:openSaveSearchModal()" id="saveSearchbtn"><i class="fa fa-table"></i> Save Search</a>
                        <a class="btnHamburger" href="javascript:openDisplayColumnsModal()" id="updteFields"><i class="fa fa-table"></i> Manage</a>
                        <a class="btnHamburger" href="javascript:exportToCSV()" id="exportCSV"><i class="fa fa-share-square"></i> Export</a>
                        <a class="btnHamburger" href="javascript:exportToMailMerge()"><i class="fa fa-envelope-o"></i> Mail Merge</a>
  						<a class="btnHamburger" onclick="openAddressLabelModal()" id="exportToMailMerge"><i class="fa fa-share-square"></i> Address Labels</a>     
  						<a class="btnHamburger" href="#" onclick="openCampaigndashboard()"><i class="fa fa-wpforms"></i> Save & Track</a>
                        <a class="btnHamburger" href="#" onclick="clearList()"><i id="clear" class="fa fa-times-circle"></i> Clear</a>
                        <a class="btnHamburger" href="#" onclick="minimizeListModule()"><i id="minList" class="fa fa-arrow-circle-down"></i></a>
                    </div>
              </div>
                <div class="row" style="max-height: 280px;width:100%;margin-left:5px;display:none" id="list-table">
              <table id="dtBasicExample" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%" max-height="150px">
                  <thead>
                    <tr id="listHeader">
                  
                    </tr>
                  </thead>
                  <tbody >
                     
                  </tbody>
            </table>    
                    </div>
                        
      </div>
 </div>
 -->
<div class="col-sm-12 panel-wrap-list" style="z-index: 999;" id="listmodal">
      <div class="panel-list">
              <div class="row" id="listBtndiv">
                    <div class="col-sm-5" id="addListMenu">
                        <ul class="nav nav-tabs mb-3" id="ex1" role="tablist">
                            <li class="nav-item active" role="presentation" id="mainTab">
                                <a class="btn btn-primary list-content-button" id="pAllocationBtn" display="block" onclick="deleteList(this.id)" data-toggle="tab" href="#ex1-tabs0-1" role="tab" aria-controls="pAllocationBtn" aria-selected="true">Current % Allocation (0 Records)</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-sm-7 text-right mt-10">
                        <a class="btnHamburger" href="javascript:browseSavedSearchesModal()" id="browseSearch"><i class="fa fa-table"></i> Browse Lists</a>
                        <a class="btnHamburger" href="javascript:openSaveSearchModal()" id="saveSearchbtn"><i class="fa fa-table"></i> Save Search</a>
                        <a class="btnHamburger" href="javascript:openDisplayColumnsModal()" id="updteFields"><i class="fa fa-table"></i> Manage</a>
                        <a class="btnHamburger" href="javascript:exportToCSV()" id="exportCSV"><i class="fa fa-share-square"></i> Export</a>
                        <a class="btnHamburger" href="javascript:exportToMailMerge()"><i class="fa fa-envelope-o"></i> Mail Merge</a>
  						<a class="btnHamburger" onclick="openAddressLabelModal()" id="exportToMailMerge"><i class="fa fa-share-square"></i> Address Labels</a>     
  						<a class="btnHamburger" href="#" onclick="openCampaigndashboard()"><i class="fa fa-wpforms"></i> Save &amp; Track</a>
                        <a class="btnHamburger" href="#" id="clearlist"><i id="clear" class="fa fa-times-circle"></i> Clear</a>
                        <a class="btnHamburger" href="#" onclick="minimizeListModule()"><i id="minList" class="fa fa-arrow-circle-down"></i></a>
                    </div>
              </div>
              <div class="row" style="max-height: 280px; width: 100%; margin-left: 5px; display: none;" id="list-table">
            		<div class="tab-content" id="ex1-content">
            				<div class="tab-pane fade in active" id="ex1-tabs0-1">
                     			<table id="dtBasicExample" role="tabpanel" aria-labelledby="pAllocationBtn" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%" max-height="150px">
					                  <thead>
						                    <tr id="listHeader">
						                      
						                    </tr>
					                  </thead>
					                  <tbody style="margin-bottom:50px!important">
					                     
					                  </tbody>
           						 </table>  
            				</div>
            		</div>
              </div>
                        
      </div>
 </div>

 <!--Alert Modal--->
<div class="modal fade" id="modalAlert" tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" style="top:20%;left:40%">
  <div class="modal-dialog ui-draggable" role="document">
    <div class="modal-content ui-resizable" style="height:300px!important;">
      <div class="modal-header alert-danger text-center ui-draggable-handle">
        <button class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        <h2 class="modal-title" id="alertModalLabel">Alert!</h2>
      </div>
      <div class="modal-body alert-danger shadow my-3" style="padding:0;height:230px;">
<!--            <div class="col-lg-2 col-md-12 ml-auto">
-->            <div class="alert text-center" role="alert" style="border-radius: 3px">
               <!--<button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="True" style="color:#721C24">&times;</span>
                </button>-->
                <div class="text-center">
                    <svg width="8em" height="8em" viewBox="0 0 16 16" class="m-1 bi bi-exclamation-circle-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"></path>
                    </svg>
                </div>
                <p style="font-size:18px" class="mb-0 font-weight-light">List Does Not Contain Any Data.</p>
<!--            </div>
-->        </div>
      </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
</div> 

<!--General Dashboard Mock-->           
<div class="modal fade" id="generalDashboardModalMock" aria-labelledby="generalDashboardModalLabelMock" data-backdrop="false">
  <div class="modal-dialog ui-draggable" role="document" style="width:820px;z-index:1054;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#669932">
        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart="closeMockGeneralDashboardModal()"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="generalDashboardModalLabelMock" style="font-size:14px;font-weight:bold;color:white">Comparison Dashboard</h4>
      </div>
      <div class="modal-body" style="min-height:300px;overflow:hidden">
                             
         <div style="padding:5px;margin-top:-15px">
            <div class="row" style="border-bottom:2px solid #000;padding-bottom:10px">
            <div class="row">
            	<h4 class="col-md-7" style="font-size:20px;">Date Range 1</h4>
				<div class="col-md-5" style="text-align:center">
					<label>Totals&nbsp;</label>
					<label class="switch">
					  <input type="checkbox" id="toggleGM">
					  <span class="slider round"></span>
					</label>
					<label>&nbsp;Averages</label>
				</div>
            </div>
            <div>
	            <div class="row">
	            	<div class="col-sm-6">
	            		<label>From: </label>
	                    <select class="browser-default custom-select" name="gmdMockFromMonthRange1" id="gmdMockFromMonthRange1">
	                               <option selected="true" value=""></option>
	                    <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>      
	            	</div>
	            	<div class="col-sm-6">
	            		<label>To: </label>
	                    <select class="browser-default custom-select" onchange="getUsagdeDataBetweenMonthsRange1()" name="gmdMockToMonthRange1" id="gmdMockToMonthRange1">
	                               <option selected="true" value=""></option>
	                    <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>      
	            	</div>

	            </div>
	            <div class="row">
	            	<div class="col-sm-8" style="padding:0">
	            		<div id="dateRange1" style="width:100%"><div style="position: relative;"><div dir="ltr" style="position: relative; width: 500px; height: 180px;"><div style="position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;" aria-label="A chart."><svg width="500" height="180" aria-label="A chart." style="overflow: hidden;"><defs id="_ABSTRACT_RENDERER_ID_40"><clipPath id="_ABSTRACT_RENDERER_ID_41"><rect x="75" y="40" width="400" height="126"></rect></clipPath></defs><rect x="0" y="0" width="500" height="180" stroke="none" stroke-width="0" fill="#ffffff"></rect><g><rect x="75" y="17" width="66" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g><rect x="75" y="17" width="22" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="75" y="22.5" width="22" height="5.5" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#89a863"></rect><path d="M75,22.5L97,22.5" stroke="#89a863" stroke-width="2" fill-opacity="1" fill="none"></path></g><g><rect x="119" y="17" width="22" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="119" y="22.5" width="22" height="5.5" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#2f6999"></rect><path d="M119,22.5L141,22.5" stroke="#2f6999" stroke-width="2" fill-opacity="1" fill="none"></path></g></g><g><rect x="75" y="40" width="400" height="126" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(http://192.168.5.13:8082/waterdistrict#_ABSTRACT_RENDERER_ID_41)"><g><rect x="75" y="165" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="123" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="82" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="40" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect></g><g><g><path d="M75.5,165.5L75.5,165.5L75.5,67.64835L111.77272727272728,95.45004999999999L148.04545454545456,119.0403L184.3181818181818,143.25518333333332L220.5909090909091,111.38014999999999L256.8636363636364,117.95179999999999L293.1363636363636,98.5094L329.4090909090909,66.40753333333332L365.6818181818182,55.83476666666667L401.95454545454544,44.34115L438.22727272727275,46.36741666666666L474.5,151.00536666666667L474.5,165.5L474.5,165.5Z" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#89a863"></path></g><g><path d="M75.5,165.5L75.5,165.5L75.5,63.38953333333333L111.77272727272728,70.32358333333333L148.04545454545456,121.14646666666667L184.3181818181818,140.07123333333334L220.5909090909091,122.4334L256.8636363636364,125.51419999999999L293.1363636363636,120.2698L329.4090909090909,90.00451666666666L365.6818181818182,74.9413L401.95454545454544,63.65386666666666L438.22727272727275,59.44584999999999L474.5,156.27125L474.5,165.5L474.5,165.5Z" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#2f6999"></path></g></g><g><rect x="75" y="165" width="400" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g><g><path d="M75.5,67.64835L111.77272727272728,95.45004999999999L148.04545454545456,119.0403L184.3181818181818,143.25518333333332L220.5909090909091,111.38014999999999L256.8636363636364,117.95179999999999L293.1363636363636,98.5094L329.4090909090909,66.40753333333332L365.6818181818182,55.83476666666667L401.95454545454544,44.34115L438.22727272727275,46.36741666666666L474.5,151.00536666666667" stroke="#89a863" stroke-width="2" fill-opacity="1" fill="none"></path><path d="M75.5,63.38953333333333L111.77272727272728,70.32358333333333L148.04545454545456,121.14646666666667L184.3181818181818,140.07123333333334L220.5909090909091,122.4334L256.8636363636364,125.51419999999999L293.1363636363636,120.2698L329.4090909090909,90.00451666666666L365.6818181818182,74.9413L401.95454545454544,63.65386666666666L438.22727272727275,59.44584999999999L474.5,156.27125" stroke="#2f6999" stroke-width="2" fill-opacity="1" fill="none"></path></g></g><g></g></g><g></g></svg><div aria-label="A tabular representation of the data in the chart." style="position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"><table><thead><tr><th>Month</th><th>Allocation</th><th>Current Usage</th></tr></thead><tbody><tr><td>Sep 20</td><td>58,710.99</td><td>61,266.28</td></tr><tr><td>Oct 20</td><td>42,029.97</td><td>57,105.85</td></tr><tr><td>Nov 20</td><td>27,875.82</td><td>26,612.12</td></tr><tr><td>Jan 20</td><td>13,346.89</td><td>15,257.26</td></tr><tr><td>Feb 20</td><td>32,471.91</td><td>25,839.96</td></tr><tr><td>Mar 20</td><td>28,528.92</td><td>23,991.48</td></tr><tr><td>Apr 20</td><td>40,194.36</td><td>27,138.12</td></tr><tr><td>May 20</td><td>59,455.48</td><td>45,297.29</td></tr><tr><td>Jun 20</td><td>65,799.14</td><td>54,335.22</td></tr><tr><td>Jul 20</td><td>72,695.31</td><td>61,107.68</td></tr><tr><td>Aug 20</td><td>71,479.55</td><td>63,632.49</td></tr><tr><td>Dec 20</td><td>8,696.78</td><td>5,537.25</td></tr></tbody></table></div></div></div><div aria-hidden="true" style="display: none; position: absolute; top: 190px; left: 510px; white-space: nowrap; font-family: Arial; font-size: 11px;"></div><div></div></div></div>
	            	</div>
	            	<div class="col-sm-4">
	            		<div style="border:1px solid #ccc;background-color:#f5f0f0;border-radius:10px">
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="usageRange1" style="font-size:12px;margin:0;">Total Usage</label>
	            				<br>
	            				<label id="usageValRange1" style="font-size:12px;margin:0;">467,121.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="allocationRange1" style="font-size:12px;margin:0;">Total Allocation</label>
	            				<br>
	            				<label id="allocationValRange1" style="font-size:12px;margin:0;">521,285.12</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="allocationPerRange1" style="font-size:12px;margin:0;">Total %</label>
	            				<br>
	            				<label id="allocationPerValRange1" style="font-size:12px;margin:0;">89.61</label>
	            			</div>
	            		</div>
	                      
	            	</div>
	            </div>
            </div>
           </div> 
           <div class="row" style="margin-bottom:5px">
             <h4 style="font-size:20px;">Date Range 2</h4>
             <div class="row">
            	<div class="col-sm-6">
            		<label>From: </label>
                    <select class="browser-default custom-select" name="gmdMockFromMonthRange2" id="gmdMockFromMonthRange2">
                               <option selected="true" value=""></option>
                    <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>      
            	</div>
            	<div class="col-sm-6">
            		<label>To: </label>
                    <select class="browser-default custom-select" onchange="getUsagdeDataBetweenMonthsRange2()" name="gmdMockToMonthRange2" id="gmdMockToMonthRange2">
                               <option selected="true" value=""></option>
                    <option value="Jan 20">Jan 20</option><option value="Feb 20">Feb 20</option><option value="Mar 20">Mar 20</option><option value="Apr 20">Apr 20</option><option value="May 20">May 20</option><option value="Jun 20">Jun 20</option><option value="Jul 20">Jul 20</option><option value="Aug 20">Aug 20</option><option value="Sep 20">Sep 20</option><option value="Oct 20">Oct 20</option><option value="Nov 20">Nov 20</option><option value="Dec 20">Dec 20</option></select>      
            	</div>
            </div>
            <div class="row">
	            	<div class="col-sm-8" style="padding:0">
	            		<div id="dateRange2" style="width:100%"><div style="position: relative;"><div dir="ltr" style="position: relative; width: 500px; height: 180px;"><div style="position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;" aria-label="A chart."><svg width="500" height="180" aria-label="A chart." style="overflow: hidden;"><defs id="_ABSTRACT_RENDERER_ID_42"><clipPath id="_ABSTRACT_RENDERER_ID_43"><rect x="75" y="40" width="400" height="126"></rect></clipPath></defs><rect x="0" y="0" width="500" height="180" stroke="none" stroke-width="0" fill="#ffffff"></rect><g><rect x="75" y="17" width="66" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g><rect x="75" y="17" width="22" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="75" y="22.5" width="22" height="5.5" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#89a863"></rect><path d="M75,22.5L97,22.5" stroke="#89a863" stroke-width="2" fill-opacity="1" fill="none"></path></g><g><rect x="119" y="17" width="22" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><rect x="119" y="22.5" width="22" height="5.5" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#2f6999"></rect><path d="M119,22.5L141,22.5" stroke="#2f6999" stroke-width="2" fill-opacity="1" fill="none"></path></g></g><g><rect x="75" y="40" width="400" height="126" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(http://192.168.5.13:8082/waterdistrict#_ABSTRACT_RENDERER_ID_43)"><g><rect x="75" y="165" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="123" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="82" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="75" y="40" width="400" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect></g><g><g><path d="M75.5,165.5L75.5,165.5L75.5,67.64835L111.77272727272728,95.45004999999999L148.04545454545456,119.0403L184.3181818181818,143.25518333333332L220.5909090909091,111.38014999999999L256.8636363636364,117.95179999999999L293.1363636363636,98.5094L329.4090909090909,66.40753333333332L365.6818181818182,55.83476666666667L401.95454545454544,44.34115L438.22727272727275,46.36741666666666L474.5,151.00536666666667L474.5,165.5L474.5,165.5Z" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#89a863"></path></g><g><path d="M75.5,165.5L75.5,165.5L75.5,63.38953333333333L111.77272727272728,70.32358333333333L148.04545454545456,121.14646666666667L184.3181818181818,140.07123333333334L220.5909090909091,122.4334L256.8636363636364,125.51419999999999L293.1363636363636,120.2698L329.4090909090909,90.00451666666666L365.6818181818182,74.9413L401.95454545454544,63.65386666666666L438.22727272727275,59.44584999999999L474.5,156.27125L474.5,165.5L474.5,165.5Z" stroke="none" stroke-width="0" fill-opacity="0.6" fill="#2f6999"></path></g></g><g><rect x="75" y="165" width="400" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g><g><path d="M75.5,67.64835L111.77272727272728,95.45004999999999L148.04545454545456,119.0403L184.3181818181818,143.25518333333332L220.5909090909091,111.38014999999999L256.8636363636364,117.95179999999999L293.1363636363636,98.5094L329.4090909090909,66.40753333333332L365.6818181818182,55.83476666666667L401.95454545454544,44.34115L438.22727272727275,46.36741666666666L474.5,151.00536666666667" stroke="#89a863" stroke-width="2" fill-opacity="1" fill="none"></path><path d="M75.5,63.38953333333333L111.77272727272728,70.32358333333333L148.04545454545456,121.14646666666667L184.3181818181818,140.07123333333334L220.5909090909091,122.4334L256.8636363636364,125.51419999999999L293.1363636363636,120.2698L329.4090909090909,90.00451666666666L365.6818181818182,74.9413L401.95454545454544,63.65386666666666L438.22727272727275,59.44584999999999L474.5,156.27125" stroke="#2f6999" stroke-width="2" fill-opacity="1" fill="none"></path></g></g><g></g></g><g></g></svg><div aria-label="A tabular representation of the data in the chart." style="position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"><table><thead><tr><th>Month</th><th>Allocation</th><th>Current Usage</th></tr></thead><tbody><tr><td>Sep 20</td><td>58,710.99</td><td>61,266.28</td></tr><tr><td>Oct 20</td><td>42,029.97</td><td>57,105.85</td></tr><tr><td>Nov 20</td><td>27,875.82</td><td>26,612.12</td></tr><tr><td>Jan 20</td><td>13,346.89</td><td>15,257.26</td></tr><tr><td>Feb 20</td><td>32,471.91</td><td>25,839.96</td></tr><tr><td>Mar 20</td><td>28,528.92</td><td>23,991.48</td></tr><tr><td>Apr 20</td><td>40,194.36</td><td>27,138.12</td></tr><tr><td>May 20</td><td>59,455.48</td><td>45,297.29</td></tr><tr><td>Jun 20</td><td>65,799.14</td><td>54,335.22</td></tr><tr><td>Jul 20</td><td>72,695.31</td><td>61,107.68</td></tr><tr><td>Aug 20</td><td>71,479.55</td><td>63,632.49</td></tr><tr><td>Dec 20</td><td>8,696.78</td><td>5,537.25</td></tr></tbody></table></div></div></div><div aria-hidden="true" style="display: none; position: absolute; top: 190px; left: 510px; white-space: nowrap; font-family: Arial; font-size: 11px;"></div><div></div></div></div>
	            	</div>
	            	<div class="col-sm-4">
	            		<div style="border:1px solid #ccc;background-color:#f5f0f0;border-radius:10px">
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="usageRange2" style="font-size:12px;margin:0;">Total Usage</label>
	            				<br>
	            				<label id="usageValRange2" style="font-size:12px;margin:0;">467,121.00</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="allocationRange2" style="font-size:12px;margin:0;">Total Allocation</label>
	            				<br>
	            				<label id="allocationValRange2" style="font-size:12px;margin:0;">521,285.12</label>
	            			</div>
	            			<div style="background-color:white;text-align:center;margin:15px">
	            				<label id="allocationPerRange2" style="font-size:12px;margin:0;">Total %</label>
	            				<br>
	            				<label id="allocationPerValRange2" style="font-size:12px;margin:0;">89.61</label>
	            			</div>
	            		</div>
	            	</div>
	            </div>
         </div>
      </div>           
  </div>
 <!--  <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>  -->  
<div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
</div>
</div>
  
		<!-- Address labels -->
		<div class="modal fade" tabindex="-1" id="addressLabelModalComponent" role="dialog" data-backdrop="false">
		<div class="modal-dialog ui-draggable" role="document">
		    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
		       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
			        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
			        <h4 class="modal-title" id="bookmarkModalLabel" style="font-size:14px;font-weight:bold;color:black;">Address Labels</h4>
			      </div>
			   <div class="modal-body" style="min-height:120px;margin-bottom:60px;min-width:25%;overflow: auto;max-height: 120px;">
		        <select id="addressLabelsDropdown">
		        <option value="Avery5160">Avery 5160 (Height: 1" x Width: 2.63")</option>
		        <option value="Avery5660">Avery 5660 (Height: 1" x Width: 2.83")</option>
		        <option value="Avery5661">Avery 5661 (Height: 1" x Width: 4.25")</option>
		        <option value="Avery5662">Avery 5662 (Height: 1.33" x Width: 4.25")</option>
		        <option value="Avery5663">Avery 5663 (Height: 2" x Width: 4.25")</option>
		        </select>
		        <br>
		      </div>
		      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
		        <button type="button" class="btn btn-primary" onclick="javascript:exportToAddressLables()">Ok</button>
		      </div>
		    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
		  </div>
		</div>




		<!--update display columns-->
		<!--Display Columnns -->
		<div class="modal fade" tabindex="-1" id="displayColumns" role="dialog" data-backdrop="false">
				<div class="modal-dialog ui-draggable" role="document">
				    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
				       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
					        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
					        <h4 class="modal-title" style="font-size:14px;font-weight:bold;color:black;">Update Display Columns</h4>
					      </div>
					   <div class="modal-body" style="min-height:400px;margin-bottom:60px;min-width:25%;overflow: auto;max-height: 400px;">
				       		<div id="displayfields" name="displayfields"><input class="form-check-input" type="checkbox" id="Sr._No._checkbox" name="Sr._No._checkbox" value="Sr._No._checkbox" checked=""> <label class="form-check-label">Sr. No.</label><br> <input class="form-check-input" type="checkbox" id="Premise_ID_checkbox" name="Premise_ID_checkbox" value="Premise_ID_checkbox" checked=""> <label class="form-check-label">Premise ID</label><br> <input class="form-check-input" type="checkbox" id="Customer_checkbox" name="Customer_checkbox" value="Customer_checkbox" checked=""> <label class="form-check-label">Customer</label><br> <input class="form-check-input" type="checkbox" id="Premise_Area_checkbox" name="Premise_Area_checkbox" value="Premise_Area_checkbox"> <label class="form-check-label">Premise Area</label><br> <input class="form-check-input" type="checkbox" id="Premise_Image_Year_checkbox" name="Premise_Image_Year_checkbox" value="Premise_Image_Year_checkbox"> <label class="form-check-label">Premise Image Year</label><br> <input class="form-check-input" type="checkbox" id="Impervious_checkbox" name="Impervious_checkbox" value="Impervious_checkbox"> <label class="form-check-label">Impervious</label><br> <input class="form-check-input" type="checkbox" id="Buildings_checkbox" name="Buildings_checkbox" value="Buildings_checkbox"> <label class="form-check-label">Buildings</label><br> <input class="form-check-input" type="checkbox" id="Swimming_Pools_checkbox" name="Swimming_Pools_checkbox" value="Swimming_Pools_checkbox"> <label class="form-check-label">Swimming Pools</label><br> <input class="form-check-input" type="checkbox" id="Public_Pools-SLA_checkbox" name="Public_Pools-SLA_checkbox" value="Public_Pools-SLA_checkbox"> <label class="form-check-label">Public Pools-SLA</label><br> <input class="form-check-input" type="checkbox" id="Recycled_Water_pools-SLA_checkbox" name="Recycled_Water_pools-SLA_checkbox" value="Recycled_Water_pools-SLA_checkbox"> <label class="form-check-label">Recycled Water pools-SLA</label><br> <input class="form-check-input" type="checkbox" id="Class_2A_SLA_checkbox" name="Class_2A_SLA_checkbox" value="Class_2A_SLA_checkbox"> <label class="form-check-label">Class 2A SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Turf_checkbox" name="II-Turf_checkbox" value="II-Turf_checkbox"> <label class="form-check-label">II-Turf</label><br> <input class="form-check-input" type="checkbox" id="II-Turf_Rec_Area-SLA_checkbox" name="II-Turf_Rec_Area-SLA_checkbox" value="II-Turf_Rec_Area-SLA_checkbox"> <label class="form-check-label">II-Turf Rec Area-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Turf_Comm_Garden-SLA_checkbox" name="II-Turf_Comm_Garden-SLA_checkbox" value="II-Turf_Comm_Garden-SLA_checkbox"> <label class="form-check-label">II-Turf Comm Garden-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Turf_Rec-SLA_checkbox" name="II-Turf_Rec-SLA_checkbox" value="II-Turf_Rec-SLA_checkbox"> <label class="form-check-label">II-Turf Rec-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Turf_Slopes-SLA_checkbox" name="II-Turf_Slopes-SLA_checkbox" value="II-Turf_Slopes-SLA_checkbox"> <label class="form-check-label">II-Turf Slopes-SLA</label><br> <input class="form-check-input" type="checkbox" id="Class_3A_SLA_checkbox" name="Class_3A_SLA_checkbox" value="Class_3A_SLA_checkbox"> <label class="form-check-label">Class 3A SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Canopy_checkbox" name="II-Canopy_checkbox" value="II-Canopy_checkbox"> <label class="form-check-label">II-Canopy</label><br> <input class="form-check-input" type="checkbox" id="II-Canopy_Rec_Area-SLA_checkbox" name="II-Canopy_Rec_Area-SLA_checkbox" value="II-Canopy_Rec_Area-SLA_checkbox"> <label class="form-check-label">II-Canopy Rec Area-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Canopy_Comm_Garden-SLA_checkbox" name="II-Canopy_Comm_Garden-SLA_checkbox" value="II-Canopy_Comm_Garden-SLA_checkbox"> <label class="form-check-label">II-Canopy Comm Garden-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Canopy_Rec-SLA_checkbox" name="II-Canopy_Rec-SLA_checkbox" value="II-Canopy_Rec-SLA_checkbox"> <label class="form-check-label">II-Canopy Rec-SLA</label><br> <input class="form-check-input" type="checkbox" id="II-Canopy_Slopes-SLA_checkbox" name="II-Canopy_Slopes-SLA_checkbox" value="II-Canopy_Slopes-SLA_checkbox"> <label class="form-check-label">II-Canopy Slopes-SLA</label><br> <input class="form-check-input" type="checkbox" id="Class_3B_SLA_checkbox" name="Class_3B_SLA_checkbox" value="Class_3B_SLA_checkbox"> <label class="form-check-label">Class 3B SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Turf_checkbox" name="INI-Turf_checkbox" value="INI-Turf_checkbox"> <label class="form-check-label">INI-Turf</label><br> <input class="form-check-input" type="checkbox" id="INI-Turf_Rec_Area-SLA_checkbox" name="INI-Turf_Rec_Area-SLA_checkbox" value="INI-Turf_Rec_Area-SLA_checkbox"> <label class="form-check-label">INI-Turf Rec Area-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Turf_Comm_Garden-SLA_checkbox" name="INI-Turf_Comm_Garden-SLA_checkbox" value="INI-Turf_Comm_Garden-SLA_checkbox"> <label class="form-check-label">INI-Turf Comm Garden-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Turf_Rec-SLA_checkbox" name="INI-Turf_Rec-SLA_checkbox" value="INI-Turf_Rec-SLA_checkbox"> <label class="form-check-label">INI-Turf Rec-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Turf_Slopes-SLA_checkbox" name="INI-Turf_Slopes-SLA_checkbox" value="INI-Turf_Slopes-SLA_checkbox"> <label class="form-check-label">INI-Turf Slopes-SLA</label><br> <input class="form-check-input" type="checkbox" id="Class_4A_SLA_checkbox" name="Class_4A_SLA_checkbox" value="Class_4A_SLA_checkbox"> <label class="form-check-label">Class 4A SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Canopy_checkbox" name="INI-Canopy_checkbox" value="INI-Canopy_checkbox"> <label class="form-check-label">INI-Canopy</label><br> <input class="form-check-input" type="checkbox" id="INI-Canopy_Rec_Area-SLA_checkbox" name="INI-Canopy_Rec_Area-SLA_checkbox" value="INI-Canopy_Rec_Area-SLA_checkbox"> <label class="form-check-label">INI-Canopy Rec Area-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Canopy_Comm_Garden-SLA_checkbox" name="INI-Canopy_Comm_Garden-SLA_checkbox" value="INI-Canopy_Comm_Garden-SLA_checkbox"> <label class="form-check-label">INI-Canopy Comm Garden-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Canopy_Rec-SLA_checkbox" name="INI-Canopy_Rec-SLA_checkbox" value="INI-Canopy_Rec-SLA_checkbox"> <label class="form-check-label">INI-Canopy Rec-SLA</label><br> <input class="form-check-input" type="checkbox" id="INI-Canopy_Slopes-SLA_checkbox" name="INI-Canopy_Slopes-SLA_checkbox" value="INI-Canopy_Slopes-SLA_checkbox"> <label class="form-check-label">INI-Canopy Slopes-SLA</label><br> <input class="form-check-input" type="checkbox" id="Class_4B_SLA_checkbox" name="Class_4B_SLA_checkbox" value="Class_4B_SLA_checkbox"> <label class="form-check-label">Class 4B SLA</label><br> <input class="form-check-input" type="checkbox" id="Undeveloped_FPI_checkbox" name="Undeveloped_FPI_checkbox" value="Undeveloped_FPI_checkbox"> <label class="form-check-label">Undeveloped FPI</label><br> <input class="form-check-input" type="checkbox" id="Undeveloped_checkbox" name="Undeveloped_checkbox" value="Undeveloped_checkbox"> <label class="form-check-label">Undeveloped</label><br> <input class="form-check-input" type="checkbox" id="Class_7A_checkbox" name="Class_7A_checkbox" value="Class_7A_checkbox"> <label class="form-check-label">Class 7A</label><br> <input class="form-check-input" type="checkbox" id="Open_Nat_Water_checkbox" name="Open_Nat_Water_checkbox" value="Open_Nat_Water_checkbox"> <label class="form-check-label">Open Nat Water</label><br> <input class="form-check-input" type="checkbox" id="Open_Nat_Water_Rec-SLA_checkbox" name="Open_Nat_Water_Rec-SLA_checkbox" value="Open_Nat_Water_Rec-SLA_checkbox"> <label class="form-check-label">Open Nat Water Rec-SLA</label><br> <input class="form-check-input" type="checkbox" id="Open_Nat_Water_Sustb-_SLA_checkbox" name="Open_Nat_Water_Sustb-_SLA_checkbox" value="Open_Nat_Water_Sustb-_SLA_checkbox"> <label class="form-check-label">Open Nat Water Sustb- SLA</label><br> <input class="form-check-input" type="checkbox" id="Artificial_Turf_checkbox" name="Artificial_Turf_checkbox" value="Artificial_Turf_checkbox"> <label class="form-check-label">Artificial Turf</label><br> <input class="form-check-input" type="checkbox" id="Agricultural_Land_checkbox" name="Agricultural_Land_checkbox" value="Agricultural_Land_checkbox"> <label class="form-check-label">Agricultural Land</label><br> <input class="form-check-input" type="checkbox" id="Irrigable_Irrigated_checkbox" name="Irrigable_Irrigated_checkbox" value="Irrigable_Irrigated_checkbox"> <label class="form-check-label">Irrigable Irrigated</label><br> <input class="form-check-input" type="checkbox" id="Irrigable_Irrigated_SLA_checkbox" name="Irrigable_Irrigated_SLA_checkbox" value="Irrigable_Irrigated_SLA_checkbox"> <label class="form-check-label">Irrigable Irrigated SLA</label><br> <input class="form-check-input" type="checkbox" id="Irrigable_Not_Irrigated_checkbox" name="Irrigable_Not_Irrigated_checkbox" value="Irrigable_Not_Irrigated_checkbox"> <label class="form-check-label">Irrigable Not Irrigated</label><br> <input class="form-check-input" type="checkbox" id="Irrigable_Not_Irrigated_SLA_checkbox" name="Irrigable_Not_Irrigated_SLA_checkbox" value="Irrigable_Not_Irrigated_SLA_checkbox"> <label class="form-check-label">Irrigable Not Irrigated SLA</label><br> <input class="form-check-input" type="checkbox" id="Not_Irrigable_checkbox" name="Not_Irrigable_checkbox" value="Not_Irrigable_checkbox"> <label class="form-check-label">Not Irrigable</label><br> <input class="form-check-input" type="checkbox" id="Total_II_+_INI_checkbox" name="Total_II_+_INI_checkbox" value="Total_II_+_INI_checkbox"> <label class="form-check-label">Total II + INI</label><br> <input class="form-check-input" type="checkbox" id="Consumption_checkbox" name="Consumption_checkbox" value="Consumption_checkbox" checked=""> <label class="form-check-label">Consumption</label><br> <input class="form-check-input" type="checkbox" id="Allocation_checkbox" name="Allocation_checkbox" value="Allocation_checkbox" checked=""> <label class="form-check-label">Allocation</label><br> <input class="form-check-input" type="checkbox" id="%_Allocation_checkbox" name="%_Allocation_checkbox" value="%_Allocation_checkbox" checked=""> <label class="form-check-label">% Allocation</label><br> <input class="form-check-input" type="checkbox" id="Conservation_Score_checkbox" name="Conservation_Score_checkbox" value="Conservation_Score_checkbox"> <label class="form-check-label">Conservation Score</label><br> <input class="form-check-input" type="checkbox" id="Meter_ID_checkbox" name="Meter_ID_checkbox" value="Meter_ID_checkbox"> <label class="form-check-label">Meter ID</label><br> <input class="form-check-input" type="checkbox" id="Meter_Address_checkbox" name="Meter_Address_checkbox" value="Meter_Address_checkbox"> <label class="form-check-label">Meter Address</label><br> <input class="form-check-input" type="checkbox" id="Meter_Type_checkbox" name="Meter_Type_checkbox" value="Meter_Type_checkbox"> <label class="form-check-label">Meter Type</label><br> <input class="form-check-input" type="checkbox" id="Meter_Size_checkbox" name="Meter_Size_checkbox" value="Meter_Size_checkbox"> <label class="form-check-label">Meter Size</label><br> <input class="form-check-input" type="checkbox" id="Meter_Identificaton_Class_checkbox" name="Meter_Identificaton_Class_checkbox" value="Meter_Identificaton_Class_checkbox"> <label class="form-check-label">Meter Identificaton Class</label><br> <input class="form-check-input" type="checkbox" id="Assessor_Parcel_Number_checkbox" name="Assessor_Parcel_Number_checkbox" value="Assessor_Parcel_Number_checkbox"> <label class="form-check-label">Assessor Parcel Number</label><br> <input class="form-check-input" type="checkbox" id="Total_Meters_checkbox" name="Total_Meters_checkbox" value="Total_Meters_checkbox" checked=""> <label class="form-check-label">Total Meters</label><br></div>
				      </div>
				      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
				        <button type="button" class="btn btn-primary" onclick="javascript:updateDisplayFields()">Ok</button>
				      </div>
				    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
				  </div>
		</div>



		 <!-- QC Tool -->           
<div class="modal fade" id="QCToolModal" aria-labelledby="myDashboardModalLabel2" data-backdrop="false" style="z-index:1000;text-align:center;">
  <div class="modal-dialog ui-draggable" id="QCToolModal2" role="document" style="width:800px;z-index:1051;">
    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
      <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#669932">
        <button class="close" onclick="closeQCToolModal()" ontouchstart="closeQCToolModal()" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        <h4 class="modal-title" id="myDashboardModalLabel2" style="font-size:14px;font-weight:bold;color:white">Scenario Planning</h4>
      </div>
      <div class="modal-body" style="min-height:320px">
        
        <div>
           <div class="row" style="text-align:center">
                  <div class="col-sm-4" style="width:380px;">
                          <h4 style="font-size:16px;color:black;font-weight:bold;padding-top:0">Current Allocation</h4>
                  </div>
<!--                  <div class="col-sm-4"  style="width:190px;" >
                         <h4 style="font-size:14px;color:black;font-weight:bold">Percent Allocation %</h4>              
                  </div>
-->                    <div class="col-sm-4" style="width:380px;">
                          <h4 style="font-size:16px;color:black;font-weight:bold;padding-top:0">Prediction Allocation</h4>
                  </div>
   <!--               <div class="col-sm-4"  style="width:190px;" >
                         <h4 style="font-size:14px;color:black;font-weight:bold">Percent Allocation %</h4>              
                  </div>
   -->                
                </div>
             </div>
             
        <div style="padding:16px">
           <div class="row" style="margin-top:10px;text-align:center">
                  <div class="col-sm-4" style="border:1px solid #000;padding:0;height:190px;width:190px;">
                          <h4 style="font-size:14px;color:black;font-weight:bold;padding-top:0">Water District Usage</h4>
                          <canvas id="cookieChart" height="0" width="0" style="display: block; box-sizing: border-box; height: 0px; width: 0px;"></canvas>
                  </div>
                  <div class="col-sm-4" style="height:190px;width:190px;">
                         <h4 style="font-size:14px;color:black;font-weight:bold">Percent Allocation %</h4>              
                         <br>                                           
                         <div id="gauge1" class="gauge"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-gauge1"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#fd2900" stroke="none" d="M35,80L20,80A80,80,0,0,1,175.8094872641181,54.447668584813776L161.59520840209598,59.23873072516119A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M155.3130639209795,71.90895806007424L148.92498106718293,52.95658624404471L161.59520840209595,59.23873072516119Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">90%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>              
                  </div>
                    <div class="col-sm-4" style="border:1px solid #000;padding:0;height:190px;width:190px;">
                          <h4 style="font-size:14px;color:black;font-weight:bold;padding-top:0">Water District Usage</h4>
                          <canvas id="cookieChartPrediction" height="0" width="0" style="display: block; box-sizing: border-box; height: 0px; width: 0px;"></canvas>
                  </div>
                  <div class="col-sm-4" style="height:190px;width:190px;">
                         <h4 style="font-size:14px;color:black;font-weight:bold">Percent Allocation %</h4>              
                         <br>                                           
                         <div id="predictionGauge1" class="gauge"><svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 200 100" preserveAspectRatio="xMidYMid meet" style="overflow: hidden; position: relative;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><filter id="inner-shadow-predictionGauge1"><feOffset dx="0" dy="3"></feOffset><feGaussianBlur result="offset-blur" stdDeviation="5"></feGaussianBlur><feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse"></feComposite><feFlood flood-color="black" flood-opacity="0.2" result="color"></feFlood><feComposite operator="in" in="color" in2="inverse" result="shadow"></feComposite><feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite></filter></defs><path fill="#edebeb" stroke="none" d="M35,80L20,80A80,80,0,0,1,180,80L165,80A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#fd2900" stroke="none" d="M35,80L20,80A80,80,0,0,1,175.8094872641181,54.447668584813776L161.59520840209598,59.23873072516119A65,65,0,0,0,35,80Z" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="#8e8e93" stroke="#ffffff" d="M155.3130639209795,71.90895806007424L148.92498106718293,52.95658624404471L161.59520840209595,59.23873072516119Z" stroke-width="3" stroke-linecap="round" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); stroke-linecap: round;"></path><text x="100" y="78.43137254901961" text-anchor="middle" font-family="Arial" font-size="16px" stroke="none" fill="#010101" font-weight="bold" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 16px; font-weight: bold; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">90%</tspan></text><text x="100" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><text x="27.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">0</tspan></text><text x="172.5" y="91.43137254901961" text-anchor="middle" font-family="Arial" font-size="10px" stroke="none" fill="#b3b3b3" font-weight="normal" fill-opacity="1" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 10px; font-weight: normal; fill-opacity: 1;"><tspan dy="0" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">100</tspan></text></svg></div>              
                  </div>
                   
                </div>
             </div>
  <div style="padding:16px">
           <div class="row" style="margin-top:10px;text-align:center">
                  <form class="row g-3">
  <div class="col-md-4">
    <label for="LACII_I" class="form-label">LACII I<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="LACII_I" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
  <div class="col-md-4">
    <label for="LACII_ISLA" class="form-label">LACII I SLA<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="LACII_ISLA" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
                                        
  <div class="col-md-4">
    <label for="ETF" class="form-label">ETF<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="ETF" value="0.8" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
    <div class="col-md-4">
    <label for="ETO" class="form-label">ETO<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="ETO" value="0.09533" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
  <div class="col-md-4">
    <label for="PEFF" class="form-label">PEFF<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="PEFF" value="0" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
  <div class="col-md-4">
    <label for="SLA" class="form-label">SLA<span aria-hidden="true" class="required" style="color: red;"> *</span></label>
    <input type="text" class="form-control is-valid" id="SLA" value="0" pattern="[0-9]+([\.,][0-9]+)?" required="">
  </div>
  <div class="col-md-4">
    <label for="VOLUME" class="form-label">EXEMPT WATER USE VOLUME</label>
    <input type="text" class="form-control is-valid" id="VOLUME" value="0" pattern="[0-9]+([\.,][0-9]+)?">
  </div>
  <div class="col-md-4">
    <label for="inputUsageTotal" class="form-label">Usage</label>
    <input type="text" class="form-control is-valid" id="inputUsageTotal" value="0" disabled="">
  </div>
  <div class="col-md-4">
    <br>
    <button class="btn btn-primary" type="submit" onclick="calculateValue()">Calculate</button>
  </div>
</form>
        </div>                            
      </div>
    </div>
    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
  </div>
 <!-- <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#669932;width:100%;position:absolute;bottom:0px">
               <button type="button" class="btn btn-primary" data-dismiss="modal">Okay</button>
               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
  </div>  -->                
</div>


<!-- Import Shapefiles -->
		<div class="modal fade" tabindex="-1" id="importShapefileModal" role="dialog" data-backdrop="false">
		<div class="modal-dialog ui-draggable" role="document">
		    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
		       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
			        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
			        <h4 class="modal-title" id="importShapefile" style="font-size:14px;font-weight:bold;color:black;">Import Shapefile</h4>
			      </div>
			   <div class="modal-body" style="min-height:120px;margin-bottom:60px;min-width:25%;overflow: auto;max-height: 120px;">
		       	<form id="uploadFile" method="post">
				  <label for="myfile">Select a file:</label>
				  <input type="file" id="myfile" name="myfile">
				</form>
		       <br>
		      </div>
		      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
		        <button type="button" class="btn btn-primary" onclick="javascript:uploadShapefile()">Ok</button>
		      </div>
		    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
		  </div>
		</div>

<!-- Create New Markup Layer-->
 <div class="modal fade" id="CreateNewMarkupLayer" aria-labelledby="CreateNewMarkupLayerLabel" data-backdrop="false" style="z-index:1000;position:relative;left:30%">        
      <div class="modal-dialog ui-draggable" role="document" style="width:400px;">
        <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
          <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
            <button class="close" data-dismiss="modal" aria-label="Close" onclick="clearShapes()" ontouchstart=""><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="CreateNewMarkupLayerLabel" style="font-size:14px;font-weight:bold;color:black;">Create New Markup</h4>
          </div>
         <div class="modal-body">
           	<div class="form-row">
              <div class="form-group col-sm-12">
                 <label for="markupName"><span class="text-danger">*</span>Name</label>
           		 <input name="markupName" type="text" maxlength="100" id="markupName" placeholder="">
                 <div class="validation"></div>
              </div>
            </div>
		 </div>
          <div class="modal-footer text-center">
            <button type="button" class="btn btn-primary" onclick="createMarkup()">Create</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
      </div>
    </div> 

 <!-- markup popover content -->
<div id="popover-content-markup" style="display: none">
	  <ul class="list-group custom-popover">
	  		<label style="padding-left:10px" id="selectedMarkupLayer">DEMO77</label>
	  </ul>
	  <ul class="list-group custom-popover">
			<li class="list-group-item" style="cursor: pointer;" onclick="creatNewMarkup()" id="createNewMarkup">Create New Markup</li>
	  </ul>
	  <ul class="list-group custom-popover">
			<li class="list-group-item" style="cursor: pointer;" onclick="openChangeSelectedMarkup()" id="changeMarkup">Change Target Markup</li>
	  </ul>
	  <hr class="hrclass">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="drawPolygon(this)" id="Draw_Polygon_Markup">Draw Polygon</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="drawPolyline(this)" id="Draw_Polyline_Markup">Draw Polyline</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="DrawCircle(this)" id="Draw_Circle_Markup">Draw Circle</li>
      </ul>
       <hr class="hrclass">
       <hr class="hrclass">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="drawPoint(this)" id="place_icon">Place Icon</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="drawLabel(this)" id="place_label">Place Label</li>
      </ul>
      <ul class="list-group custom-popover">
			 <li class="list-group-item" style="cursor: pointer;" onclick="clearAllMarkups()" id="clearDrawings">Clear Drawings</li>
	  </ul>
</div>

 <!-- Set Current Markup Layer -->
 <div class="fade modal" id="setCurrentMarkupLayer" aria-labelledby="setCurrentMarkupLayerLabel" data-backdrop="false" style="z-index: 1000; position: relative; left: 30%; display: none;">        
      <div class="modal-dialog ui-draggable" role="document" style="width:400px;">
        <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
          <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
            <button class="close" data-dismiss="modal" aria-label="Close" onclick="closeChangeSelectedMarkup()" ontouchstart=""><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="setCurrentMarkupLayerLabel" style="font-size:14px;font-weight:bold;color:black;">Set Current Markup</h4>
          </div>
         <div class="modal-body">
         	<select class="browser-default custom-select" name="selectedMarkup" id="selectedMarkup">								 
				
			<option value="demo77">demo77</option><option value="Markup1">Markup1</option><option value="Markup3">Markup3</option><option value="test4">test4</option></select>
		 </div>
          <div class="modal-footer text-center">
            <button type="button" class="btn btn-primary" onclick="changeSelectedMarkup()">Set</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
      </div>
    </div> 


    <!-- Advanced Measuring Tool -->
    <div class="modal fade" id="advancedMeasureModal" aria-labelledby="advacedMeasureLabel1" data-backdrop="false" style="z-index:1000;">        
    <!--<div class="modal fade" id="advancedMeasureModal" aria-labelledby="advacedMeasureLabel" style="position: fixed;top:15%;left:50%;outline: none;overflow:hidden;">-->
      <div class="modal-dialog ui-draggable" role="document" style="width:400px;">
        <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
          <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
            <button class="close" data-dismiss="modal" aria-label="Close" onclick="clearShapes()" ontouchstart=""><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="advacedMeasureLabel" style="font-size:14px;font-weight:bold;color:black;">Total Area</h4>
          </div>
          <div class="modal-body">
            <p>Total Area: <span id="areaSum"> sqft</span></p>
            <br><br>
          </div>
          <div class="modal-footer text-center">
            <button type="button" class="btn btn-primary" onclick="drawMultiPolygon()">Draw Shape</button>
            <button type="button" class="btn btn-secondary" onclick="clearShapes()">Clear</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearShapes()">Cancel</button>
          </div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
      </div>
    </div>  

<!-- quick measure popover content -->
<div id="popover-content-quick-measure" style="display: none">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="drawPolygon(this)" id="Draw_Polygon">Draw Polygon</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="drawPolyline(this)" id="Draw_Polyline">Draw Polyline</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="DrawCircle(this)" id="Draw_Circle">Draw Circle</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="clearShapes()" id="clear_measure">Clear</li>
      </ul>
</div>

<!-- quick measure popover content -->
<div id="popover-export-image" style="display: none">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="takeShot(this)" id="print_image">Export Image</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="printMaps(this)" id="export_pdf_portrait">Export PDF(Portrait)</li>
        <li class="list-group-item" style="cursor: pointer;" onclick="printMaps(this)" id="export_pdf_landscape">Export PDF(Landscape)</li>
      </ul>
</div>



<div id="markup-tools" style="top: 7px; text-align: center; width: 100%; display: none;" class="mapFloat">
    <div id="geoStyler" class="mapFloatContent horizontalLayout row" style="display: inline-block;">
        	 <table>
            <tbody>
                <tr id="geoStyler_symbolRow" style="text-align: center; display: block;">
                    <td>Image&nbsp;</td>
                    <td data-toggle="markuptoolspopover" data-placement="bottom" data-original-title="" title="">
                       <div id="selectedSVG"><img height="30" width="30" src="images/cross.png"></div>
                    </td>
                </tr>
                <tr id="geoStyler_fillColorRow" style="">
                    <td>Fill Color&nbsp;</td>
                    <td>
                        <div class="colorPreviewBackground" style="" onclick="openColorPickerModal()">
                            <div id="geoStyler_fillColorSwatch" title="Change Color" style="height: 2.2em; border: 1px solid black; cursor: pointer; background-color: rgb(187, 255, 0); width: 2.2em;"></div>
                        </div>
                    </td>
                </tr>
                <tr id="geoStyler_strokeColorRow" style="display: none;">
                    <td>Line Color&nbsp;</td>
                    <td>
                        <div class="colorPreviewBackground">
                            <div id="geoStyler_strokeColorSwatch" title="Change Color" style="width: 2.2em; height: 2.2em; border: 1px solid black; background-color: rgb(0, 0, 0); cursor: pointer;"></div>
                        </div>
                    </td>
                </tr>
                 <tr id="geoStyler_symbolSizeRow" style="display: block;">
                    <td>Size&nbsp;</td>
                    <td>
                        <select style="display:block" class="positionele" aria-labelledby="geoStyler_symbolSizeSelect-button" id="geoStyler_symbolSizeSelect-menu" aria-disabled="false">
                            <option value="8">8</option>
                            <option value="16">16</option>
                            <option value="24">24</option>
                            <option value="32">32</option>
                            <option value="40">40</option>
                            <option value="48">48</option>
                            <option value="56">56</option>
                            <option value="64">64</option>
                            <option value="72">72</option>
                            <option value="80">80</option>
                            <option value="88">88</option>
                            <option value="96">96</option>
                        </select>
                        <a class="ui-selectmenu ui-widget ui-state-default ui-corner-all ui-selectmenu-popup" id="geoStyler_symbolSizeSelect-button" role="button" tabindex="0" aria-haspopup="true" aria-owns="geoStyler_symbolSizeSelect-menu" aria-disabled="false" style="width: 50px; cursor: pointer;">
                            <span class="ui-selectmenu-status">16</span><span class="ui-selectmenu-icon ui-icon ui-icon-triangle-2-n-s"></span>
                        </a>
                    </td>
                </tr>
                <tr id="geoStyler_acceptRow" style="" onclick="submitMarkupStyling()">
                    <td>&nbsp;&nbsp;OK&nbsp;</td>
                    <td>
                        <img id="geoStyler_accept" src="https://apps.spatialstream.com/landvision/production/CurrentBuild/Images/200px-checkmark-circle.png" style="cursor: pointer; width: 30px; height: 30px;" title="Accept &amp; Finish Editing">
                    </td>
                </tr>
                <tr id="geoStyler_deleteRow" onclick="cancleMarkupStyling()">
                    <td>Delete&nbsp;</td>
                    <td><img width="30px" id="geoStyler_delete" src="https://apps.spatialstream.com/landvision/production/CurrentBuild/Images/Delete.png" style="cursor: pointer;" title="Cancel/Delete Drawing"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


<!-- Color Picker Modal -->
		<div class="modal fade" tabindex="-1" id="colorPickerModal" role="dialog" data-backdrop="false" style="z-index: 9999; display: none;">
		<div class="modal-dialog ui-draggable" role="document">
		    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
		       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
			        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
			        <h4 class="modal-title" id="fillcolor" style="font-size:14px;font-weight:bold;color:black;">Fill Color</h4>
			      </div>
			   <div class="modal-body" style="min-height:120px;margin-bottom:60px;overflow: auto;">
			   		<label>Click Me To Select Color</label><br>
		       		<input type="color" value="#00ffff" id="color">
		       		<br>
		       		<br>
		       		<label>Slide to select Opacity</label><br>
					<input type="range" min="0" max="1" value="1" step="0.01" class="slider-color" id="slider-color" style="background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgb(187, 255, 0));">
					<br>
		       		<br>
		       		<label>Selected Color With Opacity</label><br>
					<div id="test" style="width: 100px; height: 100px; background-color: rgba(187, 255, 0, 0.97);"></div>
		       		<label id="selectedColor" name="selectedColor" style="padding:10px;border:1px solid #000;">#bbff00</label>
		      </div>
		      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
		        <button type="button" class="btn btn-primary" onclick="setFillColor()">Ok</button>
		      </div>
		    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
		  </div>
		</div>

<!-- markup images content -->
<div id="popover-content-markup-tool" style="display: none">
      <ul class="list-group custom-popover">
        <li class="list-group-item" style="cursor: pointer;" onclick="selectedMarkupSVGTriangle()" id="triangle_img"><img src="images/triangle.png"><label style="color:#000">Triangle</label></li>
        <li class="list-group-item" style="cursor: pointer;" onclick="selectedMarkupSVGCircle()" id="circle_img">
        	<img src="images/circle.png">
			<label style="color:#000">Circle</label>
        </li>
        <li class="list-group-item" style="cursor: pointer;" onclick="selectedMarkupSVGCross()" id="cross_img"><img src="images/cross.png"><label style="color:#000">Cross</label></li>
        <li class="list-group-item" style="cursor: pointer;" onclick="selectedMarkupSVGStar()" id="star_img"><img src="images/star.png"><label style="color:#000">Star</label></li>
        <li class="list-group-item" style="cursor: pointer;" onclick="selectedMarkupSVGSquare()" id="square_img"><img src="images/square.png"><label style="color:#000">Square</label></li>
      </ul>
</div>

<!-- Get Label Text Modal -->
		<div class="modal fade" tabindex="-1" id="labelTextModal" role="dialog" data-backdrop="false" style="left:30%;top:20%">
		<div class="modal-dialog ui-draggable" role="document">
		    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
		       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
			        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
			        <h4 class="modal-title" id="labelText" style="font-size:14px;font-weight:bold;color:black;">Enter Label Text</h4>
			      </div>
			   <div class="modal-body" style="min-height:120px;margin-bottom:60px;overflow: auto;">
			   		<textarea id="mapLabelPin" name="mapLabelPin" rows="4" cols="45" maxlength="20"></textarea>
		      </div>
		      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
		        <button type="button" class="btn btn-primary" onclick="getLabelText()">Ok</button>
		      </div>
		    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
		  </div>
		</div> 

<!-- Edit Label and Notes Markup Modal -->
		<div class="modal fade" tabindex="-1" id="markupEditDataModal" role="dialog" data-backdrop="false">
		<div class="modal-dialog ui-draggable" role="document">
		    <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
		       <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
			        <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
			        <h4 class="modal-title" id="labelText" style="font-size:14px;font-weight:bold;color:black;">Edit Attributes</h4>
			    </div>
			   <div class="modal-body" style="min-height:120px;margin-bottom:60px;overflow: auto;">
			   		<label style="display:none" id="markupHashKey"></label>
			   		<label style="display:none" id="markupGeometry"></label>
			   		<div>
			   			<label>Label</label>
			   			<textarea id="editedLabel" name="editedLabel" rows="4" cols="45" maxlength="20"></textarea>
			   		</div>
			   		<div>
			   			<label>Notes</label>
			   			<textarea id="editedNotes" name="editedNotes" rows="4" cols="45" maxlength="20"></textarea>
			   		</div>
		      </div>
		      <div class="modal-footer" style="border-top:3px solid #000;padding:5px;background:#31708f4a;width:100%;position:absolute;bottom:0px">
		        <button type="button" class="btn btn-primary" onclick="getEditedMarkupData()">Ok</button>
		      </div>
		    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
		  </div>
		</div> 


<div id="popover-content-markuplayer" style="display: none">
	
      <ul class="list-group custom-popover" id="markupedit" style="font-size:13px;min-width:150px;margin-left:10px;max-height:500px;max-width:200px;">
        <li class="list-group-item" style="cursor: pointer;border: none;padding: 0px;" onclick="setSelectedMarkup()" id="selectMarkup">Select Markup</li>
      	<li class="list-group-item" style="cursor: pointer;border: none;padding: 0px;" onclick="deleteSelectedMarkup()" id="deleteMarkup">Delete Markup</li>
        <li class="list-group-item" style="cursor: pointer;border: none;padding: 0px;" onclick="exportMarkupPoints('point')" id="exportmarkuppoints">Export Points</li>
        <li class="list-group-item" style="cursor: pointer;border: none;padding: 0px;" onclick="exportMarkupPoints('polygon')" id="exportmarkuppoly">Export Polygons</li>
        <li class="list-group-item" style="cursor: pointer;border: none;padding: 0px;" onclick="exportMarkupPoints('polylines')" id="exportmarkuplines">Export Polylines</li>
      </ul>
      <label style="display:none;" id="exportedMarkup">Markup3_layer</label>
</div>


<!-- Save Searched Data-->
 <div class="modal fade" id="saveSearch" aria-labelledby="saveSearchLabel" data-backdrop="false" style="z-index:1000;">        
      <div class="modal-dialog ui-draggable" role="document" style="width:400px;">
        <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
          <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
            <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="saveSearchLabel" style="font-size:14px;font-weight:bold;color:black;">Save Search Data</h4>
          </div>
         <div class="modal-body">
           	<div class="form-row">
              <div class="form-group col-sm-12">
                 <label for="savedSearchName"><span class="text-danger">*</span>Name</label>
           		 <input name="savedSearchName" type="text" maxlength="100" id="savedSearchName" placeholder="">
                 <div class="validation"></div>
              </div>
            </div>
		 </div>
          <div class="modal-footer text-center">
            <button type="button" class="btn btn-primary" onclick="saveSearchData()">Save</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
      </div>
    </div> 



    <!-- Browse Saved Lists Data-->
 <div class="modal fade" id="savedLists" aria-labelledby="savedListsLabel" data-backdrop="false" style="z-index:1000;">        
      <div class="modal-dialog ui-draggable" role="document" style="width:400px;">
        <div class="modal-content ui-resizable" style="border:3px solid #000;padding:0px;background:white">
          <div class="modal-header ui-draggable-handle" style="border-bottom:3px solid #000;padding:5px;background:#31708f4a">
            <button class="close" data-dismiss="modal" aria-label="Close" ontouchstart=""><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="saveSearchLabel" style="font-size:14px;font-weight:bold;color:black;">Browse Saved Lists</h4>
          </div>
         <div class="modal-body" style="min-height:50px;margin-bottom:60px;min-width:25%;overflow: auto;max-height: 120px;">
         		<label>Available Lists</label>
		        <select id="browseList">
		       		
				    		<option value="Test">Test</option>       	
					
				    		<option value="Test1">Test1</option>       	
					
				    		<option value="Largest_Premise">Largest_Premise</option>       	
					
				    		<option value="All_premises">All_premises</option>       	
					
				    		<option value="Mnte125">Mnte125</option>       	
					
				    		<option value="Mnte162_new">Mnte162_new</option>       	
					
				    		<option value="MNte119">MNte119</option>       	
					
		        </select>
		        <br>
		      </div>
          <div class="modal-footer text-center">
            <button type="button" class="btn btn-primary" onclick="displaySelectedList()">OK</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
      </div>
    </div> 

<!--delete confirmaton -->
<div id="id01" class="modal" data-backdrop="false" style="z-index:99999">
  <span onclick="document.getElementById('id01').style.display='none'" class="close-btn" title="Close Modal">×</span>
  <div class="modal-content ui-resizable">
    <div class="container-delete">
      <h1>Delete Markup</h1>
      <p>Are you sure you want to delete the markup?</p>
    
      <div class="clearfix">
        <button type="button" id="cancelbtn" class="cancelbtn">Cancel</button>
        <button type="button" id="deletebtn" class="deletebtn">Delete</button>
      </div>
    </div>
  <div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div>
</div>
 <script>
            function getCampaignBetweenMonthsRange1(data) {
                var todate = $("#campaignToMonthRange1").find(":selected").text();
                var fromdate = $('#campaignFromMonthRange1').find(":selected").text();
                console.log("================");
                console.log(SelectedCampaignData);
                console.log("================");
                var dataarr = [];
                dataarr.push(["Month","Allocation","Consumption"]);
                var monthData = SelectedCampaignData.CampaignData[selectedHashKey];
                console.log(monthData);
                var startindex=0, endindex=0;
                var k = 0;
                var consumptionTotal = 0.0;
                var allocationTotal = 0.0;
                var percentageTotal = 0.0;
                var consumptionAvg = 0.0;
                var allocationAvg = 0.0;
                var percentageAvg = 0.0;
		        for(let i in monthData) { 
		            if(i===todate)endindex = k;
		            if(i===fromdate)startindex =k;
		            k++;
		        }; 
		        console.log(startindex+" : "+endindex);
		        for(let i = startindex; i<=endindex; i++){
		        		console.log(months[i]+": "+monthData[Object.keys(monthData)[i]][0]+" : "+monthData[Object.keys(monthData)[i]][1]);
                        consumptionTotal = +(parseFloat(consumptionTotal) + +parseFloat(monthData[Object.keys(monthData)[i]][0]).toFixed(2));
                        console.log(parseFloat(consumptionTotal));
                        allocationTotal = +(parseFloat(allocationTotal) + +parseFloat(monthData[Object.keys(monthData)[i]][1]).toFixed(2));
                        console.log(parseFloat(allocationTotal));
		        	    dataarr.push([Object.keys(monthData)[i],parseFloat(monthData[Object.keys(monthData)[i]][1]),parseFloat(monthData[Object.keys(monthData)[i]][0])]);
		        }
		         consumptionAvg = consumptionTotal/ months.length;
                 allocationAvg = allocationTotal / months.length;
                 percentageAvg = consumptionAvg / allocationAvg * 100; 
                 percentageTotal = 	consumptionTotal / allocationTotal * 100;
                 console.log(consumptionTotal+" : "+allocationTotal+" : "+percentageTotal);
                 console.log(consumptionAvg+" : "+allocationAvg+" : "+allocationAvg);
                 if(!document.getElementById("toggleCampaign").checked){
                   		document.getElementById("campaignusageRange2").innerHTML = "Total Usage";
	                   	document.getElementById("campaignallocationRange2").innerHTML = "Total Allocation";
	                   	document.getElementById("campaignallocationPerRange2").innerHTML = "Total %";
	                   	document.getElementById("campaignUsageValRange1").innerHTML = formatNumber(consumptionTotal.toFixed(2));
	                    document.getElementById("campaignAllocationValRange1").innerHTML = formatNumber(allocationTotal.toFixed(2));
	                   	document.getElementById("campaignPerValRange1").innerHTML = percentageTotal.toFixed(2);
                  }else{
                   		document.getElementById("campaignUsageRange1").innerHTML = "Average Usage";
	                   	document.getElementById("campaignAllocationRange1").innerHTML = "Average Allocation";
	                   	document.getElementById("campaignPerRange1").innerHTML = "Average %";
                   		document.getElementById("campaignUsageValRange1").innerHTML = formatNumber(consumptionAvg.toFixed(2));
	                   	document.getElementById("campaignAllocationValRange1").innerHTML = formatNumber(allocationAvg.toFixed(2));
	                   	document.getElementById("campaignPerValRange1").innerHTML = percentageAvg.toFixed(2);
                  }
		        if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
						console.log("google chart is loaded");
						// google.charts.setOnLoadCallback(drawChart);
						google.charts.setOnLoadCallback(drawCampaignChart(dataarr));
				}

				//var effectivenessTrends = ((parseFloat(String(dataarr[dataarr.length-1]).split(",")[1]) - parseFloat(String(dataarr[1]).split(",")[1])) / parseFloat(String(dataarr[1]).split(",")[1])) * 100  ;
				//effectivenessTrends = effectivenessTrends.toFixed(2);
				//console.log(effectivenessTrends); 
				//document.getElementById("effectiveConservationScore").innerHTML = effectivenessTrends;
                //var values = [0.90, 0.80];
                //var labels = [fromdate, todate]
                //document.getElementById("effectiveConservationScore").innerHTML = "-4.8%";
                //var canvas = document.getElementById("campaignChart");
                //var ctx = canvas.getContext('2d');
                //var chartType = 'bar';
                //var myBarChart;
                //Chart.defaults.global.defaultFontColor = 'grey';
                //Chart.defaults.global.defaultFontSize = 12;
                //var data = {
                    //labels: labels,
                    //datasets: [{
                        //label: "Conservation Data",
                        //fill: true,
                        //lineTension: 0.1,
                        //backgroundColor: "rgba(0,255,0,0.4)",
                        //borderColor: "green", // The main line color
                        //borderCapStyle: 'square',
                        //pointBorderColor: "white",
                        //pointBackgroundColor: "green",
                        //pointBorderWidth: 1,
                        //pointHoverRadius: 8,
                        //pointHoverBackgroundColor: "yellow",
                        //pointHoverBorderColor: "green",
                        //pointHoverBorderWidth: 2,
                        //pointRadius: 4,
                        //pointHitRadius: 10,
                        //data: values,
                        //spanGaps: true,
                    //}]
                //};
                //var options = {
                    //legend: {
                        //display: true
                    //},
                    //layout: {
                       //padding: {
                            //bottom: -20
                        //}
                    //},
                    //scales: {
                        //yAxes: [{
                            //ticks: {
                               // beginAtZero: true
                           // }
                       // }]
                    //},
                    //title: {
                        //fontSize: 18,
                        //display: false,
                        //text: '',
                        //position: 'bottom'
                    //}
                //};
                //init();
               // function init() {
                    // Chart declaration:
                    //myBarChart = new Chart(ctx, {
                        //type: chartType,
                        //data: data,
                        //options: options
                    //});
                //}
            }


              function drawCampaignChart(dataarr) {
						// Define the chart to be drawn.
						console.log(dataarr);
						var data = new google.visualization.arrayToDataTable(dataarr);
						//var options = {
					//		legend: {position:'bottom'},
						//	height:200,
						//	chartArea:{width:"100%",height:"70%",top:0,bottom:30},
						//	vAxis: {
						//		gridlines: {count:4},
						//	},
						//	hAxis : { 
						//		gridlines: {count:4},
							//	margin:0,
						////		textStyle : {
						 //           fontSize:7, // or the number you want
						 //           bold: true
						//        },
						//	},
						//	tooltip:{
						//		textStyle:{
						//			color:'black'
						//		},
						//	},
						//	bar:{groupWidth:"85%",gap:"10%"},
						//	colors: ['rgb(137,168,99)','rgb(47,105,153)']						
						//}; 

				console.log(data);
				var options = {
				  height:180,
				  width:500,
				  legend:{position:'top'},
				  hAxis: {titleTextStyle: {color: '#333'}},
				  vAxis: {minValue: 0},
				  chartArea:{
				  	left:'15%',
			        width:'80%',
			        height:'70%',
			        top:40,
				  },
				  areaOpacity:0.6,
				  colors: ['rgb(137,168,99)','rgb(47,105,153)']	
				};

						// Instantiate and draw the chart.
						var chart = new google.visualization.AreaChart(document.getElementById('campaigndateRange1'));
						chart.draw(data, options);
					}

					 function getCampaignBetweenMonthsRange2(data) {
			                var todate = $("#campaignToMonthRange2").find(":selected").text();
			                var fromdate = $('#campaignFromMonthRange2').find(":selected").text();
			                console.log("================");
			                console.log(SelectedCampaignData);
			                console.log("================");
			                var dataarr = [];
			                dataarr.push(["Month","Allocation","Consumption"]);
			                var monthData = SelectedCampaignData.CampaignData[selectedHashKey];
			                console.log(monthData);
			                var startindex=0, endindex=0;
			                var k = 0;
			                var consumptionTotal = 0.0;
			                var allocationTotal = 0.0;
			                var percentageTotal = 0.0;
			                var consumptionAvg = 0.0;
			                var allocationAvg = 0.0;
			                var percentageAvg = 0.0;
					        for(let i in monthData) { 
					            if(i===todate)endindex = k;
					            if(i===fromdate)startindex =k;
					            k++;
					        }; 
					        console.log(startindex+" : "+endindex);
					        for(let i = startindex; i<=endindex; i++){
					        		console.log(months[i]+": "+monthData[Object.keys(monthData)[i]][0]+" : "+monthData[Object.keys(monthData)[i]][1]);
			                        consumptionTotal = +(parseFloat(consumptionTotal) + +parseFloat(monthData[Object.keys(monthData)[i]][0]).toFixed(2));
			                        console.log(parseFloat(consumptionTotal));
			                        allocationTotal = +(parseFloat(allocationTotal) + +parseFloat(monthData[Object.keys(monthData)[i]][1]).toFixed(2));
			                        console.log(parseFloat(allocationTotal));
					        	    dataarr.push([Object.keys(monthData)[i],parseFloat(monthData[Object.keys(monthData)[i]][1]),parseFloat(monthData[Object.keys(monthData)[i]][0])]);
					        }
					         consumptionAvg = consumptionTotal/ months.length;
			                 allocationAvg = allocationTotal / months.length;
			                 percentageAvg = consumptionAvg / allocationAvg * 100; 
			                 percentageTotal = 	consumptionTotal / allocationTotal * 100;
			                 console.log(consumptionTotal+" : "+allocationTotal+" : "+percentageTotal);
			                 console.log(consumptionAvg+" : "+allocationAvg+" : "+allocationAvg);
			                 if(!document.getElementById("toggleCampaign").checked){
			                   		document.getElementById("campaignUsageRange1").innerHTML = "Total Usage";
				                   	document.getElementById("campaignAllocationRange1").innerHTML = "Total Allocation";
				                   	document.getElementById("campaignPerRange1").innerHTML = "Total %";
				                   	document.getElementById("campaignusageValRange2").innerHTML = formatNumber(consumptionTotal.toFixed(2));
				                    document.getElementById("campaignallocationValRange2").innerHTML = formatNumber(allocationTotal.toFixed(2));
				                   	document.getElementById("campaignallocationPerValRange2").innerHTML = percentageTotal.toFixed(2);
			                  }else{
			                   		document.getElementById("campaignusageRange2").innerHTML = "Average Usage";
				                   	document.getElementById("campaignallocationRange2").innerHTML = "Average Allocation";
				                   	document.getElementById("campaignallocationPerRange2").innerHTML = "Average %";
			                   		document.getElementById("campaignusageValRange2").innerHTML = formatNumber(consumptionAvg.toFixed(2));
				                   	document.getElementById("campaignallocationValRange2").innerHTML = formatNumber(allocationAvg.toFixed(2));
				                   	document.getElementById("campaignallocationPerValRange2").innerHTML = percentageAvg.toFixed(2);
			                  }
					        if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
									console.log("google chart is loaded");
									// google.charts.setOnLoadCallback(drawChart);
									google.charts.setOnLoadCallback(drawCampaignChart2(dataarr));
							}
			
           			}
		    		function drawCampaignChart2(dataarr) {
						// Define the chart to be drawn.
						console.log(dataarr);
						var data = new google.visualization.arrayToDataTable(dataarr);
						var options = {
				  height:180,
				  width:500,
				  legend:{position:'top'},
				  hAxis: {titleTextStyle: {color: '#333'}},
				  vAxis: {minValue: 0},
				  chartArea:{
				  	left:'15%',
			        width:'80%',
			        height:'70%',
			        top:40,
				  },
				  areaOpacity:0.6,
				  colors: ['rgb(137,168,99)','rgb(47,105,153)']	
				};

						// Instantiate and draw the chart.
						var chart = new google.visualization.AreaChart(document.getElementById('campaigndateRange2'));
						chart.draw(data, options);
					}

            function openSearchModal() {
                $('#searchQueryModal').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header, .modal-footer"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                // $("#searchQueryModal").removeClass("modal");
            }
            $('#chartView').click(function () {
                openModal();

            });
            /*  $('body').on('click', function (e) {
              $('[data-toggle=dashboardpopover]').each(function () {
                  // hide any open popovers when the anywhere else in the body is clicked
                  if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                      $(this).popover('hide');
                  }
              });
                
          });*/

            function EditCampaignData() {
                var hashKey = $('#camp_hash_edit').val();
                var title = $('#camp_title_edit').val();
                var desc = $('#camp_desc_edit').val();
                var date = $('#camp_date_edit').val();
                var notes = $('#camp_notes_edit').val();


                var postData = '{"hash": "' + hashKey + '", "title": "' + title + '", "description": "' + desc + '", "date": "' + date + '", "notes": "' + notes +'", "user": "Pallavi"}';
                // console.log(postData);
                $.ajax({
                    url: '/updateCampaignData',
                    type: 'POST',
                    data: postData,
                    success: function (msg) {

                        $('#myModal1').modal('hide');
                        $('#myModal1').addClass('modal');
                        loadDashboardData();
                        $('#camp_title_edit').val("");
                        $('#camp_desc_edit').val("");
                        $('#camp_date_edit').val("");
                        $('#camp_notes_edit').val("");
                        $('#myModal1editCamp').modal('hide');
                        // console.log(msg);
                        alert("Thank You! Group Edited Successfully"); 
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }

            function createCampaignData() {
                var title = $('#camp_title').val();
                var desc = $('#camp_desc').val();
                var date = $('#camp_date').val();
                var notes = $('#camp_notes').val();
                if (title.trim().length < 2) {
                    alert("Title cannot be blank");
                    return;
                }

                //console.log(title);
                var respremiseData = [];
                for (var key in searchRes) {
                    respremiseData.push(searchRes[key].premise.premID);
                    //console.log(searchRes[key].premise.premID)

                }
                var postData = '{ "title": "' + title + '", "description": "' + desc + '", "date": "' + date + '", "notes": "' + notes + '", "user": "Pallavi","premIds": "' + respremiseData + '"}';
                //console.log(postData);
                $.ajax({
                    url: '/createCampaignData',
                    type: 'POST',
                    data: postData,
                    success: function (msg) {

                        $('#myModal1').modal('hide');
                        $('#myModal1').addClass('modal');
                        $('#camp_title_edit').val("");
                        $('#camp_desc_edit').val("");
                        $('#camp_date_edit').val("");
                        $('#camp_notes_edit').val("");
                        
                        loadDashboardData();
                        alert("Thank You! Group Created Successfully"); 
                        // console.log(msg);
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }
            function openDisplayDetailsModel() {
                //console.log("clicked");
                $('#displayDetailsModal').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#myModal1").css({ 'z-index': 9999 });
                $("#displayDetailsModal").removeClass("modal");

            }
            function opneBookMark(jsondata) {
                //jsondata=JSON.parse(jsondata);
                //   console.log(jsondata.zoomLevel);
                map.setView({
                    center: new Microsoft.Maps.Location(jsondata.centroidLat, jsondata.centroidLon),
                    zoom: parseInt(jsondata.zoomLevel)
                });
                //map.setView(map.getOptions().zoom= parseInt(jsondata.zoomLevel,10) );

                //console.log(typeof parseInt(jsondata.zoomLevel));
                //console.log(map.getZoom());
            }
            var SelectedCampaignData;
            var selectedHashKey = "";
            function openDashboard(hashKey) {
            	closeManageModal();
                console.log(hashKey.hashKey);
                document.getElementById("campaignDashboardLabel").innerHTML = hashKey.title;
               // document.getElementById("campaignDescDisplay").innerHTML = "/" + hashKey.description;
                var postData = '{ "user": "Pallavi", "hashkey": "' + hashKey.hashKey + '"}';
                $.ajax({
                    url: '/getCampaignDashboardData',
                    type: 'POST',
                    data: postData,
                    success: function (msg) {
                        //console.log(JSON.parse(msg));
                        var hash = hashKey.hashKey;
                        var CampaignData = JSON.parse(msg);
                        SelectedCampaignData = CampaignData;
                        selectedHashKey = hashKey.hashKey;
                        var months = Object.keys(CampaignData.CampaignData[hash]);
                        console.log(months);
                        $("#campaignFromMonthRange1").empty();
                        $("#campaignToMonthRange1").empty();
                        $("#campaignFromMonthRange2").empty();
                        $("#campaignToMonthRange2").empty();
                        for(let i=0;i<months.length;i++){
                        	//console.log( months[i]);
	                        var fromoption = $('<option/>');
	                        fromoption.attr({ 'value': months[i] }).text(months[i]);
	                        var tooption = $('<option/>');
	                        tooption.attr({ 'value': months[i] }).text(months[i]);
	                        var fromoption2 = $('<option/>');
	                        fromoption2.attr({ 'value': months[i] }).text(months[i]);
	                        var tooption2 = $('<option/>');
	                        tooption2.attr({ 'value': months[i] }).text(months[i]);
	                        $("#campaignFromMonthRange1").append(fromoption);
                        	$("#campaignToMonthRange1").append(tooption);
                        	$("#campaignFromMonthRange2").append(fromoption2);
                        	$("#campaignToMonthRange2").append(tooption2);
	                    }
	                    getCampaignBetweenMonthsRange1(CampaignData);
	                    getCampaignBetweenMonthsRange2(CampaignData);
	                    //console.log(fromoption);
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
                $('#campaignDashboardModal').modal({
                    backdrop: false,
                    show: true
                });
                $("#campaignDashboardModal").removeClass("modal");
                $("#campaignDashboardModal").css("position","fixed");
                $("#campaignDashboardModal").css("left","30%");
                $("#campaignDashboardModal").css("top","2%");
            }

            //horizontal bar
            var horizontalBarChartData = {
                labels: ["Above 200%", "151% to 200%", "101% to 150%", "51% to 100%", "Below 50%"],
                datasets: [{
                    label: "Percent Allocation",
                    data: [8.09, 10.8, 24.05, 37.65, 20.14],
                    backgroundColor: ["#8c0004", "#ff000f", "#ffa629", "#98cf45", "#006512"],
                }],
            };

            var servicearea = new Chart(serviceAreaUsage, {
                type: 'bar',
                data: horizontalBarChartData,
                options: {
                    indexAxis: 'y',
                    barValueSpacing: 20,
                    barPercentage: 0.5,
                    barThickness: 6,
                    maxBarThickness: 8,
                    scales: {
                        y: {
                            ticks: {
                                min: 0,
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                display: false,
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },

                    }
                }
            });

            function displayOnMap(hashKey) {
                //console.log(hashKey.premIds);
                //for unit tool
                displayOnMapHashKey=hashKey;
                isSearchList=false;
                console.log("0"+hashKey);
                isUpdate=true;
                isSearchClear=false;

                 isUpdate = true;
                searchRes = [];
                arr = [];
                var k = 0;
                layerArr[searchlayer["LayerName"]]['layer'].clear();
                hashKey.premIds[0].split(",").forEach(function (jsondata, index) {
                   
                    $.ajax(
                        {
                            url: "GetPremiseInfo?premiseId=" + jsondata,
                            success: function (result) {
                            	console.log(result);
                                k++;
                                var searcheddata = JSON.parse(result);
                                // console.log(searcheddata);
                                var premise = searcheddata.premise;
                                console.log(searcheddata);
                                searchRes.push(searcheddata);

                                var meterData = searcheddata.meters;
                                //console.log("***-----" + meterData);
                                //console.log(premise.the_geom);
                                var values = [];
                                var Allocationvalues = [];
                                result = searcheddata.consumption;
                                //   console.log("4: "+result);
                                Object.keys(result).map(function (k) {
                                    values.push(result[k]);
                                });
                                result = searcheddata.allocation;
                                //   console.log("4: "+result);
                                Object.keys(result).map(function (k) {
                                    Allocationvalues.push(result[k]);
                                });
                                
                                //arr.push("<tr onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                               // arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                               // arr.push('<td><div>' + k + '</div></td>');
                               // arr.push('<td><div>' + premise.premID + '</div></td>');
                              //  arr.push('<td><div>' + premise.Customer + '</div></td>');
                              //  arr.push('<td><div>' + formatNumber(parseFloat(values[values.length - 1]).toFixed(2)) + '</div></td>');
                              //  arr.push('<td><div>' + formatNumber(parseFloat(Allocationvalues[Allocationvalues.length - 1]).toFixed(2)) + '</div></td>');
                              //  arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2)) + '</div></td>');
                              //  arr.push('<td><div>' + meterData.length + '</div></td>');
                             //   arr.push('</tr>');
                                Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
                                    var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom.replace("LINESTRING", "MULTIPOLYGON"), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(102, 255, 51)", strokeThickness: 2 } });
                                    layerArr[searchlayer["LayerName"]]['layer'].add(polygonD);
                                });
                                //console.log("4: " + premise.premID + " :: " + hashKey.premIds[0].split(",").length);
                                //if (k == hashKey.premIds[0].split(",").length) {
                                   // var table;
                                  //  if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                                     //   table = $('#dtBasicExample').DataTable();
                                     //   table.destroy();
                                   // }
                                  //  $("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", ", " ").replaceAll(">,<", "><"));
                                  //  $("#pAllocationBtn").html("Total Records Found (" + (k) + " Records)");
                                  //  $('#dtBasicExample').DataTable({
                                    //    "paging": false,
                                    //    "info": false,
                                    //    "scrollY": '200px',
                                     //   "scrollCollapse": true,
                                     //   "searching": true,
                                    //    "ordering":true,
                                        //,
                                        // "columns": [null, null, { "width": "20%" }, null, null, null, null, null]
                                    //});
                               // }
                               generateList(JSON.stringify(searchRes));

                            },
                            error: function (e) {
                                console.log(e)
                            }
                        });


                });

                //console.log(k);
                
                //console.log(hashKey.hashKey);
            }
            function campaignDelete(hashKey) {
                $.ajax({
                    type: "GET",
                    url: '/deleteCampaignData?hash=' + hashKey.hashKey + '&user=' + 'Pallavi',
                    success: function (msg) {
                        loadDashboardData();
                        alert("Campaign Deleted Successfully");
                        //console.log(msg) ;
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
                //   console.log(hashKey.hashKey);
                // loadDashboardData();
            }
            function campaignEdit(hashKey) {
                // console.log(hashKey.title);
                // console.log(hashKey.description);
                // console.log(hashKey.actionDate);
                // console.log(hashKey.notes);
                //  console.log(hashKey);
                $('#camp_hash_edit').val(hashKey.hashKey);

                $('#camp_title_edit').val(hashKey.title);
                $('#camp_desc_edit').val(hashKey.description);
                $('#camp_date_edit').val(hashKey.actionDate);
                $('#camp_notes_edit').val(hashKey.notes);

                $('#myModal1editCamp').modal({
                    backdrop: false,
                    show: true
                });
                 $("#myModal1editCamp").removeClass("modal");
                $("#myModal1editCamp").css("position","fixed");
                $("#myModal1editCamp").css("left","30%");
                $("#myModal1editCamp").css("top","10%");
                $("#myModal1editCamp").css("z-index","100000");
            }
            function loadDashboardData() {
                $.ajax({
                    type: "GET",
                    url: '/getCampaignData?user=' + 'Pallavi',
                    success: function (msg) {
                        //console.log(msg);
                        if (msg == "") return;
                        $('#camapaignBody').empty();
                        var el4 = document.getElementById('camapaignBody');

                        JSON.parse(msg).forEach(function (jsondata, index) {
                            var mainDiv = document.createElement("div");
                            mainDiv.setAttribute("class", "row");
                            mainDiv.setAttribute("style", "margin-top:10px");
                            var lblDiv = document.createElement("div");
                            lblDiv.setAttribute("class", "col-sm-4");

                            var lbl1 = document.createElement("label");
                            var lblstr = document.createElement("strong");
                            lblstr.setAttribute("style", "font-size: 11px;");
                            lblstr.innerHTML = jsondata.title;
                            lbl1.appendChild(lblstr);

                            var lbl2 = document.createElement("label");
                            lbl2.setAttribute("style", "font-size: 11px;");
                            lbl2.innerHTML = "/" + jsondata.description;
                            lblDiv.appendChild(lbl1);
                            lblDiv.appendChild(lbl2);
                            mainDiv.appendChild(lblDiv);

                            var dataDiv = document.createElement("div");
                            dataDiv.setAttribute("class", "col-sm-8");

                            var dataDiv1 = document.createElement("div");
                            dataDiv1.setAttribute("class", "row");
                            if (jsondata.actionDate == "") {
                                dataDiv1.innerHTML = "";
                            } else {
                                dataDiv1.innerHTML = jsondata.actionDate;
                            }

                            var dataDiv2 = document.createElement("div");
                            dataDiv2.setAttribute("class", "row");

                            var btn1 = document.createElement("button");
                            btn1.setAttribute("class", "btn btn-primary");
                            btn1.innerHTML = "Delete";
                            btn1.setAttribute("style", "margin-left:10px;font-size: 11px;padding: 0.3em 1em;");
                            btn1.setAttribute("onclick", "campaignDelete(" + JSON.stringify(jsondata) + ")");

                            var btn3 = document.createElement("button");
                            btn3.setAttribute("class", "btn btn-primary");
                            btn3.innerHTML = "Edit";
                            btn3.setAttribute("style", "margin-left:10px;font-size: 11px;padding: 0.3em 1em;");
                            btn3.setAttribute("onclick", "campaignEdit(" + JSON.stringify(jsondata) + ")");

                            var btn4 = document.createElement("button");
                            btn4.setAttribute("class", "btn btn-primary");
                            btn4.innerHTML = "Show On Map";
                            btn4.setAttribute("style", "margin-left:10px;font-size: 11px;padding: 0.3em 1em;");
                            btn4.setAttribute("onclick", "displayOnMap(" + JSON.stringify(jsondata) + ")");

                            var btn5 = document.createElement("button");
                            btn5.setAttribute("style", "margin-left:10px;font-size: 11px;padding: 0.3em 1em;");
                            btn5.setAttribute("class", "btn btn-primary");
                            btn5.innerHTML = "Dashboard";
                            btn5.setAttribute("onclick", "openDashboard(" + JSON.stringify(jsondata) + ")");

                            dataDiv1.appendChild(btn1);
                            dataDiv1.appendChild(btn3);
                            dataDiv1.appendChild(btn4);
                            dataDiv1.appendChild(btn5);
                            dataDiv.appendChild(dataDiv1);
                            mainDiv.appendChild(dataDiv);
                            el4.appendChild(mainDiv);

                        });

                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }

            function loadBookMarkData() {
                $.ajax({
                    type: "GET",
                    url: '/loadBookMarkData?user=' + 'Pallavi',
                    success: function (msg) {
                        //console.log(msg);
                        $('#bookMarkList').empty();
                        $('#bookMarkSelect').find('option').remove().end();
                        var el = document.getElementById('bookMarkList');
                        var node1 = document.createElement("li");
                        node1.setAttribute('class', 'list-group-item');
                        node1.setAttribute('onclick', 'addBookmark()');
                        node1.setAttribute('style', 'cursor: pointer;padding:0px');
                        node1.innerHTML = 'Add Bookmark';
                        el.appendChild(node1);
                        var node2 = document.createElement("li");
                        node2.setAttribute('class', 'list-group-item');
                        node2.setAttribute('onclick', 'removeBookmark()');
                        node2.setAttribute('style', 'cursor: pointer;padding:0px');
                        node2.innerHTML = 'Remove Bookmarks';
                        el.appendChild(node2);
                        console.log(msg.length);
                        if (msg.length>0)
                        JSON.parse(msg).forEach(function (jsondata, index) {


                            var node = document.createElement("li");
                            node.setAttribute('class', 'list-group-item');
                            node.setAttribute('onclick', 'opneBookMark(' + JSON.stringify(jsondata) + ')');
                            node.setAttribute('style', 'cursor: pointer;padding:0px');
                            node.innerHTML = jsondata.name;
                            el.appendChild(node);
                            $('#bookMarkSelect').append('<option value="' + jsondata.hashKey + '">' + jsondata.name + '</option>');
                        });

                    },
                    error: function (e) {
                        console.log(e)
                    }
                });


            }
            var districtJsonData;
            var startmonth;
            var endmonth;
            function loadConsumptionData() {
                $.ajax({
                    type: "GET",
                    url: '/getConsumptionDataNew',
                    success: function (msg) {
                    //console.log(msg);
                    msg=JSON.parse(msg);
                   // console.log(msg.YearWiseDistrictData);
                    //years
                    var years=Object.keys(msg.YearWiseDistrictData);
                    //console.log(years);
                    yearWiseDistrictJsonData = msg.YearWiseDistrictData;
                    //months
                    var cosumptionDistrict=[];
                    var allocDistrict=[];
                    districtJsonData=msg.DistrictWiseData;
                    var months=Object.keys(districtJsonData);
                    var monthsSet = ["Jan 20", "Feb 20", "Mar 20", "Apr 20", "May 20", "Jun 20","Jul 20", "Aug 20", "Sep 20", "Oct 20", "Nov 20", "Dec 20"];
                    months.sort(function(a, b){
                            return monthsSet.indexOf(a)- monthsSet.indexOf(b);
                    });    
                    StartMonth = months[0];
                    //console.log(StartMonth);
                    //standDashmonth  
                     for (i = 0; i < months.length; i++) {
                    cosumptionDistrict.push(parseFloat(districtJsonData[months[i]][0]));
                    allocDistrict.push(parseFloat(districtJsonData[months[i]][1]));
                     var option = $('<option/>');
                    option.attr({ 'value': months[i] }).text(months[i]);
                                                 var fromoption = $('<option/>');
                    fromoption.attr({ 'value': months[i] }).text(months[i]);
                                 var tooption = $('<option/>');
                    tooption.attr({ 'value': months[i] }).text(months[i]);
                                 var option1 = $('<option/>');
                    option1.attr({ 'value': months[i] }).text(months[i]);
                                 var option2 = $('<option/>');
                    option2.attr({ 'value': months[i] }).text(months[i]);
                    $('#standDashmonth').append(option);
                    $('#gmdMonth1').append(option1);   
                    $('#gmdMonth2').append(option2);   
                    $('#fromMonth').append(fromoption); 
                    $('#toMonth').append(tooption);
                     var range2month1 = $('<option/>');
                    range2month1.attr({ 'value': months[i] }).text(months[i]);
                    var range2month2 = $('<option/>');
                    range2month2.attr({ 'value': months[i] }).text(months[i]);
                    $("#gmdMockFromMonthRange2").append(range2month1);
                     $("#gmdMockToMonthRange2").append(range2month2);
                    var range1month1 = $('<option/>');
                    range1month1.attr({ 'value': months[i] }).text(months[i]);
                     var range1month2 = $('<option/>');
                    range1month2.attr({ 'value': months[i] }).text(months[i]);
                     $("#gmdMockFromMonthRange1").append(range1month1);
                     $("#gmdMockToMonthRange1").append(range1month2);
                   //console.log(JSON.parse(msg));
                    if(i==0){
                    var perVal=(parseFloat(districtJsonData[months[i]][0])/ parseFloat(districtJsonData[months[i]][1])*100)
                     g3.refresh(perVal);
                     //g3.update();
                  //             console.log(districtJsonData[months[i]]);
                   // console.log(parseFloat(districtJsonData[months[i]][0]));
                    var xValues = ["Current Allocation", "Current Usage"];
                   var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
                   var barColors = ["blue", "green"];
                   //Chart.defaults.global.defaultFontColor = 'grey';
                  // Chart.defaults.global.defaultFontSize = 10;
                  // Chart.defaults.global.defaultFontWeight = 'bold';
                 //  var pieChartContent = document.getElementById('waterDistrictmyChart');
                  // pieChartContent.innerHTML = '&nbsp;';
                   var waterUsage = {
                          labels: xValues,
                          datasets: [
                                {
                                     backgroundColor: barColors,
                                     data: yValues,
                                      skipNull: true

                               }
                          ]
                   };
                  // console.log(xValues);
                  // console.log(waterDistrictmyChart.data.datasets);
                   waterDistrictmyChart.data.labels = xValues;
                   //waterDistrictmyChart.update();
                   waterDistrictmyChart.data.datasets = waterUsage.datasets;
                   waterDistrictmyChart.update();
                  // console.log(waterDistrictmyChart.data.datasets);
                   
                   }
                        }
                        
                        setSelectedValue("gmdMockFromMonthRange1", months[0]);
                        setSelectedValue("gmdMockToMonthRange1", months[11]);
                        setSelectedValue("gmdMockFromMonthRange2", months[0]);
                        setSelectedValue("gmdMockToMonthRange2", months[11]);
                        startmonth = months[0];
                        endmonth = months[11];
                        getUsagdeDataBetweenMonthsRange1();
                        getUsagdeDataBetweenMonthsRange2();
			           // console.log(months)
			            var barChartData = {
			            labels: months,
			            datasets: [
			                {
                    backgroundColor:"blue",
                    borderColor: "blue",
                    borderWidth: 1,
                    data: allocDistrict,
                    spanGaps: true

                },
                {
            
                    backgroundColor: "green",
                    borderColor: "green",
                    borderWidth: 1,
                    data: cosumptionDistrict,
                    spanGaps: true
            
                }
               
            ]
        };
             new Chart("historicUsage", {
             tooltips: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return ""+formatNumber((tooltipItem.yLabel).toFixed(2))+"";
                            }
                        }
                    },
                type: 'bar',
                data: barChartData,
                options: {
                    responsive: true,
                    layout: {
                        padding: {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }
                    },
                    scales:{
                    	y:{
                    		ticks:{
                    			display:false,
                    		}
                    	},
                    	x:{
                    		grid:{
                    			display: false
                    		},
                    		ticks:{
                    			fontSize:6,
                    		}
                    	}
                    },
                    plugins: {
					            legend: {
		                            display: false,
		                            labels: {
				                    	// This more specific font property overrides the global property
				                    	font: {
				                       	 	size: 5
				                   		}
              						}
		                        },
					}

                }
            
             
            });
            
             
            
            // mock dashboard data
               var yearcosumptionDistrict = [];
               var yearallocDistrict = []; 
               for(k = 0;k<years.length;k++){
                   var yearoption = $('<option/>');
                   yearoption.attr({ 'value': years[k] }).text(years[k]);
                    var yearoptionNew = $('<option/>');
                   yearoptionNew.attr({ 'value': years[k] }).text(years[k]);
                 //  $("#year").append(yearoption); 
                 //  $("#yearNew").append(yearoptionNew);
               }

                	//google chart data
               		var hticks =[];
               		districtUsageChart.push(["Type","Usage",{role:'style'}]);
               		chartArr.push(["Month", "Allocation", "Consumption"]);
					for (i = 0; i < months.length; i++) {
						//chartArr.push('{c:[{v:'+months[i]+'},{v:'+parseFloat(districtJsonData[months[i]][1])+'},{v: '+parseFloat(districtJsonData[months[i]][0])+'}]}');
						//if(i!=months.length-1)
						//chartArr.push('-');
						var valueToPush = [];
						if(i==0){
							districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]),"rgb(47,105,153)"])
							districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]),"rgb(137,168,99)"]);
						}
						if(i%2==0){hticks.push(months[i].replace(/\d+/g, ""));}
						valueToPush[0] = months[i].replace(/\d+/g, "");
						valueToPush[1] = parseFloat(districtJsonData[months[i]][1]);
						valueToPush[2] = parseFloat(districtJsonData[months[i]][0]);
						chartArr.push(valueToPush)
					}
					//console.log(chartArr);
					//console.log(hticks);
					  if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
					  		console.log("google chart is loaded");
					       // google.charts.setOnLoadCallback(drawChart);
					      // loadMonthConsumptionData(12);
			 			   google.charts.setOnLoadCallback(drawChartDistrictUsage);
						   google.charts.setOnLoadCallback(drawAreaChartRange1);
						   google.charts.setOnLoadCallback(drawAreaChartRange2);
						   google.charts.setOnLoadCallback(drawChart);
						   //drawServiceAreaChart();
					  }
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });


               
            }

            function setSelectedValue(selectObjId, valueToSet) {
                var selectedObj = document.getElementById(selectObjId);
                for (var i = 0; i < document.getElementById(selectObjId).options.length; i++) {
                    //console.log(selectedObj.options[i].text +":"+ valueToSet);
                    if (selectedObj.options[i].text == valueToSet) {
                        selectedObj.options[i].selected = true;
                        return;
                    }
                }
                //console.log(selectObjId);
            }

            $(document).ready(function () {
            	//inactivityTime();
            	 getMarkupLayerList();
            	google.charts.load('current', {packages: ['corechart']});   
                var currentDate = new Date(),
                    currentDay = currentDate.getDate() < 10
                        ? '0' + currentDate.getDate()
                        : currentDate.getDate(),
                    currentMonth = currentDate.getMonth() < 9
                        ? '0' + (currentDate.getMonth() + 1)
                        : (currentDate.getMonth() + 1);
                document.getElementById('camp_date').valueAsDate = new Date();

               // document.getElementById("camp_date").value = currentDay + '/' + currentMonth + '/' + currentDate.getFullYear();
                console.log(currentDay + '/' + currentMonth + '/' + currentDate.getFullYear() + '  ' + document.getElementById("camp_date").value)
                loadBookMarkData();
                loadDashboardData();
                openDisplayDetailsModel();
                loadConsumptionData();
                totalAllocationConsumption();
                ETOCalculation1();
                PEFFCalculations1();
                getAllFieldsFromConfig("ConfigurationFile.json");


                $('[data-toggle="markuptoolspopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-markup-tool').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });
                  $('[data-toggle="quickmeasurepopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-quick-measure').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });
                $('[data-toggle="markuppopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-markup').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });

                 $('[data-toggle="exportpdf"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-export-image').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });
                $('[data-toggle="dashboardpopover"]').popover({

                    html: true,
                    content: function () {
                        return $('#popover-content').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });
                $('[data-toggle="searchpopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-search').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });
                $('[data-toggle="bookMarkpopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-bookmark').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });

                $('[data-toggle="markupexportpopover"]').popover({
                    html: true,
                    content: function () {
                        return $('#popover-content-markuplayer').html();
                    }
                }).on("mouseenter", function () {
                    var _this = this;
                     $("#exportedMarkup").html(_this.id); 
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });

                }).on("click", function () {
                    var _this = this;
                    $(this).popover("show");
                    $(".popover").on("mouseleave", function () {
                        $(_this).popover('hide');
                    });
                  
                }).on("mouseleave", function () {
                    var _this = this;
                    setTimeout(function () {
                        if (!$(".popover:hover").length) {
                            $(_this).popover("hide");
                        }
                    }, 300);
                });

                var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
              // Chart.defaults.global.defaultFontColor = 'black';
              //   Chart.defaults.global.defaultFontSize = 10;
              //   Chart.defaults.global.defaultFontWeight = 'bold'; 

              		Chart.defaults.font.size = 10;
               	 	var GagueGM = new JustGage({
                    id: 'totalAllocationGM',
                    value: 50,
                    min: 0,
                    max: 100,
                    symbol: '%',
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 10,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    gaugeWidthScale: 0.5,
                    counter: true,
                    relativeGaugeSize: true,
                });

                //Consumption ChartObject
                consumptionChart = new Chart('barChart', {
                    type: "bar",
                    data: {
                        labels: [],
                        datasets: []
                    },
                    options: {
                        tooltips: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return "" + formatNumber((tooltipItem.yLabel).toFixed(2)) + "";
                                }
                            }
                        },
                        legend: {
                            display: true,

                        },
                        layout: {
                            padding: {
                                bottom: 20
                            }
                        },
                        scales: {
                            y : {
                                ticks: {
                                    beginAtZero: true
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    font: {
                                        size: 8,
                                    },

                                }
                            } 
                        },
                        title: {
                            fontSize: 18,
                            display: false,
                            text: '',
                            position: 'bottom'
                        }
                    }
                });
                var month1ChartData = {
                    labels: ["Allocation", "Usage"],
                    datasets: [
                        {
                            backgroundColor: ["blue", "green"],
                            borderColor: ["blue", "green"],
                            borderWidth: 1,
                            data: [
                                226546.8,
                                226426.8
                            ],
                            spanGaps: false

                        },


                    ]
                };

                new Chart("month1Usage", {
                    type: 'bar',
                    data: month1ChartData,
                    options: {
                        scales: {
                              y: 
                             {
	                             ticks: {
	                                display: false,
	                             },
                             },
                        },
                        responsive: true,
                        legend: {
                            display: false,
                            labels: {
                                fontColor: 'black',
                                fontSize: 5
                            }
                        },
                        layout: {
                            padding: {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0
                            }
                        },
                    }
                });




                new Chart("month2Usage", {
                    type: 'bar',
                    data: month1ChartData,
                    options: {
                        scales: {
                            //  yAxes: [
                            //  {
                            // ticks: {
                            //    display: false,
                            // },
                            // },
                            // ],
                        },
                        responsive: true,
                        legend: {
                            display: false,
                            labels: {
                                fontColor: 'black',
                                fontSize: 5
                            }
                        },
                        layout: {
                            padding: {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0
                            }
                        },
                    }
                });

                document.getElementById("serviceAreaUsage").onclick = function(evt) {
						//alert("hello");
						document.getElementById('loaderWrapper').classList.remove("d-none");
						var activePoints = servicearea.getElementsAtEvent(evt);
						if (activePoints[0]) {
							        var chartData = activePoints[0]['_chart'].config.data;
							        var idx = activePoints[0]['_index'];

							        var label = chartData.labels[idx];
							        var value = chartData.datasets[0].data[idx];
                            		layerArr[searchlayer["LayerName"]]['layer'].clear();
							        var url = "http://example.com/?label=" + label + "&value=" + value;
							        console.log(url);
							        //alert(url);
							        closeDashboardModal();
							             $.ajax({
								             type: "GET",
								             url: '/getPercentageData?range='+label,
								             success: function (msg) {
									            // loadDashboardData();
									            console.log(msg);

									            searchRes=[];
                            arr=[];
                            //centroidArray=[];
                            //map.layers.clear();
                          //  map.entities.clear();
                            msg = JSON.parse(msg);
                            if(JSON.stringify(msg).includes("premise")){
                                var k=1;
                                jQuery.each(msg, function(i, val) {
                                      searchRes.push(val);
                                     // console.log(i);
                                      var premise = val.premise;
                                      var meterData = val.meters;
                                    //arr.push("<tr onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                  //  arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                    //  arr.push('<td><div>'+k+'</div></td>');
                                     // arr.push('<td><div>'+premise.premID+'</div></td>');
                                    //  arr.push('<td><div>'+premise.Customer+'</div></td>');
                                      //arr.push('<td><div>'+formatNumber(parseFloat(premise.CorrArea).toFixed(2))+'</div></td>');
                                    //  arr.push('<td><div>'+formatNumber(parseFloat(premise.TotalCon).toFixed(2))+'</div></td>');
                                    //  arr.push('<td><div>'+formatNumber(parseFloat(premise.Allocation).toFixed(2))+'</div></td>');
                                   // arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2))+'</div></td>');
                                  //    arr.push('<td><div>'+meterData.length+'</div></td>');
                                  //  arr.push('</tr>');

                                    var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":", ","), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(102, 255, 51)", strokeThickness: 2 } });
                                    layerArr[searchlayer["LayerName"]]['layer'].add(polygonD);
                                      //console.log(arr);
                                      //plotting premise boundaries on map
                                       //Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function  () {
                                      //      polygon = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",","), { polygonOptions: { fillColor:"rgba(255,255,255,0)",strokeColor: "blue", strokeThickness: 3 } });
                                      //      Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function  () {
                                     //           var centroid =   Microsoft.Maps.SpatialMath.Geometry.centroid(Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",",")));
                                     //           centroidArray.push(new Microsoft.Maps.Location(centroid.latitude, centroid.longitude));
                                    //            if(centroidArray.length == Object.keys(msg).length){
                                    //                    centroidArray.push(centroidArray[0]);
                                    //                    var envelop = new Microsoft.Maps.Polygon(centroidArray);
                                    //                    var rect = Microsoft.Maps.SpatialMath.Geometry.bounds(centroidArray);
                                                       // console.log(rect);
                                    //                    map.setView({ bounds: rect});
                                     //           }
                                     //       });
                                            //var layers = new Microsoft.Maps.Layer();
                                            //layers.add(polygon, i);
                                            //map.layers.insert(layers);   
                                        //    if(polygon!=undefined){
                                     //           Microsoft.Maps.Events.addHandler(layers, 'click', function () {
                                     //              polygon = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",","), { polygonOptions: { fillColor:"rgba(255,255,255,0)",strokeColor: "green", strokeThickness: 3 } });
                                                   // console.log("tr_"+k);
                                    //                selectListRow("tr_"+k);
                                                   //layer.clear();
                                                   /// layer.add(polygon);  
                                                   // map.layers.insert(layer); 
                                                   // Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function () {
                                                  //         var centroid =  Microsoft.Maps.SpatialMath.Geometry.centroid(polygon);
                                                           //console.log(centroid.latitude+" : "+ centroid.longitude);
                                                   ///        map.setView({
                                                    //              center: new Microsoft.Maps.Location(centroid.latitude, centroid.longitude),
                                                    //              zoom: 18
                                                    //       });
                                                   // });
                                                    //console.log(premise.premID+":"+document.getElementById("premiseId"));
                                    //                var accordian ="";
                                    //                var arr = [];
             
                                    //                 var acc = document.getElementsByClassName("accordion");
                                    //                 var i;

                                   //                  for (i = 0; i < acc.length; i++) {
                                    //                      acc[i].onclick = function(){
                                    //                            this.classList.toggle("active");
                                   //                             this.nextElementSibling.classList.toggle("show");
                                   //                       }
                                   //                 }
                                                       //open bar chart
                                   //                   var values=[];
                                   //                     result=val.consumption;
                                 //                       Object.keys(result).map(function(k){
                                    //                        values.push(formatNumber(parseFloat(result[k]).toFixed(2)));
                                    //                    });
                                    //                    var canvas = document.getElementById("barChart");
                                    //                    var ctx = canvas.getContext('2d');  
                                    //                    var chartType = 'bar';
                                    //                    var myBarChart;
                                                        //Chart.defaults.global.defaultFontColor = 'grey';
                                                       // Chart.defaults.global.defaultFontSize = 12;
                                    //                    var data = {
                                    //                        labels: Object.keys(values),
                                    //                        datasets: [{
                                    //                            label: "Consumption Data",
                                    //                            fill: true,
                                     //                           lineTension: 0.1,
                                     //                           backgroundColor: "blue",
                                     //                           borderColor: "blue", // The main line color
                                      //                          borderCapStyle: 'square',
                                      //                          pointBorderColor: "white",
                                       //                         pointBackgroundColor: "green",
                                        //                        pointBorderWidth: 1,
                                         //                       pointHoverRadius: 8,
                                          //                      pointHoverBackgroundColor: "yellow",
                                          //                      pointHoverBorderColor: "green",
                                          //                      pointHoverBorderWidth: 2,
                                          //                      pointRadius: 4,
                                           //                     pointHitRadius: 10,
                                           //                     data: values,
                                           //                     spanGaps: true,
                                          //                  },
                                          //                  {
                                            //                    label: "Allocation Data",
                                            //                    fill: true,
                                             //                   lineTension: 0.1,
                                            //                    backgroundColor: "green",
                                           ///                     borderColor: "green", // The main line color
                                            //                    borderCapStyle: 'square',
                                            //                    pointBorderColor: "white",
                                            //                    pointBackgroundColor: "green",
                                            //                    pointBorderWidth: 1,
                                            //                    pointHoverRadius: 8,
                                            //                    pointHoverBackgroundColor: "yellow",
                                            //                    pointHoverBorderColor: "green",
                                             //                   pointHoverBorderWidth: 2,
                                              //                  pointRadius: 4,
                                              //                  pointHitRadius: 10,
                                              //                  data: values,
                                              //                  spanGaps: true,
                                              //              }]
                                              //          };
                                              //          var options = {
                                              //              legend: {
                                               //                 display: true,
                                                //                position:"bottom",
                                                 //               labels: {
                                                  //                  padding: 10
                                                   //             }
                                                    //        },
                                                     //       layout: {
                                                      //          padding: {
                                                       //             top:10,
                                                      //             bottom: 20
                                                      //          }
                                                   //         },
                                                 //           scales: {
                                               //                 yAxes: [{
                                               //                     ticks: {
                                               ////                         beginAtZero: true
                                               //                     }
                                           //                     }]
                                            //                },
                                            //                title: {
                                           ///                     fontSize: 18,
                                            //                    display: false,
                                             //                   text: '',
                                           //                     position: 'bottom'
                                             //               }
                                            ///            };
                                            //            init();
                                            //            function init() {
                                                          // Chart declaration:
                                                           // myBarChart = new Chart(ctx, {
                                                               // type: chartType,
                                                              //  data: data,
                                                              //  options: options
                                                         //   });
                                            //                consumptionChart.data.labels = data.labels;
                                           //                 consumptionChart.update();
                                          //                  consumptionChart.data.datasets = data.datasets;
                                        //                    consumptionChart.update();
                                           //             }
                                    	//		$('#myUsageModalLabel').html(premise.premID);
                                         //            openDetailsModal(); 
                                          //      });
                                           // }
                                      // });
                                       
                                       k++;
                                }); 
                                generateList(searchRes);
                                //var table;
                              //  if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
                              //      table = $('#dtBasicExample').DataTable();
                              //      table.destroy();
                               // }
                                //console.log(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
                              //  $("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
                              //  $("#pAllocationBtn").html("Total Records Found ("+(k-1)+" Records)");
                              //  $('#dtBasicExample').DataTable({
                             //               "paging":   false,
                                  //          "info":     false,
                                   //        "scrollY": '200px',
                                    //        "scrollCollapse": true,
                                    //"searching": true
                                    //,
                                	//		"columns":[null,null,{"width":"20%"},null,null,null,null,null]
                                   // });
                                
                                }else{
                                    if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
                                        table = $('#dtBasicExample').DataTable();
                                        table.destroy();
                                    }
                                 $("#pAllocationBtn").html("Total Records Found (0 Records)");
                                 $("#dtBasicExample").find("tbody").html("<tr><td colspan='8'>No data available in table</td></tr>");
                                 $("#dtBasicExample").find("tbody").find("td").css("verticle-align","middle");
                                $("#dtBasicExample").find("tbody").find("td").css("padding-botom","0");
                            }
                            						document.getElementById('loaderWrapper').classList.add("d-none");

								            },
								            error: function (e) {
														document.getElementById('loaderWrapper').classList.add("d-none");								 
               											console.log(e) 
								            }
								            });
							      }
							    };




							   //opentoolbar items
							   $("#geoStyler_symbolSizeSelect-button").click(function(){
							   	  //alert("called");
								  $("#geoStyler_symbolSizeSelect-menu").attr("style", "display:block")
							});

							$("input[type=color]").change(function(e){ 
					    		$("#selectedColor").html(e.target.value);
					    		//alert($("#selectedColor").html()); 
					    	});


					document.getElementById('clearlist').onclick = function (){      
					var listID =  $('ul#ex1').find('li.active a').attr('id')
					var text = $('ul#ex1').find('li.active a').text()
					text = text.split('(')[0].trim();
					listsSet.delete(text);
					console.log(listID);
                    if(listID === "pAllocationBtn")  
                      { 
	                        var tab = document.getElementById(listID);
	                        if (tab) {
 								// tab.parentNode.removeChild(tab);
	                          	// $(`#${listID}`).hide();
	                            $("#pAllocationBtn").html("Current % Allocation (0 Records)");
	                            ex1.children[0].className = ex1.children[0].className.replace(" active", "");
	                        }  
	                        var contentId = listID.replace("tab","tabs0");
	                    
	                        var content = document.getElementById(contentId);
	                        console.log(content.getAttribute('href'));//ex1-tabs0-1
	                        if (content) {
	                          //content.parentNode.removeChild(content);
	                          //$("#"+contentId).hide();
	                          //$(`#${contentId}`).close();
	                     	  //layerArr[searchlayer["LayerName"]]['layer'].clear();
	                     	  clearList()
	                       }
                           
                        }else{
	                        var tab = document.getElementById(listID);
	                        if (tab) {
	                        tab.parentNode.removeChild(tab);
	                        }
	                        var contentId = listID.replace("tab","tabs0");
	                        var content = document.getElementById(contentId);
	                        if (content) {
	                         content.parentNode.removeChild(content);
	                         layerArr[searchlayer["LayerName"]]['layer'].clear();
	                         //searchRes = [];
	                       }
                       }
                
					   var num = listID.replace("ex1-tab-","");
	                   if(num != 1 && listID !== "pAllocationBtn")
	                   {
	                      var n = num-1;
	                      console.log("num  "+n);
	                      //$('#ex1-tab-'+n).addClass('active');
	                      var tabid = 'ex1-tabs0-'+n;
	                      $('.nav-item a[href="#' + tabid + '"]').tab('show');
	                     
	                   }   
	                   searchRes = [];
	                   currentSearchQuery = "";             
                   };
              //setTimeout(() => {
                   clickCheckboxes();
                    //}, 2000);
            });



            $(function () {
                const searchqueries = document.getElementById('searchbody');
                $('#addNewDivModal').click(function () {
                   searchDropdown =[];
                      const directChildren = searchqueries.children.length;
                      const divIds = $('#searchbody > div').map((i, div) => div.id).get();
                      var divId = directChildren+1;
                      console.log(divIds);
                      if(Array.from(divIds).includes('search-row-'+divId)){
                        divId = divId + 1;
                      }
                      var removeId = 'search-row-'+divId;
                      jQuery.each(configJson.PremiseModule, function(i, detail){
                           // console.log(detail.DisplayInSearch);
                            if(detail.DisplayInSearch===true){
                            searchDropdown.push('<option value="'+detail.DisplayText+'">');
                            searchDropdown.push(detail.DisplayText);
                            searchDropdown.push('</option>');
                        }
                      });
                      var divHtm ='<div class="row" id="search-row-'+divId+'"><div class="col-sm-4"><select style="width:90%;padding:3px" name="queryName-'+divId+'" id="queryName-'+divId+'" onchange="getOperatorsList(this)"><option value="" selected="true"></option>'+searchDropdown.toString().replaceAll(","," ").replaceAll(">,<>","><")+'</select></div><div class="col-sm-2"><select style="width:90%;padding:3px" name="operation-'+divId+'" id="operation-'+divId+'" onchange="getSelectedOperator(this)"><option selected="true" value=""></option></select></div><div class="col-sm-3" id="singleValueDiv-'+divId+'" name="singleValueDiv-'+divId+'"><input name="value-'+divId+'" style="width:80%;height:" type="text" minlength="1" maxlength="500" id="value-'+divId+'"></div><div class="col-sm-3" id="betweenDiv-'+divId+'" name="betweenDiv-'+divId+'" style="display:none;"> <div class="row"><input name="value-'+divId+'" style="width:40%" type="text" minlength="1" maxlength="500" id="value-'+divId+'"><label style="margin:2.5px;">To</label><input name="valueTo-'+divId+'" style="width:40%" type="text" minlength="1" maxlength="500" id="valueTo-'+divId+'"></div></div><div class="col-sm-1"><label name="unitid-'+divId+'" id="unitid-'+divId+'"  style="width:15%"></label></div><div class="col-sm-2" style="text-align:center"><button onClick="removeDiv(\''+removeId+'\')" class="btn btn-danger"  style="padding:3px 6px">-</button></div></div>';
                      //var divHtm ='<div class="row" id="search-row-'+divId+'"><div class="col-sm-3"><select style="width:90%;padding:3px" name="queryName-'+divId+'" id="queryName-'+divId+'" onchange="getOperatorsList(this)"><option value="" selected="true"></option>'+searchDropdown.toString().replaceAll(","," ").replaceAll(">,<>","><")+'</select></div><div class="col-sm-3"><select style="width:90%;padding:3px" name="operation-'+divId+'" id="operation-'+divId+'" onchange="getSelectedOperator(this)"><option selected="true" value=""></option></select></div><div class="col-sm-3"><input name="value-'+divId+'" style="width:80%;height:" type="text" minlength="1" maxlength="500" id="value-'+divId+'"> <label name="unitid-'+divId+'" id="unitid-'+divId+'"  style="width:15%"></label></div><div class="col-sm-3" style="text-align:center"><button onClick="removeDiv(\''+removeId+'\')" class="btn btn-danger"  style="padding:3px 6px">-</button></div></div>';
                      //console.log("length of div: "+divHtm);
                      var newDiv = $(divHtm);
                      //newDiv.style.background = "#000";
                    $('#searchQueryModal').find('.modal-body').append(newDiv);
                });
                $('#addNewDivModal').on('touchstart',function(ev) {
					    searchDropdown =[];
                      const directChildren = searchqueries.children.length;
                      const divIds = $('#searchbody > div').map((i, div) => div.id).get();
                      var divId = directChildren+1;
                      console.log(divIds);
                      if(Array.from(divIds).includes('search-row-'+divId)){
                        divId = divId + 1;
                      }
                      var removeId = 'search-row-'+divId;
                      jQuery.each(configJson.PremiseModule, function(i, detail){
                           // console.log(detail.DisplayInSearch);
                            if(detail.DisplayInSearch===true){
                            searchDropdown.push('<option value="'+detail.DisplayText+'">');
                            searchDropdown.push(detail.DisplayText);
                            searchDropdown.push('</option>');
                        }
                      });
                      var divHtm ='<div class="row" id="search-row-'+divId+'"><div class="col-sm-4"><select style="width:90%;padding:3px" name="queryName-'+divId+'" id="queryName-'+divId+'" onchange="getOperatorsList(this)"><option value="" selected="true"></option>'+searchDropdown.toString().replaceAll(","," ").replaceAll(">,<>","><")+'</select></div><div class="col-sm-2"><select style="width:90%;padding:3px" name="operation-'+divId+'" id="operation-'+divId+'" onchange="getSelectedOperator(this)"><option selected="true" value=""></option></select></div><div class="col-sm-3" id="singleValueDiv-'+divId+'" name="singleValueDiv-'+divId+'"><input name="value-'+divId+'" style="width:80%;height:" type="text" minlength="1" maxlength="500" id="value-'+divId+'"></div><div class="col-sm-3" id="betweenDiv-'+divId+'" name="betweenDiv-'+divId+'" style="display:none;"> <div class="row"><input name="value-'+divId+'" style="width:40%" type="text" minlength="1" maxlength="500" id="value-'+divId+'"><label style="margin:2.5px;">To</label><input name="valueTo-'+divId+'" style="width:40%" type="text" minlength="1" maxlength="500" id="valueTo-'+divId+'"></div></div><div class="col-sm-1"><label name="unitid-'+divId+'" id="unitid-'+divId+'"  style="width:15%"></label></div><div class="col-sm-2" style="text-align:center"><button onClick="removeDiv(\''+removeId+'\')" class="btn btn-danger"  style="padding:3px 6px">-</button></div></div>';
                      //var divHtm ='<div class="row" id="search-row-'+divId+'"><div class="col-sm-3"><select style="width:90%;padding:3px" name="queryName-'+divId+'" id="queryName-'+divId+'" onchange="getOperatorsList(this)"><option value="" selected="true"></option>'+searchDropdown.toString().replaceAll(","," ").replaceAll(">,<>","><")+'</select></div><div class="col-sm-3"><select style="width:90%;padding:3px" name="operation-'+divId+'" id="operation-'+divId+'" onchange="getSelectedOperator(this)"><option selected="true" value=""></option></select></div><div class="col-sm-3"><input name="value-'+divId+'" style="width:80%;height:" type="text" minlength="1" maxlength="500" id="value-'+divId+'"> <label name="unitid-'+divId+'" id="unitid-'+divId+'"  style="width:15%"></label></div><div class="col-sm-3" style="text-align:center"><button onClick="removeDiv(\''+removeId+'\')" class="btn btn-danger"  style="padding:3px 6px">-</button></div></div>';
                      //console.log("length of div: "+divHtm);
                      var newDiv = $(divHtm);
                      //newDiv.style.background = "#000";
                    $('#searchQueryModal').find('.modal-body').append(newDiv);
				});
            });


            function openCreateModal() {
                closeDashboardModal();
                $('#myModal1').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                }); fv
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#myModal1").css({ 'z-index': 9999 });
                $("#myModal1").removeClass("modal");

            }
            function closeCreateModal() {
                $('#myModal1').modal('hide');
                $('#myModal1').addClass('modal');

            }


            function removeDiv(id) {
                //console.log("div id:"+id);
                document.getElementById(id).remove();
            }
            function closeSearchModal() {
                $('#searchQueryModal').modal('hide');
                $('#searchQueryModal').addClass("modal");
            }
            var searchAssocitative = {};
            var currentSearchQuery = "";
            function searchData() {
            	//unit tool
            	isCreateDetailsData=false;
                isSearchClear = false;
                isSearchList=false;
                isUpdate=false;
                isSearchButtonBox=false;


                var queries = [];
                var operations = [];
                var values = [];
                var arr = [];
                var betweenCounter=0;
                isUpdate = false;
               $("#searchQueryModal").find("select").each(function(){
               selectedVal = $(this).val().trim();
                selectedVal = selectedVal.replace("+","%2B");
                 if(selectedVal!==""){
                   //alert($(this).attr("name")+" : "+selectedVal);
                   if($(this).attr("name").includes("queryName")){
                        queries.push(selectedVal);
                    }else{
                        operations.push(selectedVal)
                    }
                    if(selectedVal=="Between")
                        betweenCounter++;
                 }
            });
           // var flag=false;
           var lastid;
             $("#searchQueryModal").find("input").each(function(){
                
                selectedVal = $(this).val();
            	console.log(selectedVal);
               // if(selectedVal.trim()!==""){
                   // selectedVal = selectedVal.replace(",","").trim();
                    
                  //  values.push(selectedVal);
                   // alert(selectedVal);
             //  }
             	if(selectedVal.trim()!=="" && lastid !==$(this).attr("id")){
                    selectedVal = selectedVal.replace(",","").trim();
                    values.push(selectedVal);
                   // alert(selectedVal);
                   lastid = $(this).attr("id");
               }
            });
            
            var queriesCount=queries.length;
            if(betweenCounter>0)
                queriesCount=queriesCount+betweenCounter;
            console.log(queriesCount);
            console.log(values.length);
            if(queriesCount!==values.length){
                alert("Please Enter Value");
                return;
            }

                var jsonData = '{"query":"[' + queries + ']","operations":"[' + operations + ']","values":"[' + values + ']"}';
                currentSearchQuery = jsonData;
                console.log(encodeURI(jsonData));
                $.ajax({
                    type: "POST",
                    url: 'GetSearchedData?data=' + encodeURIComponent(jsonData),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        layerArr[searchlayer["LayerName"]]['layer'].clear();
                        // var centroid =  Microsoft.Maps.SpatialMath.Geometry.centroid(34.05307000392542, -117.6910560851873);
                        map.setView({
                            center: new Microsoft.Maps.Location(34.0561057604764, -117.704161576153),
                            zoom: 13
                        });

                        closeSearchModal();
                        searchRes = [];
                        arr = [];
                        centroidArray = [];
                        //map.layers.clear();
                       // map.entities.clear();
                        console.log(JSON.stringify(msg));
                        if (JSON.stringify(msg).includes("premise")) {
                            var k = 1;
                            jQuery.each(msg, function (i, val) {
                                searchRes.push(val);
                                //console.log(i);
                                var premise = val.premise;
                                var meterData = val.meters;
                                var values = [];
                                var allocValues = [];
                                result = val.consumption;
                                Object.keys(result).map(function (k) {
                                    values.push(result[k]);
                                });
                                result = val.allocation;
                                Object.keys(result).map(function (k) {
                                    allocValues.push(result[k]);
                                });
                                //plotting premise boundaries on map
                                Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
                                    var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom.replace("LINESTRING", "MULTIPOLYGON"), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(102, 255, 51)", strokeThickness: 2 } });
                                    layerArr[searchlayer["LayerName"]]['layer'].add(polygonD);
                                });
                                k++;
                            });
                            console.log(JSON.stringify(searchRes));
                            generateList(JSON.stringify(searchRes));

                        } else {
                            if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                                table = $('#dtBasicExample').DataTable();
                                table.destroy();
                            }
                            $("#pAllocationBtn").html("Total Records Found (0 Records)");
                           $("#dtBasicExample").find("tbody").html("<tr><td colspan='8'>No data available in table</td></tr>");
                            $("#dtBasicExample").find("tbody").find("td").css("verticle-align", "middle");
                             $("#dtBasicExample").find("tbody").find("td").css("padding-botom","0");
                        }

                    },
                    error: function (e) {
                        console.log(e)
                        closeSearchModal();
                    }
                });
            }


            function getSecId(id){
            	if(id === "premiseINI-row")
            		return "content-ini";
            	else if(id === "premiseNI-row")
            		return "content-ni";
            	else if(id === "premiseII-row")
            		return "content-ii";
            	else return "";
            }
            function CreateDetailsData(premId, rowid) {
                //console.log(premId);
                setHeight();
                var dataTable = document.getElementById("dtBasicExample");
                var childrens = dataTable.getElementsByTagName('tr');
                var row;
                for (var i = 0; i < childrens.length; i++) {
                    row = childrens[i];
                    row.style.backgroundColor = "#fff";
                }
                document.getElementById(rowid).style.backgroundColor = "#aaaaaa4f";
                // console.log(searchRes);
                jQuery.each(searchRes, function (i, val) {
                    var premise = val.premise;
                    if(premise===undefined)premise = val.premise;
                    //console.log(premise);
                    if (premise.premID === premId) {
                        var meterData = val.meters;
                        if(meterData === undefined)meterData = val.meters;
                        //alert("called"+listLayer.getPrimitives());
                           console.log(val);
                        //var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom, { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(144, 252, 3)", strokeThickness: 2 } });
                        //layerArr[clicklayer["LayerName"]]['layer'].add(polygonD);
                        layerArr[clicklayer["LayerName"]]['layer'].clear();
                        Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
                            polygon = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":", ","), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(255, 255, 3)", strokeThickness: 2 } });
                            layerArr[clicklayer["LayerName"]]['layer'].add(polygon);
                            //layerArr[clicklayer["LayerName"]]['layer'].add(polygon);
                          //  listLayer.clear();
                         //   listLayer.add(polygon, i);
                         //   map.layers.insert(listLayer);
                            if (polygon != undefined) {
                                var accordian = "";
                                var arr = [];
								//Displaying Premise Details
				                 jQuery.each(configJson.PremiseModule, function(ind, detail){
				                      	Object.keys(premise).map(function (k) {
						                      if(detail.DispInDetail === true && detail.ColName === k){
						                       		//console.log(detail.ColName+" : "+k+" : "+ premise[k] )
						                       		var rowd = detail.htmlId+"-row";
						                       		var sectionId = getSecId(rowd);
						                       		
                                                  if (detail.RoundNumbersToDigits !== "") {
                                                      
                                                      if (Number.isNaN(parseFloat(premise[k])) === true || premise[k] === "0.0") {
                                                         // console.log("rowid: " + rowd + " sectionId:" + sectionId + " premise[k]:|" + premise[k]);
						                       				document.getElementById(rowd).style.display = "none";
						                       				if(sectionId!==""){
						                       					document.getElementById(sectionId).style.display = "none";
						                       				}
                                                      } else {
                                                          //console.log(detail.htmlId + " rowid: " + rowd + " sectionId:" + sectionId + " premise[k]:||" + premise[k] +  "  |" + document.getElementById(detail.htmlId).innerHTML);
						                       				document.getElementById(rowd).style.display = "block";
						                       				document.getElementById(detail.htmlId).innerHTML = formatNumber(parseFloat(premise[k]).toFixed(2));
						                       				if(sectionId!==""){
						                       					document.getElementById(sectionId).style.display = "block";
						                       				}
						                       			}
						                       		}
						                       		else {
						                       			document.getElementById(detail.htmlId).innerHTML = premise[k];
						                       		}
						                      }
				                      	});
                                 });
                                document.getElementById("premisePrecentAllocation").innerHTML = parseFloat(parseFloat(premise.Consumption).toFixed(2) / parseFloat(premise.Allocation).toFixed(2) * 100).toFixed(2) + " %";
                                document.getElementById("totalMeters").innerHTML = meterData.length;
                                document.getElementById("premiseConsumption").innerHTML = parseFloat(premise.Consumption).toFixed(2);
                                for (let i = 0; i < meterData.length; i++) {
                                    var parsedMeterJson = meterData[i];

                                    if (parsedMeterJson == undefined) continue;
                                   // arr.push('<button class="accordion">Meter ');
                                   // arr.push(i + 1);
                                   // arr.push('</button>');
                                   // arr.push('<div class="panel col-md-12"><div class="row" style="padding-top:5px"><div class="col-md-3">Meter Id</div><div class="col-md-9"><label>');
                                   // arr.push(parsedMeterJson.meterID);
                                   // arr.push('</label></div></div><div class="row" style="padding-top:5px"><div class="col-md-3">Meter Address</div><div class="col-md-9"><label>');
                                   // arr.push(parsedMeterJson.MeterAdd.replace(":", ","));
                                   // arr.push('</label></div></div><div class="row" style="padding-top:5px"><div class="col-md-3">Customer Name</div><div class="col-md-9"><label>');
                                   // arr.push(parsedMeterJson.Customer.replace(":", ","));
                                   // arr.push('</label></div></div><div class="row" style="padding-top:5px"><div class="col-md-3">Water Type</div><div class="col-md-9"><label>');
                                   // arr.push("NA");
                                    //arr.push('</label></div></div><div class="row" style="padding-top:5px"><div class="col-md-3">APN Number</div><div class="col-md-9"><label>');
                                   // arr.push("NA");
                                   // arr.push("</label></div></div></div>");
                                    arr.push('<button class="accordion">Meter ');
                                                arr.push(i + 1);
                                                arr.push('</button>');
                                                arr.push('<div class="panel col-md-12">');
                                                jQuery.each(configJson.PremiseModule, function (ind, detail) {
                                                    if (detail.DispInDetail === true && detail.LayerName === "Meter") {
                                                        if (Object.keys(parsedMeterJson).includes(detail.ColName)) {
                                                            //console.log(parsedMeterJson[detail.ColName]);
                                                            arr.push('<div class="row" style="padding-top:5px">');
                                                            arr.push('<div class="col-md-4">');
                                                            arr.push(detail.DisplayText);
                                                            arr.push('</div>');
                                                            arr.push('<div class="col-md-8">');
                                                            arr.push('<label id="' + detail.htmlId + '">');
                                                            arr.push(parsedMeterJson[detail.ColName].replaceAll(":", ","));
                                                            arr.push('</label></div></div>');
                                                        }
                                                    }
                                                });
                                       arr.push('</div>');
                                }
                                document.getElementById("content").innerHTML = arr.toString().replaceAll(",", " ");
                                var acc = document.getElementsByClassName("accordion");
                                var i;
                                for (i = 0; i < acc.length; i++) {
                                    acc[i].onclick = function () {
                                        this.classList.toggle("active");
                                        this.nextElementSibling.classList.toggle("show");
                                    }
                                }
                                //open bar chart
                                var values = [];
                                var allocValues = [];
                                console.log(val);
                                result = val.consumption;
                                if(result === undefined)result = val.consumption;

                                var unit=document.getElementById("unit2").value;
                                console.log("unit2 :: "+unit);
                                Object.keys(result).map(function (k) {
                                 	var resultUnitCal = unitCalculation2(unit, parseFloat(result[k]));
                                    values.push(resultUnitCal.cal1);
                                });
                                result = val.allocation;
                                if(result === undefined)result = val.allocation;
                                Object.keys(result).map(function (k) {
                               		var resultUnitCal = unitCalculation2(unit, parseFloat(result[k]));
                                    allocValues.push(resultUnitCal.cal1);
                                });
                                var canvas = document.getElementById("barChart");
                                var ctx = canvas.getContext('2d');
                                var chartType = 'bar';
                                var myBarChart;
                              //  Chart.defaults.global.defaultFontColor = 'grey';
                             //   Chart.defaults.global.defaultFontSize = 10;
                                var data = {
                                    labels: Object.keys(result),
                                    datasets: [
                                    {
                                        label: "Allocation Data",
                                        fill: true,
                                        lineTension: 0.1,
                                        backgroundColor: "rgba(47, 105, 153,1)",
                                        borderColor: "green", // The main line color
                                        borderCapStyle: 'square',
                                        pointBorderColor: "white",
                                        pointBackgroundColor: "green",
                                        pointBorderWidth: 1,
                                        pointHoverRadius: 8,
                                        pointHoverBackgroundColor: "yellow",
                                        pointHoverBorderColor: "green",
                                        pointHoverBorderWidth: 2,
                                        pointRadius: 4,
                                        pointHitRadius: 10,
                                        data: allocValues,
                                        spanGaps: true,
                                    },
                                    {
                                        label: "Consumption Data",
                                        fill: true,
                                        lineTension: 0.1,
                                        backgroundColor: "rgba(137, 168, 99,1)",
                                        borderColor: "green", // The main line color
                                        borderCapStyle: 'square',
                                        pointBorderColor: "white",
                                        pointBackgroundColor: "green",
                                        pointBorderWidth: 1,
                                        pointHoverRadius: 8,
                                        pointHoverBackgroundColor: "yellow",
                                        pointHoverBorderColor: "green",
                                        pointHoverBorderWidth: 2,
                                        pointRadius: 4,
                                        pointHitRadius: 10,
                                        data: values,
                                        spanGaps: true,
                                    },
                                    ]
                                };
                                var options = {
                                    legend: {
                                        display: true
                                    },
                                    layout: {
                                        padding: {
                                            bottom: -20
                                        }
                                    },
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    },
                                    title: {
                                        fontSize: 18,
                                        display: false,
                                        text: '',
                                        position: 'bottom'
                                    }
                                };
                                console.log(JSON.stringify(val))
                                displayPremiseDetailsDataInModal(JSON.stringify(val)); 
                                consumptionChart.data.labels = data.labels;
						        consumptionChart.update();
						        consumptionChart.data.datasets = data.datasets;
						        consumptionChart.update();
                                $('#myUsageModalLabel').html(premise.premID);

                            }
                        });

                    }
                });

                openDetailsModal();
            }




            function selectListRow(rowid) {
                //console.log(rowid);
                var table = $('#dtBasicExample').DataTable();

                //console.log(table.search('Mnte').row({search: 'applied'}).data())
                //var dataTable = document.getElementById("dtBasicExample");
                // var childrens = dataTable.getElementsByTagName('tr');
                // var row;
                // for(var i=0; i<childrens.length;i++){
                // row = childrens[i];
                // row.style.backgroundColor = "#fff";          
                //  }
                //  document.getElementById(rowid).style.backgroundColor = "#aaaaaa4f"; 
            }
            function closeLayerModal() {
            	//alert("called");
                $('#layerModal').modal('hide');
                $('#layerModal').addClass('modal');
            }

            function openManageModal() {
                closeDashboardModal();
                //console.log("DATA");
                $('#CampaignModal').modal({
                    backdrop: false,
                    show: true
                });
               // $("#CampaignModal").css("z-index","99999");
                //$("#CampaignModal").css("position","fixed");
               // $("#CampaignModal").css("left","30%");
                //$("#CampaignModal").css("top","10%");

                 $("#CampaignModal").removeClass("modal");
                $("#CampaignModal").css("left","30%");
                $("#CampaignModal").css("position","fixed");
                $("#CampaignModal").css({ 'z-index': 99999 });
            }
            var g3 = new JustGage({
                id: 'g3',
                value: 0,
                min: 0,
                max: 100,
                symbol: '%',
                pointer: true,
                pointerOptions: {
                    toplength: -15,
                    bottomlength: 10,
                    bottomwidth: 10,
                    color: '#8e8e93',
                    stroke: '#ffffff',
                    stroke_width: 3,
                    stroke_linecap: 'round'
                },
                gaugeWidthScale: 0.5,
                counter: true,
                relativeGaugeSize: true,
            });
            var GagueMonth1Usage = new JustGage({
                id: 'month1Allocation',
                value: 0,
                min: 0,
                max: 100,
                symbol: '%',
                pointer: true,
                pointerOptions: {
                    toplength: -15,
                    bottomlength: 10,
                    bottomwidth: 10,
                    color: '#8e8e93',
                    stroke: '#ffffff',
                    stroke_width: 3,
                    stroke_linecap: 'round'
                },
                gaugeWidthScale: 0.5,
                counter: true,
                relativeGaugeSize: true
            });
            var GagueMonth2Usage = new JustGage({
                id: 'month2Allocation',
                value: 50,
                min: 0,
                max: 100,
                symbol: '%',
                pointer: true,
                pointerOptions: {
                    toplength: -15,
                    bottomlength: 10,
                    bottomwidth: 10,
                    color: '#8e8e93',
                    stroke: '#ffffff',
                    stroke_width: 3,
                    stroke_linecap: 'round'
                },
                gaugeWidthScale: 0.5,
                counter: true,
                relativeGaugeSize: true
            });
            function getWaterDistrictChartGeneralDashboard2(selectedVal) {
                //    console.log(selectedVal.value);
                //      console.log(districtJsonData);
                var months = Object.keys(districtJsonData);
                for (i = 0; i < months.length; i++) {
                    if (selectedVal.value === months[i]) {
                        var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                        GagueMonth2Usage.refresh(perVal);
                        //g3.update();
                        //               console.log(districtJsonData[months[i]]);
                        //   console.log(parseFloat(districtJsonData[months[i]][0]));
                        var xValues = ["Current Allocation", "Current Usage"];
                        var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
                        var barColors = ["blue", "green"];
                        //Chart.defaults.global.defaultFontColor = 'grey';
                       // Chart.defaults.global.defaultFontSize = 10;
                        //Chart.defaults.global.defaultFontWeight = 'bold';
                       // var pieChartContent = document.getElementById('waterDistrictmyChart');
                       // pieChartContent.innerHTML = '&nbsp;';
                        new Chart('month2Usage', {
                            type: "bar",
                            data: {
                                labels: xValues,
                                datasets: [{
                                    backgroundColor: barColors,
                                    data: yValues
                                }]
                            },
                            options: {
                                responsive: true,
                                legend: {
                                    display: false,
                                    labels: {
                                        fontColor: 'black',
                                        fontSize: 5
                                    }
                                },
                                layout: {
                                    padding: {
                                        left: 0,
                                        right: 0,
                                        top: 0,
                                        bottom: 0
                                    }
                                }
                            }
                        });
                    }
                }
            }
            function getWaterDistrictChartGeneralDashboard(selectedVal) {
                var months = Object.keys(districtJsonData);
                for (i = 0; i < months.length; i++) {
                    if (selectedVal.value === months[i]) {
                        var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                        GagueMonth1Usage.refresh(perVal);
                        var xValues = ["Current Allocation", "Current Usage"];
                        var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
                        var barColors = ["blue", "green"];
                        new Chart('month1Usage', {
                            type: "bar",
                            data: {
                                labels: xValues,
                                datasets: [{
                                    backgroundColor: barColors,
                                    data: yValues
                                }]
                            },
                            options: {
                                responsive: true,
                                legend: {
                                    display: false,
                                    labels: {
                                        fontColor: 'black',
                                        fontSize: 5
                                    }
                                },
                                layout: {
                                    padding: {
                                        left: 0,
                                        right: 0,
                                        top: 0,
                                        bottom: 0
                                    }
                                }
                            }
                        });
                    }
                }
            }
            function getWaterDistrictChart(selectedVal) {
                var months = Object.keys(districtJsonData);
                for (i = 0; i < months.length; i++) {
                    if (selectedVal.value === months[i]) {
                        var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                        g3.refresh(perVal);
                        var xValues = ["Current Allocation", "Current Usage"];
                        var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
                        var barColors = ["blue", "green"];
                        var waterUsage = {
                          labels: xValues,
                          datasets: [
                                	{
                                     backgroundColor: barColors,
                                     data: yValues,
                                     skipNull: true

                                    }
                          		]
		                   };
		                   console.log(xValues);
		                   console.log(yValues);
		                   waterDistrictmyChart.data.labels = xValues;
		                   waterDistrictmyChart.update();
		                   waterDistrictmyChart.data.datasets = waterUsage.datasets;
		                   waterDistrictmyChart.update();
		                   //loadPercentUsageData(); 
                    }
                }
            }
            function getOperatorsList(selectedVal){
             console.log(selectedVal.value.replace('+','%2B'));
             $.ajax({
                      type: "POST",
                      url: 'GetOperatorList?query='+encodeURI(selectedVal.value.replace('+','%2B')),
                      success: function (msg) {
                            var data = $(selectedVal).attr('id');
                            console.log(data.split("-")[1]);
                           var filteredObj  = configJson.PremiseModule.filter(val => val.DisplayText===selectedVal.value)[0];
                           if(data.includes("-")){
                                var oprid = "operation-"+data.split("-")[1];
                                var unitId = "unitid-"+data.split("-")[1];
                                var inputId = "value-"+data.split("-")[1];
                                document.getElementById(oprid).innerHTML=msg;
                                document.getElementById(unitId).innerHTML = filteredObj.Unit;
                                console.log(filteredObj);
							    if(filteredObj.RoundNumbersToDigits === "2"){
							         	document.getElementById(inputId).type = "number";
							         	document.getElementById(inputId).step = "any";
							    }
							    else{
							         	document.getElementById(inputId).type="text";
							   }
							    document.getElementById(inputId).setAttribute("pattern", filteredObj.Pattern );
							    document.getElementById(inputId).setAttribute("title", filteredObj.Title );
                            }else{
                            	console.log(filteredObj);
                                document.getElementById("operation").innerHTML=msg;
                                document.getElementById("unitid").innerHTML = filteredObj.Unit;
                               if(filteredObj.RoundNumbersToDigits === "2"){
							         	document.getElementById("value").type = "number";
							         	document.getElementById("value").step = "any";
							    }
							    else{
							        	document.getElementById("value").type="text";
							   }
							   document.getElementById("value").setAttribute("pattern", filteredObj.Pattern );
							   document.getElementById("value").setAttribute("title", filteredObj.Title );
                            }
                      },
                      error: function (e) {
                              console.log(e) 
                             // closeSearchModal();
                      }
            });
      }       
            function closeManageModal() {
                $('#CampaignModal').modal('hide');
                $('#CampaignModal').addClass('modal');
            }
            function openCampaigndashboard() {
            	$("#camp_title").val("");
            	$("#camp_desc").val("");
            	$("#camp_notes").val("");
                if (typeof searchRes == 'undefined' || searchRes.length == 0) {
                    alert("List is empty to create or save group");
                } else {
                    $('#myModal1').modal({
                        backdrop: false,
                        show: true
                    });
                }

            }
            function closeCampaigndashboard() {
                $('#campaignDashboardModal').modal('hide');
                $('#campaignDashboardModal').addClass('modal');
            }
            closeCampaignModal
             function closeCampaignModal() {
                $('#CampaignModal').modal('hide');
                $('#CampaignModal').addClass('modal');
            }
            function openDashboardModal() {
                //console.log("HERERR");
                unitConverstionDeatils2(document.getElementById("unit2"));    
                closeGeneralDashboardModal();
                $('#myDashboardModal').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#myDashboardModal").removeClass("modal");
                $("#myDashboardModal").css("left","30%");
                $("#myDashboardModal").css("position","fixed");
                $("#myDashboardModal").css({ 'z-index': 99999 });
                if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
					  		console.log("google chart is loaded");
					       // google.charts.setOnLoadCallback(drawChart);
					       //loadMonthConsumptionData(12);
			 			   google.charts.setOnLoadCallback(drawChartDistrictUsage);
						   google.charts.setOnLoadCallback(drawAreaChartRange1);
						   google.charts.setOnLoadCallback(drawAreaChartRange2);
						   google.charts.setOnLoadCallback(drawChart);
						   drawServiceAreaChart();
				}
            }

            function closeDashboardModal() {
                $('#myDashboardModal').modal('hide');
                $('#myDashboardModal').addClass('modal');

            }
            function openDetailsModal() {
         		unitConverstionDeatils2(document.getElementById("unit2"));      
                //const element = document.getElementsByClassName("panel-wrap");
                //setHeight();
                document.getElementsByClassName("panel-wrap")[0].classList.add("panel-wrap-new");
           		setHeight();
            }

            function closeDetailsModal() {
                //const element = document.getElementsByClassName("panel-wrap");
                //  console.log("close clicked");
                layerArr[clicklayer["LayerName"]]['layer'].clear();
                //map.entities.clear();
                document.getElementsByClassName("panel-wrap")[0].classList.remove("panel-wrap-new");
            }

            function openManagersDashboardModal() {
                closeDashboardModal();
                $('#generalDashboardModal').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#myModal1").css({ 'z-index': 99999 });
                $("#generalDashboardModal").removeClass("modal");
                $("#generalDashboardModal").css("left","30%");
                $("#generalDashboardModal").css("position","fixed");
            }

            function closeGeneralDashboardModal() {
                $('#generalDashboardModal').modal('hide');
                $('#generalDashboardModal').addClass('modal');
            }
            function openLayerMenu() {

                $('#myModal1').modal({
                    backdrop: false,
                    show: true
                });

            }
            $('.modal-dialog').draggable({
                handle: ".modal-header"
            });
            const map1 = new Map();
            map1.set('LANDSCAPE_AREA_POOLS', 'rgba(103,147,222,0.8)');
            map1.set('LANDSCAPE_AREA_IRRIGABLE_NOT_IRRIGATED', 'rgba(183,181,156,0.8)');
            map1.set('LANDSCAPE_AREA_IRRIGATED', 'rgba(198,219,199,0.8)');
            map1.set('LANDSCAPE_AREA_BUILDINGS', 'rgba(254,255,255,0.8)');


            function clickCheckboxes(){
	            var checkboxes = document.querySelectorAll("input[type=checkbox]");


	            /*
	            For IE11 support, replace arrow functions with normal functions and
	            use a polyfill for Array.forEach:
	            https://vanillajstoolkit.com/polyfills/arrayforeach/
	            */
	            $("input[type='radio'][name='chkBaseMap']").click(function () {
	                var value = $(this).val();
	                //   console.log(value);
	               if(value=="BaseMap_Road"){
	                changeMapTypeIdToRoad();
			            }  else if(value =="BaseMap_Aerial_Roads"){
			                changeMapTypeIdToAerialWithLabels();
			            }else if(value=="BaseMap_Aerial"){
			               changeMapTypeIdToAerial();
			            } else if(value=="BaseMap_Road"){
			               // changeMapTypeId("Road");
			            }
	            });
	            // Use Array.forEach to add an event listener to each checkbox.
	            checkboxes.forEach(function (checkbox) {
	                //console.log(checkbox);
	                checkbox.addEventListener('change', async function () {
	                	//sconsole.log(checkbox);
	                    if (checkbox.checked) {
	                        //document.getElementById('loaderWrapper').classList.remove("d-none");
	                        if(checkbox.id !== "toggleGM" && checkbox.id!=="toggleCampaign"){
		                        enabledSettings.push(checkbox.value);
		                        await showTileMapsNew(checkbox.value, enabledSettings.indexOf(checkbox.value) + 1);
	                        }
	                         if(checkbox.id==="toggleCampaign"){
	                        	console.log(checkbox.id);   
	                        	//calAvgGeneralManager = true;
	                        	if(document.getElementById("campaignFromMonthRange1").value!=="" && document.getElementById("campaignToMonthRange2").value!==""){
	                        		getCampaignBetweenMonthsRange1();
	                        	}
	                        	if(document.getElementById("campaignFromMonthRange2").value!=="" && document.getElementById("campaignToMonthRange2").value!==""){
	                        		getCampaignBetweenMonthsRange2();
	                        	}
	                        }
	                        else{
	                        	console.log(checkbox.id);   
	                        	//calAvgGeneralManager = true;
	                        	if(document.getElementById("gmdMockFromMonthRange1").value!=="" && document.getElementById("gmdMockToMonthRange1").value!==""){
	                        		getUsagdeDataBetweenMonthsRange1();
	                        	}
	                        	if(document.getElementById("gmdMockFromMonthRange2").value!=="" && document.getElementById("gmdMockToMonthRange2").value!==""){
	                        		getUsagdeDataBetweenMonthsRange2();
	                        	}
	                        }

	                    } else {
	                    	if(checkbox.id !== "toggleGM"){
		                        const index = enabledSettings.indexOf(checkbox.value);
		                        if (index > -1) { // only splice array when item is found
		                            enabledSettings.splice(index, 1); // 2nd parameter means remove one item only
		                        }
		                        let allLayersData = getAllIndexes(map.layers, mylayers[checkbox.value]);
		                        for (let i = 0; i < allLayersData.length; i++) {
		                            map.layers.removeAt(allLayersData[i]);
		                        }
		                       	if(checkbox.value.includes("_markup"))
		                     		getAllIndexesMarkup(map.layers, mylayers, checkbox.value.replace("_markup",""));
		                        map.entities.clear();
		                        clearLayer(clicklayer["LayerName"]);
		                        //console.log(getAllIndexes(map.layers, mylayers["TestMarkup_"]));
	                        }
	                         if(checkbox.id==="toggleCampaign"){
	                        	console.log(checkbox.id);   
	                        	//calAvgGeneralManager = true;
	                        	if(document.getElementById("campaignFromMonthRange1").value!=="" && document.getElementById("campaignToMonthRange2").value!==""){
	                        		getCampaignBetweenMonthsRange1();
	                        	}
	                        	if(document.getElementById("campaignFromMonthRange2").value!=="" && document.getElementById("campaignToMonthRange2").value!==""){
	                        		getCampaignBetweenMonthsRange2();
	                        	}
	                        }
	                        else{
	                        	if(document.getElementById("gmdMockFromMonthRange1").value!=="" && document.getElementById("gmdMockToMonthRange1").value!==""){
	                        		getUsagdeDataBetweenMonthsRange1();
	                        	}
	                        	if(document.getElementById("gmdMockFromMonthRange2").value!=="" && document.getElementById("gmdMockToMonthRange2").value!==""){
	                        		getUsagdeDataBetweenMonthsRange2();
	                        	}
	                        }
	                    }
	                })

	            });
            }
            var previous_zoom = 0;
            const getMethods = (obj) => {
                let properties = new Set()
                let currentObj = obj
                do {
                    Object.getOwnPropertyNames(currentObj).map(item => properties.add(item))
                } while ((currentObj = Object.getPrototypeOf(currentObj)))
                return [...properties.keys()].filter(item => typeof obj[item] === 'function')
            }

            function openAddBookMark() {
               //alert("bookmark called!!");
                $('#bookmarkModal').modal({
                    backdrop: false,
                    show: true
                });

            }
            function closeBookmarkModal(){
            		 $('#bookmarkModal').modal('hide');
                $('#bookmarkModal').addClass('modal');
            }
            function addBookmarkData() {
                if ($('#bookMarkName').val().trim().length == 0) {
                    alert("Please enter a name for the new bookmark.");
                    return;
                }
                $.ajax({
                    type: "GET",
                    url: '/AddBookMarkData?zoomlvl=' + map.getZoom() + '&lat=' + map.getCenter().latitude + '&lon=' + map.getCenter().longitude + '&bmname=' + $('#bookMarkName').val() + '&user=' + 'Pallavi',
                    success: function (msg) {
                        if (msg == '"Success"') {
                            //   console.log(msg);
                            $('#bookMarkName').val("");
                            loadBookMarkData();
                            $('#bookmarkModal').modal('hide');
                            $('#bookmarkModal').addClass('modal');
                            alert("Bookmark Created Successfully");
                        }
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }
            function openDeleteBookMark() {
                $('#deletebookmarkModal').modal({
                    backdrop: false,
                    show: true
                });
            }
            function deleteBookmarkData() {
                var e = document.getElementById("bookMarkSelect");
                var value = e.value;

                $.ajax({
                    type: "GET",
                    url: '/DeleteBookMarkData?hash=' + value + '&user=' + 'Pallavi',
                    success: function (msg) {
                        if (msg == '"Success"') {
                            //       console.log(msg);
                            loadBookMarkData();
                            $('#deletebookmarkModal').modal('hide');
                            $('#deletebookmarkModal').addClass('modal');
                            alert("Bookmark Deleted Successfully")
                        }
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }
            function addBookmark() {
                openAddBookMark();
                // $('#popoverId').popover('hide');

            }
            function removeBookmark() {
                openDeleteBookMark();
                // console.log("remove Bookmark clicked");
            }
            function searchByPremiseId() {
                document.getElementById("searchParam").innerHTML = "PremId:";
                document.getElementById("seacrh").value = "PremId:";
            }
            $('#seacrh').keyup(function (e) {
                if (e.keyCode === 13) {
                    searchDataWithSearchBox();
                }
            });
            function searchByAddress() {
                document.getElementById("searchParam").innerHTML = "Add:";
                document.getElementById("seacrh").value = "Add:";
            }

            function searchByLatLong() {
                document.getElementById("searchParam").innerHTML = "Lat/Lon:";
                document.getElementById("seacrh").value = "Lat/Lon:";
                var value = document.getElementById("seacrh").value;

            }

            searchResDataarr = [];
            function searchDataWithSearchBox() {
             	//for unit tool
                isSearchClear = false;
                isSearchButtonBox=true;
                isCreateDetailsData=false;
                isUpdate=false;
                console.log("isUpdate :: "+isUpdate);
                isSearchList=false;


                searchResDataarr = [];
                isUpdate = false;
                var searchVal = document.getElementById("seacrh").value.trim();
                var param = document.getElementById("searchParam").innerHTML;
                if (searchVal != "" && searchVal.includes(":")) searchVal = searchVal.split(":")[1];
                if (searchVal != "" && searchVal.length > 3) {
                    layerArr[searchlayer["LayerName"]]['layer'].clear();
                    var arr = [];
                   // map.layers.clear();
                    $.ajax({
                        type: "GET",
                        url: '/SearchUsingSearchBox?param=' + param + '&value=' + searchVal.trim(),
                        success: function (msg) {
                            map.setView({
                                center: new Microsoft.Maps.Location(34.05307000392542, -117.6910560851873),
                                zoom: 13
                            });
                            if(msg.includes("Please Enter Correct Search Term!")){
                            	alert(msg);
                            }else{
                            searchRes = [];

                            var searcheddata = JSON.parse(JSON.stringify(msg));
                            console.log("**" + searcheddata);
                            var k = 1;
                          	jQuery.each(JSON.parse(searcheddata), function (i, val) {
                                var premise = val.premise;
                               searchRes.push(val);
                               //var meterData = val.meters;
                               // searchResDataarr.push(premise.premID);
                               // arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                               // arr.push('<td><div>' + k + '</div></td>');
                               // arr.push('<td><div>' + premise.premID + '</div></td>');
                               // arr.push('<td><div>' + premise.Customer + '</div></td>');
                               // arr.push('<td><div>' + formatNumber(parseFloat(premise.Consumption).toFixed(2)) + '</div></td>');
                               // arr.push('<td><div>' + formatNumber(parseFloat(premise.Allocation).toFixed(2)) + '</div></td>');
                               // arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2)) + '</div></td>');
                               // arr.push('<td><div>' + meterData.length + '</div></td>');
                               // arr.push('</tr>');
                                Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
                                    var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom.replace("LINESTRING", "MULTIPOLYGON"), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(102, 255, 51)", strokeThickness: 2 } });
                                    layerArr[searchlayer["LayerName"]]['layer'].add(polygonD);
                                });
                               
                                k++;
                            });
                             generateList(JSON.stringify(searchRes));
                         //   var table;
                          //  if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                          //      table = $('#dtBasicExample').DataTable();
                           //     table.clear().draw();
                          //      table.destroy();
                           // }
                             //   $("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", ", " ").replaceAll(">,<", "><"));
                             //   $("#pAllocationBtn").html("Total Records Found (" + (k - 1) + " Records)");
                               // if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                                    //table = $('#example').DataTable();
                               // }
                             //   else {
                                //    $('#dtBasicExample').DataTable({
                                   //     "paging": false,
                                     //   "info": false,
                                    //    "scrollY": '200px',
                                   //     "scrollCollapse": true,
                                 //       "searching": true
                                        //,
                                        //"columns":[null,null,{"width":"20%"},null,null,null,null,null]
                                   // });
                               // }
                            
                            
                            }
                        },
                        error: function (e) {
                            console.log(e.responseText)
                            closeSearchModal();
                        }
                    });
                } else {
                    alert("Please Enter Correct Search Term");
                }
            }
            // exporting data for csv and mail merge
            function exportToCSV() {
                document.getElementById('loaderWrapper').classList.remove("d-none");
                if (typeof searchRes != 'undefined' && searchRes.length != 0) {
                    $.ajax({
                        type: "POST",
                        url: '/ExportDataToCSV',
                        data: JSON.stringify(searchRes),
                        success: function (data) {
                            if (!data.includes("List Does Not Contains Data")) {
                                var fileName = "Usage.csv";
                                var blob = new Blob([data], { type: "application/octetstream" });
                                var isIE = false || !!document.documentMode;
                                if (isIE) {
                                    window.navigator.msSaveBlob(blob, fileName);
                                }
                                else {
                                    var url = window.URL || window.webkitURL;
                                    link = url.createObjectURL(blob);
                                    var a_down = $("<a />");
                                    a_down.attr("download", fileName);
                                    a_down.attr("href", link);
                                    $("body").append(a_down);
                                    a_down[0].click();
                                    a_down.remove();
                                }
                                document.getElementById('loaderWrapper').classList.add("d-none");
                                alert("CSV File Downloading In Progress, Please See the Default Download Folder");
                            } else {
                                $('#modalAlert').modal('show');
                                document.getElementById('loaderWrapper').classList.add("d-none");
                            }
                        },
                        error: function (e) {
                            console.log(e)
                            document.getElementById('loaderWrapper').classList.add("d-none");
                        }
                    });
                }
                else{
                	$('#modalAlert').modal('show');
                	document.getElementById('loaderWrapper').classList.add("d-none");

                }
                // console.log(searchRes);
            }

            function exportToMailMerge() {
             
                if (typeof searchRes != 'undefined' && searchRes.length != 0) {
                    document.getElementById('loaderWrapper').classList.remove("d-none");
                $.ajax({
                    type: "POST",
                    url: '/ExportDataForMailMerge',
                    data: JSON.stringify(searchRes),
                    success: function (data) {
                        //  console.log("called") ;
                        if (!data.includes("List Does Not Contains Data")) {
                            var fileName = "MailMerge.csv";
                            var blob = new Blob([data], { type: "application/octetstream" });
                            //Check the Browser type and download the File.
                            var isIE = false || !!document.documentMode;
                            if (isIE) {
                                window.navigator.msSaveBlob(blob, fileName);
                            }
                            else {
                                var url = window.URL || window.webkitURL;
                                link = url.createObjectURL(blob);
                                var a_down = $("<a />");
                                a_down.attr("download", fileName);
                                a_down.attr("href", link);
                                $("body").append(a_down);
                                a_down[0].click();
                                a_down.remove();
                            }
                            document.getElementById('loaderWrapper').classList.add("d-none");
                            alert("File For Mail Merge Downloading In Progress, Please See the Default Download Folder");
                        } else {
                            $('#modalAlert').modal('show');
                            document.getElementById('loaderWrapper').classList.add("d-none");
                        }
                    },
                    error: function (e) {
                        console.log(e)
                        document.getElementById('loaderWrapper').classList.add("d-none");
                    }
                });
                // console.log(searchRes);
                 }
                else{
                	$('#modalAlert').modal('show');
                }
            }


             var waterDistrictmyChart = new Chart("waterDistrictmyChart", {
                     type: "bar",
                     data: {
                       labels: [],
                       datasets: [],
                     },
                     options: {
             			tooltips: {
                        	callbacks: {
	                            label: function(tooltipItem) {
	                                return ""+formatNumber((tooltipItem.yLabel).toFixed(2))+"";
	                            }
                        	},
                    	},
                    	 scales: {
                            y: {
                            	grid:{
                            	  	drawTicks: false
                            	  },
                                 ticks: {
                                           beginAtZero: true,
                                           display: false,
                                           min:0,
                                           fontSize:5,
                                 },
                            },
                             x: {
                             	  grid:{
                            	  	display: false
                            	  },
                            	ticks: {
                                           beginAtZero: true,
                                           display: true,
                                           min:0,
                                          fontSize:10
                                 },
                            }

                           },
                        responsive: true,
                        layout: {
                            padding: {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0
                            }
                        },
                       plugins: {
					            legend: {
		                            display: false,
		                            labels: {
				                    	// This more specific font property overrides the global property
				                    	font: {
				                       	 	size: 10
				                   		}
              						}
		                        },
					        }
                      }
   });      



        function getSelectedOperator(selectedVal){
          console.log(selectedVal.id+":"+selectedVal.value);
          var query = "queryName";
          var inputId="value";
          var inputValTo="valueTo";
          var singledivId = "singleValueDiv";
          var betweeendiv = "betweenDiv"; 
          if(selectedVal.id.includes("-")){
          		   query = "queryName-"+selectedVal.id.split("-")[1];
                   inputId  = "value-"+selectedVal.id.split("-")[1];
                   inputValTo = "valueTo-"+selectedVal.id.split("-")[1];
                   singledivId = "singleValueDiv-"+selectedVal.id.split("-")[1];
                   betweeendiv = "betweenDiv-"+selectedVal.id.split("-")[1];
          }
          //console.log();
          if(selectedVal.value.includes("Between")){
            document.getElementById(singledivId).style.display = 'none';
            document.getElementById(inputId).value ="";
            document.getElementById(betweeendiv).style.display = 'block';
          }else{
            document.getElementById(singledivId).style.display = 'block';
            document.getElementById(inputId).value="";
            document.getElementById(inputValTo).value="";
            document.getElementById(betweeendiv).style.display = 'none';
          }
          if(selectedVal.value.includes("Is Empty") || selectedVal.value.includes("Is Null")){
                document.getElementById(inputId).disabled = true;
                document.getElementById(inputId).value="-";
          }else{
            document.getElementById(inputId).disabled = false;
          }
      }

      function minimizeListModule(){
           		//document.getElementById("list-table").style.display ="none";
           		var style =  window.getComputedStyle(document.getElementById("list-table"));
           		if(style.display == "none"){
           			  document.getElementById("list-table").style.display ="block";
           			  document.getElementById("minList").classList.add("fa-arrow-circle-down");
                      document.getElementById("minList").classList.remove("fa-arrow-circle-up");
                      $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
           		}else{
           			  document.getElementById("list-table").style.display ="none";
           			  document.getElementById("minList").classList.remove("fa-arrow-circle-down");
                      document.getElementById("minList").classList.add("fa-arrow-circle-up");
                      $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
           		}
           		setHeight();
           }

           function setHeight(){
           		var isFirefox = typeof InstallTrigger !== 'undefined';
                //console.log("isFirefox: "+isFirefox);
                //console.log($("#listmodal").offsetHeight);
                var height  = $('#listmodal').height();//$(".panel-list").height();//
                var heightnav = $("#headerNav").height();
                var listbtnheight = $("#listBtndiv").height();
                var listTableHeight = $("#list-table").height();
                if(layerArr[searchlayer["LayerName"]]['layer'].getPrimitives().length<=0 ){
                	height = height+80;
                }else{
               		 height = height+80;
                }
                //console.log(screen.height +":"+height+":"+heightnav+":"+listbtnheight+":");
                //console.log(layerArr[searchlayer["LayerName"]]['layer'].getPrimitives().length);
                var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);
                if(isFirefox){
                    //document.getElementById("detailsModal").style.height = (screen.height - (height+heightnav+50+listbtnheight+20))+"px";
                	document.getElementById("displayModal").style.height =  screen.height - (height+ listbtnheight+50+20)+"px";//(screen.height - (height+heightnav+50+listbtnheight+20))+"px"; // 50 added as margin bottom is added to the datatable
                	document.getElementById("displayModal").style.top = $("#headerNav").height();
                    document.getElementById("detailsdata").style.height =  screen.height - (height+listbtnheight+50+20)+"px";//(screen.height - (height+heightnav+50+listbtnheight+20))+"px";
                    document.getElementById("detailsdata").style.top = $("#headerNav").height();
                    document.getElementById("displayPanel").style.height =screen.height - (height+listbtnheight+50+20)+"px";//(screen.height- (height+heightnav+50+listbtnheight+20))+"px";
                    document.getElementById("displayPanel").style.top = $("#headerNav").height();
                 }
                else{
                	//document.getElementById("detailsModal").style.height = (screen.height - (height+heightnav+50+listbtnheight+20))+"px";
                    document.getElementById("displayModal").style.height =  screen.height - (height+listbtnheight+50+20)+"px";//(screen.height - (height+heightnav+50+listbtnheight+20))+"px"; // 50 added as margin bottom is added to the datatable
                	document.getElementById("displayModal").style.top = $("#headerNav").height();
                    document.getElementById("detailsdata").style.height =  screen.height - (height+listbtnheight+50+20)+"px";//(screen.height - (height+heightnav+50+listbtnheight+20))+"px";
                    document.getElementById("detailsdata").style.top = $("#headerNav").height();
                    document.getElementById("displayPanel").style.height =screen.height - (height+listbtnheight+50+20)+"px";//(screen.height- (height+heightnav+50+listbtnheight+20))+"px";
                    document.getElementById("displayPanel").style.top = $("#headerNav").height();
                }
           }
            function clearLayer(layerName) {
            	console.log(layerName)
                layerArr[layerName]['layer'].clear();

            }
          /* function clearList(){
				var table;
           		if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                            table = $('#dtBasicExample').DataTable();
                            table.clear().draw();
                        //table.destroy();
				
           		table =
           		  $('#dtBasicExample').DataTable({
                                "paging": false,
                                "info": false,
                                "scrollY": '200px',
                                "scrollCollapse": true,
                                "searching": true,
                                "ordering": true,
                //                "columns":[null,null,{"width":"20%"},null,null,null,null,null]
                            });
           		//table.clear().draw();
           		minimizeListModule();
               $("#pAllocationBtn").html("Total Records Found (0 Records)");
               clearLayer(searchlayer["LayerName"]);
               //clearLayer(clicklayer["LayerName"]);
               clearLayer(hoverlayer["LayerName"]);
               searchAssocitative = {};
               searchRes = [];
           		//map.layers.clear();
           		//loadMapData();
           }*/

            function clearList() {
            if(layerArr[searchlayer["LayerName"]]['layer'].getPrimitives().length>0){
                var table;
	            if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
	                    table = $('#dtBasicExample').DataTable();
	                    console.log(table);
	                    if (table.data().count() > 0) {
	                    console.log();
	                    table.clear().draw();
	                    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
	                    minimizeListModule();
	                    $("#pAllocationBtn").html("Total Records Found (0 Records)");
	                    clearLayer(searchlayer["LayerName"]);
	                    //clearLayer(clicklayer["LayerName"]);
	                    clearLayer(hoverlayer["LayerName"]);
	                    searchAssocitative = {};
	                    searchRes = [];
	                    //map.layers.clear();
	                    loadMapData();
	                   
		               }
		                //else {
		               //     alert("List does not contain data to clear.");
		              //  }
                   		table.destroy();
                }
                table = $('#dtBasicExample').DataTable({
                    "paging": false,
                    "info": false,
                    "scrollY": '200px',
                    "scrollX":true,
                    "scrollCollapse": true,
                    "searching": true,
                    "ordering":true,
                    //"columns":[null,null,{"width":"20%"},null,null,null,null,null]
               }     );
               		
               }else{
               		alert("List does not contain any data");
               }
               checkNewConfiguration();
                console.log(table.data().count());
            }
           function openCloseListModal(){
           			var style =  window.getComputedStyle(document.getElementById("listmodal"));
	           		if(style.display == "none"){
	           			  document.getElementById("listmodal").style.display ="block";
	           		}else{
	           			  document.getElementById("listmodal").style.display ="none";
	           		}

           }

           $("#searchForm").submit(function(e) {
			    e.preventDefault();
			});
        </script>
			<script language="javascript" type="text/javascript">
			      var sessionTimeoutWarning ="10";
			      var sessionTimeout = "60";
			      var timeOnPageLoad = new Date();

			      //For warning
			      setTimeout('SessionWarning()', parseInt(sessionTimeoutWarning) * 60 * 1000);
			      //To redirect to the welcome page
			     // setTimeout('deleteSessionVariables()',parseInt(sessionTimeout) * 60 * 1000);

			      //Session Warning
			     function SessionWarning() {
			          //minutes left for expiry
			          var minutesForExpiry =  (parseInt(sessionTimeout) -
			              parseInt(sessionTimeoutWarning));
			    //      var message = "Your session will expire in another " + minutesForExpiry +
			    //     " SECONDS! Please Save the data before the session expires";
			       // alert(message);
			          var currentTime = new Date();
			          //time for expiry
			          var timeForExpiry = timeOnPageLoad.setMinutes(timeOnPageLoad.getMinutes()
			              + parseInt(sessionTimeout));

			          //Current time is greater than the expiry time
			          if(Date.parse(currentTime) > timeForExpiry)
			          {
			              alert("Session expired. You will be redirected to login page");
			              window.location = "/logout";
			          }
			      }


			      //Session timeout
			      var IdealTimeOut = 10; //10 seconds
				  var idleSecondsTimer = null;
				  var idleSecondsCounter = 0;
				  document.onclick = function () { idleSecondsCounter = 0; };
				  document.onmousemove = function () { idleSecondsCounter = 0; };
				  document.onkeypress = function () { idleSecondsCounter = 0; };

			     function deleteSessionVariables(){
			          alert("Hello Pallavi! Session expired Due to inactivity. You will be redirected to login page in "+ (IdealTimeOut - idleSecondsCounter));
				      idleSecondsTimer = window.setInterval(CheckIdleTime, 1000);
			     }

			     function CheckIdleTime() {
		            idleSecondsCounter++;
		            //var oPanel = document.getElementById("timeOut");
		          //  if (oPanel) {
		              //  oPanel.innerHTML = (IdealTimeOut - idleSecondsCounter);

		          //  }
		          console.log(IdealTimeOut - idleSecondsCounter);
		            if (idleSecondsCounter >= IdealTimeOut) {
		                window.clearInterval(idleSecondsTimer);
		                logout();
		            }
		        }
			     function logout(){
			     	  window.location = "/logout";
			     }

				let inactivityTime = function () {
				 // alert("called")
				  let time;
				 // window.onload = resetTimer;
				  document.onmousemove = resetTimer;
				  document.onkeypress = resetTimer;
				  function resetTimer() {
					clearTimeout(time);
					time = setTimeout(deleteSessionVariables, 60*1000);
				  }
				};



			function getUsagdeDataBetweenMonths(){
           		var startdate = $("#fromMonth").val();
           		var enddate = $("#toMonth").val();
           		var cosumptionDistrict=[];
      			var allocDistrict=[]; 
           		if((startdate!==undefined && startdate!=="") && (enddate!== undefined && enddate !=="")){
           			if(new Date("01 "+ startdate) > new Date("01 "+ enddate)){
           				alert("From Date Should Be Less Than To Date, Please Select Proper Date Range");
           			}else{
           				  $.ajax({
                          type: "GET",
                          url: '/getConsumptionBetweenRange?start='+startdate+'&end='+enddate,
                          success: function (msg) {
	                         msg=JSON.parse(msg);
                             var monthWiseData = msg.MonthsWiseData;
                             var months=Object.keys(monthWiseData);
                             var percentAllocation = msg.PercentageAllocation;
                             //console.log();
                             for(let i=0;i<months.length;i++){
                                     console.log(months[i]);
                                     cosumptionDistrict.push(parseFloat(monthWiseData[months[i]][0]));
                                     allocDistrict.push(parseFloat(monthWiseData[months[i]][1]));
                             }  
                           //  Chart.defaults.global.defaultFontColor = 'grey';
                           //  Chart.defaults.global.defaultFontSize = 12;
                           //  Chart.defaults.global.defaultFontWeight = 'bold';       
                                
                             var barchart = {
                                  labels: months,
                                  datasets: [
                                         {
                                            backgroundColor:"blue",
                                            borderColor: "blue",
                                            borderWidth: 1,
                                            data: allocDistrict,
                                            spanGaps: false
                                        },
                                        {
                                            backgroundColor: "green",
                                            borderColor: "green",
                                            borderWidth: 1,
                                            data: cosumptionDistrict,
                                            spanGaps: false
                                        }
                                  ]
                            };
                            //modalChart
                            historicUsageGeneralManager.data.labels = months;
                            historicUsageGeneralManager.update();
                            historicUsageGeneralManager.data.datasets = barchart.datasets;
                            historicUsageGeneralManager.update();
                            console.log(parseFloat(Object.values(percentAllocation)[0]))
                            GagueGM.refresh(parseFloat(Object.values(percentAllocation)[0]));
                        },
                        error: function (e) {
                                  console.log(e)
                        }
                		});
           			}
           		}
           }


            function drawChart() {
						// Define the chart to be drawn.
						var data = new google.visualization.arrayToDataTable(chartArr);
						console.log(data);
						var options = {
							legend: {position:'bottom'},
							width:200,
							height:180,
							chartArea:{width:"100%",height:"70%",top:0,bottom:30},
							vAxis: {
								textPosition: 'none',
								gridlines: {count:4},
							},
							hAxis : { 
								gridlines: {count:4},
								margin:0,
								textStyle : {
						            fontSize:7, // or the number you want
						            bold: true
						        },
							},
							tooltip:{
								textStyle:{
									color:'black'
								},
							},
							bar:{groupWidth:"90%",gap:"0%"},
							colors: ['rgb(47,105,153)','rgb(137,168,99)']						
						}; 

						// Instantiate and draw the chart.
						var chart = new google.visualization.ColumnChart(document.getElementById('container'));
						chart.draw(data, options);
					 }

					 function drawChartDistrictUsage() {
						// Define the chart to be drawn.
						var data = new google.visualization.arrayToDataTable(districtUsageChart);
						console.log(data);
						var view = new google.visualization.DataView(data);
      					view.setColumns([0, 1,
	                       { calc: "stringify",
	                         sourceColumn: 1,
	                         color:"black",
	                         type: "string",
	                         role: "annotation" },
	                         2]);
						var options = {
							legend: {position:'none'},
							width:200,
							height:180,
							chartArea:{width:"100%",height:"100%",top:0,bottom:20},
							vAxis: {
								textPosition: 'none',
								minVal: 0,
								gridlines: {count:2},
								viewWindowMode: 'explicit',
							      viewWindow: {
							        //max: 8000,
							        min: 0,
							      },
							},
							hAxis : { 
								gridlines: {count:2},
								textStyle : {
						            fontSize:9, // or the number you want
						            bold: true
						        },
							},
							tooltip:{
								textStyle:{
									color:'black'
								},
							},
							bar:{groupWidth:"100%", gap:"10%"},
							colors: ['rgb(137,168,99)','rgb(47,105,153)']						
						}; 

						// Instantiate and draw the chart.
						var chart = new google.visualization.ColumnChart(document.getElementById('waterDistrictUsage'));
						chart.draw(view, options);
					 }


					  function drawServiceAreaChart() {
						// Define the chart to be drawn.
						//console.log(dimEfficiencyTiers);
						var newData =[];
						for(let i=1;i<dimEfficiencyTiers.length;i++){
							newData.push(dimEfficiencyTiers[i][1]);
						}
						newData = newData.sort(function(a, b){return b-a});
						//console.log(newData[0]);
						var data = new google.visualization.arrayToDataTable(dimEfficiencyTiers);
		                var options = {
		                	width:240,
		                	height:180,
		                	bars: 'horizontal',
		                    legend: {position:'none'},
			                vAxis: {
			                	textPosition: 'top',
			                	gridlines:{count:10},
			                	textStyle : {
						            fontSize:9, 
						            bold: true
						        },

				                }, 
			                hAxis: {
			                	textStyle : {
						            fontSize:9, 
						            bold: true
						        },
						       viewWindowMode:'explicit',
							   ticks: [0, 25, (newData[0] | 0) + 5 ] 
			                }, 
			                chartArea:{
			                	left:"30%",
			                	right:"10%",
			                	width:"100%",
			                	height:"80%",
			                	top:"10px",
			                },
			                bar:{groupWidth:"90%"},
		                }; 
						
						//console.log(data);


						// Instantiate and draw the chart.
						var chart = new google.visualization.BarChart(document.getElementById('serviceAreaUsageGoogle'));
						chart.draw(data, options);
						//google.visualization.events.addListener(chart, 'ready', function () {
						//var labels = container.getElementsByTagName('text');
						//Array.prototype.forEach.call(labels, function(label) {
						  // move axis labels
						//  if (label.getAttribute('text-anchor') === 'end') {
						//	var xCoord = parseFloat(label.getAttribute('x'));
						//	label.setAttribute('x', xCoord - 20);
						//  }
						//});
					 // });

						google.visualization.events.addListener(chart, 'select', selectHandler);

						function selectHandler(e) {
							layerArr[searchlayer["LayerName"]]['layer'].clear();
							var selection = chart.getSelection();
							if (selection.length > 0) {
							  var colLabel = data.getColumnLabel(selection[0].column);
							  var mydata = data.getValue(selection[0].row,0);
							 // console.log(colLabel + ': ' + mydata);
							  chart.setSelection([]);
							  closeDashboardModal();
							   $.ajax({
								             type: "GET",
								             url: '/getPercentageData?range='+mydata,
								             success: function (msg) {
                            							document.getElementById('loaderWrapper').classList.add("d-none");
                            							//alert(mydata+": msg:"+ msg);
														searchRes=[];
														arr=[];
														centroidArray=[];
														//map.layers.clear();
													    //map.entities.clear();
														msg = JSON.parse(msg);
														if(JSON.stringify(msg).includes("premise")){
														var k=1;
														jQuery.each(msg, function(i, val) {
															  searchRes.push(val);
															 // console.log(i);
															  var premise = val.premise;
															  var meterData = val.meters;
                                                            //arr.push("<tr onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                                            //  arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
															//  arr.push('<td><div>'+k+'</div></td>');
															//  arr.push('<td><div>'+premise.premID+'</div></td>');
															//  arr.push('<td><div>'+premise.Customer+'</div></td>');
															  //arr.push('<td><div>'+formatNumber(parseFloat(premise.CorrArea).toFixed(2))+'</div></td>');
															//  arr.push('<td><div>'+formatNumber(parseFloat(premise.Consumption).toFixed(2))+'</div></td>');
															//  arr.push('<td><div>'+formatNumber(parseFloat(premise.Allocation).toFixed(2))+'</div></td>');
                                                           //   arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2))+'</div></td>');
															 // arr.push('<td><div>'+meterData.length+'</div></td>');
															//  arr.push('</tr>');
															  //console.log(arr);
															  //plotting premise boundaries on map
															   Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function  () {
																	polygon = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",","), { polygonOptions: { fillColor:"rgba(255,255,255,0)",strokeColor: "blue", strokeThickness: 3 } });
																	Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function  () {
																		var centroid =   Microsoft.Maps.SpatialMath.Geometry.centroid(Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",",")));
																		centroidArray.push(new Microsoft.Maps.Location(centroid.latitude, centroid.longitude));
																		if(centroidArray.length == Object.keys(msg).length){
																				centroidArray.push(centroidArray[0]);
																				var envelop = new Microsoft.Maps.Polygon(centroidArray);
																				var rect = Microsoft.Maps.SpatialMath.Geometry.bounds(centroidArray);
																			   // console.log(rect);
																				map.setView({ bounds: rect});
																		}
																	});
																	//var layers = new Microsoft.Maps.Layer();
																	//layers.add(polygon, i);
																	//map.layers.insert(layers);   
																	layerArr[searchlayer["LayerName"]]['layer'].add(polygon);
															   });
															   
															   k++;
														}); 
														generateList(JSON.stringify(searchRes));
														//var table;
														//if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
														//	table = $('#dtBasicExample').DataTable();
														//	table.destroy();
														//}
														//console.log(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
														//$("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
														//$("#pAllocationBtn").html("Total Records Found ("+(k-1)+" Records)");
														//$('#dtBasicExample').DataTable({
																	//"paging":   false,
																	//"info":     false,
																	//"scrollY": '200px',
																	//"scrollCollapse": true,
																	//"searching": true,
																	//"columns":[null,null,{"width":"20%"},null,null,null,null,null]
															//});
														
														}
														else{
																if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
																	table = $('#dtBasicExample').DataTable();
																	table.destroy();
																}
																$("#pAllocationBtn").html("Total Records Found (0 Records)");
																$("#dtBasicExample").find("tbody").html("<tr><td colspan='8'>No data available in table</td></tr>");
																$("#dtBasicExample").find("tbody").find("td").css("verticle-align","middle");
																 $("#dtBasicExample").find("tbody").find("td").css("padding-botom","0");
														}
								            },
								            error: function (e) {
														document.getElementById('loaderWrapper').classList.add("d-none");								 
               											console.log(e) 
								            }
							  });
							}
						}
					 }



					  


            function loadMonthConsumptionData(selectedVal){
            	  console.log("consumption data"+selectedVal);
            	  chartArr = [];
            	 // var cosumptionDistrict=[];
			      //var districtData=[]; 
			      console.log(selectedVal);
          		  $.ajax({
		                    type: "GET",
		                    url: '/getConsumptionDataMonths?totalmonths='+selectedVal,
		                    success: function (msg) {
		                             msg=JSON.parse(msg);
		                             var monthWiseData = msg.MonthsWiseData;
		                             chartArr.push(["Month","Allocation","Consumption"]);
		                             var months=Object.keys(monthWiseData);
		                             for(let i=0;i<months.length;i++){
		                                     console.log(months[i]);
		                                     if(document.getElementById("unit").value === "CCF"){
												 chartArr.push([months[i].replace(/\d+/g, ""),parseFloat(districtJsonData[months[i]][1]),parseFloat(districtJsonData[months[i]][0])]);
											 }
											 else if(document.getElementById("unit").value === "Gallons"){
												 chartArr.push([months[i].replace(/\d+/g, ""),parseFloat(districtJsonData[months[i]][1]*7.48),parseFloat(districtJsonData[months[i]][0]*7.48)]);
											 }
											 else{
												 chartArr.push([months[i].replace(/\d+/g, ""),parseFloat(districtJsonData[months[i]][1]*0.0023),parseFloat(districtJsonData[months[i]][0]*0.0023)]);
											 }
		                                    // chartArr.push([months[i].replace(/\d+/g, ""),parseFloat(districtJsonData[months[i]][1]),parseFloat(districtJsonData[months[i]][0])]);
		                             }  
		                          	if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
									  		console.log("google chart is loaded");
									       // google.charts.setOnLoadCallback(drawChart);
							 				google.charts.setOnLoadCallback(drawChart);
									}
		                    },
		                        
		                      error: function (e) {
		                              console.log(e) 
		                        }
                		});
            }
                function getWaterDistrictGoogleCharts1(selectedVal) {
                    //    console.log(selectedVal.value);
                    //     console.log(districtJsonData);
                    document.getElementById("unit").value = "CCF";
                    districtUsageChart = [];
                    var months = Object.keys(districtJsonData);
                    for (i = 0; i < months.length; i++) {

                        if (selectedVal.value === months[i]) {
                            if (selectedVal.value === "CCF") {
                                var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                                g3.refresh(perVal);
                                districtUsageChart.push(["Current Allocation", parseFloat(districtJsonData[months[i]][1]), "rgb(47,105,153)"])
                                districtUsageChart.push(["Current Usage", parseFloat(districtJsonData[months[i]][0]), "rgb(137,168,99)"])

                            }
                            else if (selectedVal.value === "Gallons") {
                                var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                                g3.refresh(perVal);
                                districtUsageChart.push(["Current Allocation", parseFloat(districtJsonData[months[i]][1] * 7.48), "rgb(47,105,153)"])
                                districtUsageChart.push(["Current Usage", parseFloat(districtJsonData[months[i]][0] * 7.48), "rgb(137,168,99)"])

                            } else {
                                var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                                g3.refresh(perVal);
                                yValues = [parseFloat(districtJsonData[months[i]][1] * 0.0023), parseFloat(districtJsonData[months[i]][0] * 0.0023)];
                                districtUsageChart.push(["Current Allocation", parseFloat(districtJsonData[months[i]][1] * 0.0023), "rgb(47,105,153)"])
                                districtUsageChart.push(["Current Usage", parseFloat(districtJsonData[months[i]][0] * 0.0023), "rgb(137,168,99)"])
                            }
                        }
                    }
                    if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                        console.log("google chart is loaded" + document.getElementById("months").value);
                        //  google.charts.setOnLoadCallback(drawChart);
                        loadMonthConsumptionData(document.getElementById("months").value);
                        google.charts.setOnLoadCallback(drawChartDistrictUsage);
                    }



                    /*var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
                    g3.refresh(perVal);
                    districtUsageChart.push(["Type","Usage",{role:'style'}]);
                    districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]),"rgb(47,105,153)"])
                    districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]),"rgb(137,168,99)"]);
                    //g3.update();
                    //console.log(districtJsonData[months[i]]);
                    //console.log(parseFloat(districtJsonData[months[i]][0]));
                    //var xValues = ["Current Allocation", "Current Usage"];
                    //var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
                    //var barColors = ["blue", "green"];
                    if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                                console.log("google chart is loaded");
                          //  google.charts.setOnLoadCallback(drawChart);
                                google.charts.setOnLoadCallback(drawChartDistrictUsage);
                    }*/
                    // loadPercentUsageData(); 
               
            }

             function getWaterDistrictGoogleCharts(selectedVal) {
			                //    console.log(selectedVal.value);
			                //     console.log(districtJsonData);
			                document.getElementById("unit").value = "CCF";
			                districtUsageChart=[];
			                var months = Object.keys(districtJsonData);
			                for (i = 0; i < months.length; i++) {
			                    if (selectedVal.value === months[i]) {
			                        var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
			                        g3.refresh(perVal);
			                        districtUsageChart.push(["Type","Usage",{role:'style'}]);
			                        districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]),"rgb(47,105,153)"])
									districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]),"rgb(137,168,99)"]);
			                        //g3.update();
			                        //console.log(districtJsonData[months[i]]);
			                        //console.log(parseFloat(districtJsonData[months[i]][0]));
			                        //var xValues = ["Current Allocation", "Current Usage"];
			                        //var yValues = [parseFloat(districtJsonData[months[i]][1]), parseFloat(districtJsonData[months[i]][0])];
			                        //var barColors = ["blue", "green"];
			                    	if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
									  		console.log("google chart is loaded");
									      //  google.charts.setOnLoadCallback(drawChart);
							 				google.charts.setOnLoadCallback(drawChartDistrictUsage);
									}
					                loadPercentUsageData(); 
			                    }
                }
            }


            function unitConverstion(selectedVal){
            	console.log("from old unint conversion"+selectedVal.value);
            	var months = Object.keys(districtJsonData);
            	var selectedValue = selectedVal.value.replace("Details","");
            	var selectedMonth = document.getElementById("standDashmonth").value;
            	districtUsageChart=[];
            	chartArr = [];
            	districtUsageChart.push(["Type","Usage",{role:'style'}]);
            	chartArr.push(["Month","Allocation","Consumption"]);
            	for (i = 0; i < months.length; i++) {
            		if(months[i]==selectedMonth){
							if(selectedValue === "CCF"){
							   		var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
	                        		g3.refresh(perVal);
				                    districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]),"rgb(47,105,153)"])
									districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]),"rgb(137,168,99)"])
							  
							}
							else if(selectedValue === "Gallons"){
							   		var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
	                        		g3.refresh(perVal);
	                        		districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]*7.48),"rgb(47,105,153)"])
									districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]*7.48),"rgb(137,168,99)"]) 
							   
							}else{
								   	var perVal = (parseFloat(districtJsonData[months[i]][0]) / parseFloat(districtJsonData[months[i]][1]) * 100);
		                        	g3.refresh(perVal);
		                        	yValues = [parseFloat(districtJsonData[months[i]][1]* 0.0023), parseFloat(districtJsonData[months[i]][0]* 0.0023)];
	                        		districtUsageChart.push(["Current Allocation",parseFloat(districtJsonData[months[i]][1]* 0.0023),"rgb(47,105,153)"])
									districtUsageChart.push(["Current Usage",parseFloat(districtJsonData[months[i]][0]* 0.0023),"rgb(137,168,99)"]) 
							}
						}
					}
					if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
							console.log("google chart is loaded"+document.getElementById("months").value);
							//  google.charts.setOnLoadCallback(drawChart);
							loadMonthConsumptionData(document.getElementById("months").value);
							google.charts.setOnLoadCallback(drawChartDistrictUsage);
					}
            }



            function openMockManagersDashboardModal() {
                closeDashboardModal();
                unitConverstionDeatils2(document.getElementById("unit2"));    
                $('#generalDashboardModalMock').modal('show');
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#generalDashboardModalMock").css({ 'z-index': 99999,'position': "fixed","left":"30%"}); 
                $("#generalDashboardModalMock").removeClass("modal");
                console.log(startmonth+":"+endmonth);
                $("#gmdMockFromMonthRange1").val(startmonth);
           		$("#gmdMockToMonthRange1").val(endmonth);
           		 $("#gmdMockFromMonthRange2").val(startmonth);
           		$("#gmdMockToMonthRange2").val(endmonth);
                getUsagdeDataBetweenMonthsRange1();
				getUsagdeDataBetweenMonthsRange2();
            }

            function closeMockGeneralDashboardModal() {
                $('#generalDashboardModalMock').modal('hide');
                $('#generalDashboardModalMock').addClass('modal');
            }
			
			
			//dummyAreaChart
			function drawAreaChartRange1() {
				//var data = google.visualization.arrayToDataTable([
				 // ['Year', 'Sales', 'Expenses'],
				//  ['2013',  1000,      400],
				 // ['2014',  1170,      460],
				//  ['2015',  660,       1120],
				//  ['2016',  1030,      540]
				//]);
				console.log(range1UsageData.length);
			
				var data;
				if(range1UsageData.length>0)
					data=google.visualization.arrayToDataTable(range1UsageData);
				else
					data = google.visualization.arrayToDataTable([
								  ['', { role: 'annotation' }],
								  ['', '']
							  ]);
				var options = {
				  height:180,
				  width:500,
				  legend:{position:'top'},
				  hAxis: {titleTextStyle: {color: '#333'}},
				  vAxis: {minValue: 0},
				  chartArea:{
				  	left:'15%',
			        width:'80%',
			        height:'70%',
			        top:40,
				  },
				  areaOpacity:0.6,
				  colors: ['rgb(137,168,99)','rgb(47,105,153)']	
				};

				var chart = new google.visualization.AreaChart(document.getElementById('dateRange1'));
				chart.draw(data, options);
			}

			//dummyAreaChart
			function drawAreaChartRange2() {
				//var data = google.visualization.arrayToDataTable([
				//  ['Year', 'Sales', 'Expenses'],
				//  ['2013',  1000,      400],
				//  ['2014',  1170,      460],
				//  ['2015',  660,       1120],
				//  ['2016',  1030,      540]
				//]);

				//console.log(range2UsageData);
				var data;
				if(range2UsageData.length>0)
					data=google.visualization.arrayToDataTable(range2UsageData);
				else
					data = google.visualization.arrayToDataTable([
								  ['', { role: 'annotation' }],
								  ['', '']
							  ]);
			//	console.log(data);
				var options = {
				  height:180,
				  width:500,
				  legend:{position:'top'},
				  hAxis: {titleTextStyle: {color: '#333'}},
				  vAxis: {minValue: 0},
				  chartArea:{
				  	left:'15%',
			        width:'80%',
			        height:'70%',
			        top:40,
				  },
				  areaOpacity:0.6,
				  colors: ['rgb(137,168,99)','rgb(47,105,153)']	
				};

				var chart = new google.visualization.AreaChart(document.getElementById('dateRange2'));
				chart.draw(data, options);
			}


			function getUsagdeDataBetweenMonthsRange2(){
                var startdate = $("#gmdMockFromMonthRange2").val();
                var enddate = $("#gmdMockToMonthRange2").val();
                
                if((startdate!==undefined && startdate!=="") && (enddate!== undefined && enddate !=="")){
                    if(new Date("01 "+ startdate) > new Date("01 "+ enddate)){
                        alert("From Date Should Be Less Than To Date, Please Select Proper Date Range");
                    }else{
                          $.ajax({
                          type: "GET",
                          url: '/getConsumptionBetweenRange?start='+startdate+'&end='+enddate,
                          success: function (msg) {
                             msg=JSON.parse(msg);
                             var monthWiseData = msg.MonthsWiseData;
                             var months=Object.keys(monthWiseData);
                             var percentAllocation = msg.PercentageAllocation;
                            // console.log(monthWiseData);
                             range2UsageData =[];
                             range2UsageData.push(["Month","Allocation","Current Usage"]);
                              var consumptionTotal = 0.0;
                             var allocationTotal = 0.0;
                             var percentageTotal = 0.0;
                             var consumptionAvg = 0.0;
                             var allocationAvg = 0.0;
                             var percentageAvg = 0.0;
                             var cal1, cal2;
                             var unit=document.getElementById("unit2").value;

                             range1UsageData.push(["Month","Allocation","Current Usage"]);
                             for(let i=0;i<months.length;i++){
                               // console.log(months[i]+": "+parseFloat(monthWiseData[months[i]][0])+" : "+parseFloat(monthWiseData[months[i]][1]));
                                consumptionTotal = +(parseFloat(consumptionTotal) + +parseFloat(monthWiseData[months[i]][0]).toFixed(2));
                               // console.log(parseFloat(consumptionTotal));
                                allocationTotal = +(parseFloat(allocationTotal) + +parseFloat(monthWiseData[months[i]][1]).toFixed(2));
                                //console.log(parseFloat(allocationTotal));
                                cal1=parseFloat(monthWiseData[months[i]][1]);
                                cal2=parseFloat(monthWiseData[months[i]][0]);
                    
                                
                                var resultUnitCal = unitCalculation(unit ,cal1, cal2);
                                range2UsageData.push([months[i],parseFloat(resultUnitCal.cal1),parseFloat(resultUnitCal.cal2)])
                             }
                
                             consumptionAvg = consumptionTotal / months.length;
                             allocationAvg = allocationTotal / months.length;
                             percentageAvg = consumptionAvg / allocationAvg * 100; 
                             percentageTotal =  consumptionTotal / allocationTotal * 100;
                             //console.log(consumptionTotal+" : "+allocationTotal+" : "+percentageTotal);
                             // Modify the values in the datasets array
                             consumptionAvg = consumptionTotal/ months.length;
                             allocationAvg = allocationTotal / months.length;
                             percentageAvg = consumptionAvg / allocationAvg * 100; 
                             percentageTotal =  consumptionTotal / allocationTotal * 100;
                            // console.log(consumptionTotal+" : "+allocationTotal+" : "+percentageTotal);
                            // console.log(consumptionAvg+" : "+allocationAvg+" : "+allocationAvg);
                             var cal1 = parseFloat(consumptionTotal);
                             var cal2 = parseFloat(allocationTotal);
                
                             var resultUnitCal = unitCalculation(unit ,cal1, cal2);

                              if (unit === "GallonsDetails") {
                                  consumptionAvg=(consumptionAvg * 748.051948);
                                  allocationAvg=(allocationAvg * 748.051948);
                              } else if (unit === "Acre-FeetDetails") {
                                  consumptionAvg=(consumptionAvg * 0.0022956841);
                                  allocationAvg=(allocationAvg * 0.0022956841);
                              } else {
                                  consumptionAvg=(consumptionAvg);
                                  allocationAvg=(allocationAvg);
                              }
                         
                           //  console.log(consumptionAvg+" : "+allocationAvg+" : "+allocationAvg);
                              if(!document.getElementById("toggleGM").checked){
                                document.getElementById("usageRange1").innerHTML = "Total Usage";
                                 document.getElementById("allocationRange1").innerHTML = "Total Allocation";
                                 document.getElementById("allocationPerRange1").innerHTML = "Total %";
                                 document.getElementById("usageValRange2").innerHTML = formatNumber(resultUnitCal.cal1);
                                 document.getElementById("allocationValRange2").innerHTML = formatNumber(resultUnitCal.cal2);
                                 document.getElementById("allocationPerValRange2").innerHTML = percentageTotal.toFixed(2);
                             }else{
                                 document.getElementById("usageRange2").innerHTML = "Average Usage";
                                 document.getElementById("allocationRange2").innerHTML = "Average Allocation";
                                 document.getElementById("allocationPerRange2").innerHTML = "Average %";
                                 document.getElementById("usageValRange2").innerHTML = formatNumber(consumptionAvg.toFixed(2));
                                 document.getElementById("allocationValRange2").innerHTML = formatNumber(allocationAvg.toFixed(2));
                                 document.getElementById("allocationPerValRange2").innerHTML = percentageAvg.toFixed(2);
                             }
                              if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                                    console.log("google chart is loaded"+document.getElementById("months").value);
                                    //  google.charts.setOnLoadCallback(drawChart);
                                    //loadMonthConsumptionData(document.getElementById("months").value);
                                    google.charts.setOnLoadCallback(drawAreaChartRange2);
                              }  
                            
                        },
                        error: function (e) {
                                  console.log(e)
                        }
                        });
                    }
                }
           }


            function getUsagdeDataBetweenMonthsRange1(){
                var startdate = $("#gmdMockFromMonthRange1").val();
                var enddate = $("#gmdMockToMonthRange1").val();
                if((startdate!==undefined && startdate!=="") && (enddate!== undefined && enddate !=="")){
                    if(new Date("01 "+ startdate) > new Date("01 "+ enddate)){
                        alert("From Date Should Be Less Than To Date, Please Select Proper Date Range");
                    }else{
                          $.ajax({
                          type: "GET",
                          url: '/getConsumptionBetweenRange?start='+startdate+'&end='+enddate,
                          success: function (msg) {
                             msg=JSON.parse(msg);
                             range1UsageData =[];
                             var avgValues = [];
                             var totalValues =[];
                             var monthWiseData = msg.MonthsWiseData;
                             var months=Object.keys(monthWiseData);
                             var percentAllocation = msg.PercentageAllocation;
                            // console.log(monthWiseData);
                             var consumptionTotal = 0.0;
                             var allocationTotal = 0.0;
                             var percentageTotal = 0.0;
                             var consumptionAvg = 0.0;
                             var allocationAvg = 0.0;
                             var percentageAvg = 0.0;
                             var unit=document.getElementById("unit2").value;
                             range1UsageData.push(["Month","Allocation","Current Usage"]);
                             var cal1;
                             var cal2;
                             for(let i=0;i<months.length;i++){
                               // console.log(months[i]+": "+parseFloat(monthWiseData[months[i]][0])+" : "+parseFloat(monthWiseData[months[i]][1]));
                                consumptionTotal = +(parseFloat(consumptionTotal) + +parseFloat(monthWiseData[months[i]][0]).toFixed(2));
                               // console.log(parseFloat(consumptionTotal));
                                allocationTotal = +(parseFloat(allocationTotal) + +parseFloat(monthWiseData[months[i]][1]).toFixed(2));
                              //  console.log(parseFloat(allocationTotal));
                                cal1=parseFloat(monthWiseData[months[i]][1]);
                                cal2=parseFloat(monthWiseData[months[i]][0]);
                                var resultUnitCal = unitCalculation(unit ,cal1, cal2);
                                range1UsageData.push([months[i],parseFloat(resultUnitCal.cal1),parseFloat(resultUnitCal.cal2)])
                             }  
                            // console.log(months.length);
                             consumptionAvg = consumptionTotal/ months.length;
                             allocationAvg = allocationTotal / months.length;
                             percentageAvg = consumptionAvg / allocationAvg * 100; 
                             percentageTotal =  consumptionTotal / allocationTotal * 100;
                            // console.log(consumptionTotal+" : "+allocationTotal+" : "+percentageTotal);
                            // console.log(consumptionAvg+" : "+allocationAvg+" : "+allocationAvg);
                
                             cal1 = parseFloat(consumptionTotal);
                             cal2 = parseFloat(allocationTotal);
                             var resultUnitCal = unitCalculation(unit ,cal1, cal2);
                
                              if (unit === "GallonsDetails") {
                                  consumptionAvg=(consumptionAvg * 748.051948);
                                  allocationAvg=(allocationAvg * 748.051948);
                              } else if (unit === "Acre-FeetDetails") {
                                  consumptionAvg=(consumptionAvg * 0.0022956841);
                                  allocationAvg=(allocationAvg * 0.0022956841);
                              } else {
                                  consumptionAvg=(consumptionAvg);
                                  allocationAvg=(allocationAvg);
                              }
                         
                             if(!document.getElementById("toggleGM").checked){
                                 document.getElementById("usageRange2").innerHTML = "Total Usage";
                                 document.getElementById("allocationRange2").innerHTML = "Total Allocation";
                                 document.getElementById("allocationPerRange2").innerHTML = "Total %";
                                 document.getElementById("usageValRange1").innerHTML = formatNumber(resultUnitCal.cal1);
                                 document.getElementById("allocationValRange1").innerHTML = formatNumber(resultUnitCal.cal2);
                                 document.getElementById("allocationPerValRange1").innerHTML = percentageTotal.toFixed(2);
                             }else{
                                 document.getElementById("usageRange1").innerHTML = "Average Usage";
                                 document.getElementById("allocationRange1").innerHTML = "Average Allocation";
                                 document.getElementById("allocationPerRange1").innerHTML = "Average %";
                                 document.getElementById("usageValRange1").innerHTML = formatNumber(consumptionAvg.toFixed(2));
                                 document.getElementById("allocationValRange1").innerHTML = formatNumber(allocationAvg.toFixed(2));
                                 document.getElementById("allocationPerValRange1").innerHTML = percentageAvg.toFixed(2);
                             }
                             if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                                    console.log("google chart is loaded"+document.getElementById("months").value);
                                    //  google.charts.setOnLoadCallback(drawChart);
                                    //loadMonthConsumptionData(document.getElementById("months").value);
                                    google.charts.setOnLoadCallback(drawAreaChartRange1);
                             }  
                            
                        },
                        error: function (e) {
                                  console.log(e)
                        }
                        });
                    }
                }
           }


          function openAddressLabelModal() {
       			$('#addressLabelModalComponent').modal('show');
       		 	$("#addressLabelModalComponent").show();
         		$('.modal-dialog').draggable({
        		     handle: ".modal-header"
        		 });
        		 $('.modal-content').resizable({
            		 minHeight: 300,
            		 minWidth: 300
         		});
         console.log("minWidth: 300");
         $("#addressLabelModalComponent").css({ 'z-index': 9999 });
         $("#addressLabelModalComponent").removeClass("modal");

     } 
         
			function closeAddressLabelModal(){
			    $('#addressLabelModalComponent').modal('hide');
			    $('#addressLabelModalComponent').addClass('modal');
			}

			function exportToAddressLables(){
				  closeAddressLabelModal();
				  var dropdown = document.getElementById("addressLabelsDropdown");
	              // Get the selected value
	              var selectedValue = dropdown.value;
	              // Log the selected value to the console
               	  console.log("dropdown :: "+selectedValue);
                  if (typeof searchRes != 'undefined' && searchRes.length != 0) {
                  document.getElementById('loaderWrapper').classList.remove("d-none");
                  console.log(JSON.stringify(searchRes));
                  var jsonData = '{"addressFormat":"'+ selectedValue +'","data":'+JSON.stringify(searchRes)+'}';
                   $.ajax({
                    type: "POST",
                    url: '/GenerateAddressLabelsDoc',
                	cache: false,
                    data: jsonData,
		            success: function (response) {
		            	console.log("response: "+response);
                        var a = document.createElement('A');
						a.href = response;
						a.download = response.substr(response.lastIndexOf('/')+16);
						document.body.appendChild(a);
						a.click();
						document.body.removeChild(a);
				  		document.getElementById('loaderWrapper').classList.add("d-none");

                   	},
                    error: function (e) {
                      console.log(e)
                      document.getElementById('loaderWrapper').classList.add("d-none");
                    }
                  });
                 }else{
                 	$('#modalAlert').modal('show');
                 }
			}
            </script> 

            <script>
            	var isUpdate=false;          
            	   var unitMeasure="";
			     var ccfConsValues="";
			     var ccfAlloValues="";
			     var isSearchButtonBox=false;           
			     var isSearchClear = false;
			     var isFirstsearchData;           
			     var isSearchList=false;
			     var displayOnMapHashKey;
			     var isCreateDetailsData=false;  
            	var etoValuesData,peffValuesData;     

            	            
               //new scripts
            	function generateList(searchRes){
            	   console.log("from generate list: "+JSON.parse(searchRes))
            	   if(JSON.parse(searchRes).length >= 1){
            	   var arr = [];
            	   var k=0;
                   //for unit tool
                   var unit=document.getElementById("unit2").value
            	   jQuery.each(JSON.parse(searchRes), function (i, val) {
            	   		    //val = JSON.parse(JSON.stringify(val));
            	   		   // console.log(displayFields)
            	   		    var premise = val.premise;
            	   		    var metersData = val.meters;
            	   		    k = i+1;
            	   		    var rowidData = "tr_" + k;
            	   		    searchAssocitative[premise.premID] = { rowidData };
	            			if(!newConfigAvail){
                                console.log("unit here :: "+unit);
                                var cal1 = parseFloat(premise.Consumption);
                                var cal2 = parseFloat(premise.Allocation);
                                var resultUnitCal = unitCalculation(unit ,cal1, cal2);
                                console.log(resultUnitCal);
			                   	arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                arr.push('<td><div>' + k + '</div></td>');
                                arr.push('<td><div>' + premise.premID + '</div></td>');
                                arr.push('<td><div>' + premise.Customer + '</div></td>');
                                //      console.log(values[values.length-1]);
                                //arr.push('<td><div>' + formatNumber(parseFloat(premise.CorrArea).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(resultUnitCal.cal1).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(resultUnitCal.cal2).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2))+'</div></td>');
                                arr.push('<td><div>' + val.meters.length + '</div></td>');
                                arr.push('</tr>');
		                   }
		                   else{
	                            arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
			                    jQuery.each(configJson.PremiseModule, function (i, detail) {
			                    		{
			                          		 displayFields.forEach(function(val, j){
			                           		
				                             	if(val === detail.DisplayText && premise[detail.ColName]!==undefined){
                                                    console.log("Not Config");
                                                    console.log(detail.ColName);
                                                    console.log(premise[detail.ColName]);
                                                    if(detail.ColName=="Consumption"){
                                                        var cal1 = parseFloat(premise[detail.ColName]);
                                                        var resultUnitCal = unitCalculation2(unit ,cal1);
                                                        premise[detail.ColName] = parseFloat(resultUnitCal.cal1);                
                                                    }
                                                    if(detail.ColName=="Allocation"){
                                                        var cal1 = parseFloat(premise[detail.ColName]);
                                                        var resultUnitCal = unitCalculation2(unit ,cal1);
                                                        premise[detail.ColName] = parseFloat(resultUnitCal.cal1);                
                                                    }				                             		//console.log(detail.RoundNumbersToDigits+":"+ detail.DisplayText+":"+ premise[detail.ColName]);
				                             		if(detail.RoundNumbersToDigits !== ""){
				                             			 arr.push('<td><div>' + formatNumber(parseFloat(premise[detail.ColName]).toFixed(2)) + '</div></td>')
				                             		}else{
				                             			 arr.push('<td><div>' + premise[detail.ColName] + '</div></td>');
				                             		}
				                             		}else if(val === detail.DisplayText && detail.LayerName!=="List"){
				                             			 arr.push('<td><div></div></td>');
				                             		}else if(val === detail.DisplayText  && detail.LayerName==="List"){
				                             			if(val === "Sr. No."){
			                           					arr.push('<td><div>' + k + '</div></td>');
							                           	}
							                           	else if(val == "Total Meters"){
							                             		arr.push('<td><div>' + metersData.length + '</div></td>');
							                           	}
				                             		}
				                             	});
			                             }
			                     });
			                     arr.push('</tr>');
			                     //console.log(arr);
			                    
	                   }

	            	   });
		            	  var table;
		              	  if ($.fn.dataTable.isDataTable('#dtBasicExample')) {
                                   table = $('#dtBasicExample').DataTable();
                                   table.destroy();
                          }
                          $("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", ", " ").replaceAll(">,<", "><"));
                          document.getElementById("listHeader").innerHTML = head.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
                          $("#pAllocationBtn").html("Total Records Found (" + (k) + " Records)");
                          $('#dtBasicExample').DataTable({
                                     "paging": false,
                                     "info": false,
                                     "scrollY": '150px',
                                     "scrollX":true,
                                     "scrollCollapse": true,
                                     "searching": true,
                                     "ordering": true
                          });
	                      minimizeListModule();

	            	 
	            	  }
	            	  //return arr.toString();

	            	     
            }

            function openDisplayColumnsModal(){
            	$('#displayColumns').modal({
                    backdrop: false,
                    show: true
                });
            }


            function getAllFieldsFromConfig(filename){
            	 $.ajax({  
		                url: "CreateColumnList?file="+filename,  
		                type: "POST",  
		                success: function (result) {
								//console.log(result);
								var html = [];
								var json = JSON.parse(result);
								//console.log(Object.keys(json));
								//console.log(Object.values(json))
								for(let i=0;i<Object.keys(json).length;i++){
									var stat = Object.values(json)[i]==="True" ? "checked" : "";
									//if(displayFields.includes(Object.keys(json)[i]))stat ="checked";
									//console.log(displayFields+":"+Object.keys(json)[i]);
									html.push('<input class="form-check-input" type="checkbox" id="'+Object.keys(json)[i].replaceAll(" ","_")+'_checkbox" name="'+Object.keys(json)[i].replaceAll(" ","_")+'_checkbox" value="'+Object.keys(json)[i].replaceAll(" ","_")+'_checkbox"  '+stat+'>');
									html.push('<label class="form-check-label">'+Object.keys(json)[i]+'</label><br>')
								}
								displayfields.innerHTML =  html.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
								//console.log(html);
		                },  
		                error: function (err) {  
		                    console.log(err) ; 
		                }  
		            });  
            }


            var selectedFields = [];
            function updateDisplayFields (){
             selectedFields = [];
            	var filename = "WD_ListDisplay.txt";
            	$('#displayColumns input:checked').each(function() {
					 selectedFields.push($(this).attr('name'));
				});
				var fields = [];
				jQuery.each(configJson.PremiseModule, function (ind, detail) { 
						//console.log("from config: "+detail.DisplayText)
						for(let i = 0;i<selectedFields.length;i++){
							var selected = selectedFields[i].replace("_checkbox","").replaceAll("_"," ");
							//console.log("selected: "+selected)
							if(selected === detail.DisplayText){
								fields.push(selected);
								//console.log(selected +"________"+ detail.DisplayText);
							}
						}

				});
				//console.log(fields.toString());
				var datastring =" ";
				if(fields.toString().length > 2){
					datastring =fields.toString();
				}
				$.ajax({
                    type: "POST",
                    url: '/UpdateConfigurationFile?file='+filename,
                    data: datastring,
                    success: function (data) {
                       //console.log("called") ;
                       checkNewConfiguration();
                        $('#displayColumns').modal('hide');
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
            }


            var newConfigAvail=false;
			var head = [];
			function checkNewConfiguration(){
					displayFields = [];
					 head = [];
					 var filename ="WD_ListDisplay.txt";
					 $.ajax({  
		                url: "CreateColumnList?file="+filename,  
		                type: "POST",  
		                success: function (result) {
								var data = JSON.parse(result);
								//console.log(Object.keys(data).toString())
								if(Object.keys(data).toString().length>2){
									displayFields = Object.keys(data).toString().split(",");
									//console.log(displayFields);
									newConfigAvail = true;
									//console.log(head.length+": called first");
									displayFields.forEach(function(i,val){
											head.push('<th class="th-sm">');
											head.push(i);
											head.push('</th>');
											var checkboxid = i.replaceAll(" ","_")+"_checkbox";
										    console.log(checkboxid);
											if(!checkboxid.includes("Sr._No._") && checkboxid!=null && checkboxid!=="_checkbox")
												document.getElementById(checkboxid).checked = true;
									});
									document.getElementById("listHeader").innerHTML = head.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
									console.log(currentSearchQuery);
									if(searchRes.toString().length > 3)
										generateList(JSON.stringify(searchRes));
									console.log(head);
									}
									else{
										 getDisplayFieldsFromConfig("ConfigurationFile.json");
									}
								//console.log(html);
		                },  
		                error: function (err) {  
		                    console.log(err) ; 
		                }  
		            });  
					  //document.getElementById("listHeader").innerHTML = "";
			}

			function getDisplayFieldsFromConfig(filename){
					displayFields = [];
					 head = [];
					 $.ajax({  
		                url: "CreateColumnList?file="+filename,  
		                type: "POST",  
		                success: function (result) {
		                			var data = JSON.parse(result);
									var demodisplayFields = Object.keys(data).toString().split(",");
									//console.log(displayFields);
									newConfigAvail = true;
									//console.log(head.length+": called first: ");
									demodisplayFields.forEach(function(i,val){
										//console.log(Object.values(data).toString().split(",")[val])
										if(Object.values(data).toString().split(",")[val] ==="True"){
											head.push('<th class="th-sm">');
											head.push(i);
											head.push('</th>');
											displayFields.push(i);
											var checkboxid = i.replaceAll(" ","_")+"_checkbox";
										    //console.log(checkboxid);
											if(checkboxid!=null && checkboxid!=="_checkbox")
											document.getElementById(checkboxid).checked = true;
											}
									});
									document.getElementById("listHeader").innerHTML = head.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
									generateList(JSON.stringify(searchRes));
									//console.log(head.length);
		                },  
		                error: function (err) {  
		                    console.log(err) ; 
		                }  
		            });  
			}

			// exporting data to shapefile
            function exportToShapefile() {
            document.getElementById('loaderWrapper').classList.remove("d-none");
            console.log(typeof searchRes != 'undefined' );
             if (typeof searchRes != 'undefined' && searchRes.length != 0) {
                $.ajax({
                    type: "POST",
                    url: '/ExportDataToShapefile',
                    data: JSON.stringify(searchRes),
                    success: function (response) {
                         console.log("called") ;
                         document.getElementById('loaderWrapper').classList.add("d-none");
                         console.log("response: "+response);
				  		var a = document.createElement('A');
						a.href = response;
						a.download = response.substr(response.lastIndexOf('/')+31);
						document.body.appendChild(a);
						a.click();
						document.body.removeChild(a);
                    },
                    error: function (e) {
                        console.log(e)
                        document.getElementById('loaderWrapper').classList.add("d-none");
                    }
                });
                }
                else{
                	$('#modalAlert').modal('show');
                	document.getElementById('loaderWrapper').classList.add("d-none");
                }
                // console.log(searchRes);
            }



            $('#qctoolop').click(function () {
                openQCToolModal();

            });

             function openQCToolModal() {
                calculateValue();
                gauge1_1.refresh((floatValueConsumption/floatValueAllocation)*100);
                predictionGauge1_1.refresh((floatValueConsumption/floatValueAllocation)*100);
                var offsetSize=document.getElementById("displayPanel").offsetWidth+"px";
                
                document.getElementById("QCToolModal2").style.left=offsetSize;
                var heightnav = $("#headerNav").height();
                document.getElementById("QCToolModal2").style.top=heightnav+"px";
                //closeQCToolModal();
             

                $('#QCToolModal').modal('show');
                 // Get the modal element
                var modals1 = document.getElementById('QCToolModal');

                // Calculate the top position for the modal to be centered
                var topPosition = (window.innerHeight - modals1.offsetHeight) / 2;

                // Set the top position of the modal
                modals1.style.top = topPosition + 'px';
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $('.modal-dialog').draggable({
                    handle: ".modal-header"
                });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#QCToolModal").removeClass("modal");
                if ((typeof google !== 'undefined') || (typeof google.visualization !== 'undefined')) {
                            console.log("google chart is loaded");
                           // google.charts.setOnLoadCallback(drawChart);
                           //loadMonthConsumptionData(12);
                           google.charts.setOnLoadCallback(drawChartDistrictUsage);
                           google.charts.setOnLoadCallback(drawAreaChartRange1);
                           google.charts.setOnLoadCallback(drawAreaChartRange2);
                           google.charts.setOnLoadCallback(drawChart);
                           drawServiceAreaChart();
                }
            }
            
                
            function closeQCToolModal() {
                $('#QCToolModal').modal('hide');
                $('#QCToolModal').addClass('modal');

            }
                
                   var totalAllocation2;
		     var LACII_I_Total, LACII_ISLA_Total, floatValueAllocation_Total, floatValueConsumption_Total;
		     var totalConsumption2;
		     var floatValueAllocation, floatValueConsumption;
		     var GlobalLACII_I,GlobalLACII_ISLA;
              function totalAllocationConsumption(){
                 console.log("totalAllocationConsumption()");
                 $.ajax({
                    type: "GET",
                  url: '/totalAllocationConsumption',
                    success: function (msg) {
                             var msgArr=msg.split(":")
                             floatValueAllocation_Total=msgArr[0];
                             floatValueConsumption_Total=msgArr[1];
                             gauge1_1.refresh((floatValueConsumption_Total/floatValueAllocation_Total)*100);
                             predictionGauge1_1.refresh((floatValueConsumption_Total/floatValueAllocation_Total)*100);
                             datasets1[0].data = [floatValueAllocation_Total, floatValueConsumption_Total];
                             datasets2[0].data = [floatValueAllocation_Total, floatValueConsumption_Total];                        
                             floatValueAllocation=floatValueAllocation_Total;
                             floatValueConsumption=floatValueConsumption_Total;
                             LACII_I_Total=msgArr[2];            
                             cookieChartVar.update();
                             cookieChartVarPrediction.update();
                             LACII_ISLA_Total=msgArr[3];
                             document.getElementById("LACII_I").value=msgArr[2];
                             document.getElementById("LACII_ISLA").value=msgArr[3];
                       // console.log("============="+msg);
                    },

                    error: function (e) {
                        console.log(e)
                    }
                });
                
            }
       
             function ETOCalculation1(){
                 console.log("ETOCalculation1");
                 $.ajax({
                    type: "GET",
                  url: '/ETOCalculations',
                    success: function (msg) {
                        etoValuesData=msg;
                        //console.log("============="+msg);
                    },

                    error: function (e) {
                        console.log(e)
                    }
                });
                
            }   
            
             function PEFFCalculations1(){
                 //console.log("PEFFCalculations1");
                 $.ajax({
                    type: "GET",
                  url: '/PEFFCalculations',
                    success: function (msg) {
                        peffValuesData=msg;
                        //console.log("============="+msg);
                    },

                    error: function (e) {
                        console.log(e)
                    }
                });
                
            }   


            function calculateValue(){
                var ETO=document.getElementById('ETO').value;
                var PEFF=document.getElementById('PEFF').value;
                var LACII_ISLA=document.getElementById('LACII_ISLA').value;
                var LACII_I=document.getElementById('LACII_I').value;
                var ETF=document.getElementById('ETF').value;
                var pattern = /^[0-9]+(\.[0-9]+)?$/;
               var calAllocation=(0.62)*((LACII_I*ETF*(ETO-PEFF))+(1.0*LACII_ISLA*ETO)); 
               document.getElementById('inputUsageTotal').value= calAllocation;

                if(pattern.test(LACII_I) && pattern.test(LACII_ISLA)&&pattern.test(ETO)&&pattern.test(PEFF)&&pattern.test(ETF)
                    && LACII_I!="536599.357697546" && LACII_ISLA!="59827.2229767442"){
                
                    datasets2[0].data = [calAllocation, floatValueConsumption];
                    cookieChartVarPrediction.update();
                    predictionGauge1_1.refresh((floatValueConsumption/calAllocation)*100);
                
                }
                
                if(LACII_I=="536599.357697546" && LACII_ISLA=="59827.2229767442" && calAllocation==28908.45640072758){
                    document.getElementById('inputUsageTotal').value=520931.3;
                }

            }


             var cookieChartVar = new Chart("cookieChart", {
              type: 'bar', 
              data: {
                labels: ["Current Allocation", "Current Usage"], // Specify the labels for the x-axis
                datasets: [{
                  data: [floatValueAllocation, floatValueConsumption], // Specify the data values for the dataset
                  backgroundColor: ["rgb(47,105,153)", "rgb(137,168,99)"], // Specify the background color for the bars
                }]
              },
              options: {
                responsive: true, // Enable responsiveness
                scales: {
                  y: {
                    beginAtZero: true // Start the y-axis at zero
                  }
                }
              }
            });    
                
                
           var cookieChartVarPrediction = new Chart("cookieChartPrediction", {
              type: 'bar', 
              data: {
                labels: ["Current Allocation", "Current Usage"], // Specify the labels for the x-axis
                datasets: [{
                  data: [floatValueAllocation, floatValueConsumption], // Specify the data values for the dataset
                  backgroundColor: ["rgb(47,105,153)", "rgb(137,168,99)"], // Specify the background color for the bars
                }]
              },
              options: {
                responsive: true, // Enable responsiveness
                scales: {
                  y: {
                    beginAtZero: true // Start the y-axis at zero
                  }
                }
              }
            });    
         
                
                var datasets1 = cookieChartVar.data.datasets;
                var datasets2 = cookieChartVarPrediction.data.datasets;
                
            var gauge1_1 = new JustGage({
                id: 'gauge1',
                value: 0,
                min: 0,
                max: 100,
                symbol: '%',
                pointer: true,
                pointerOptions: {
                    toplength: -15,
                    bottomlength: 10,
                    bottomwidth: 10,
                    color: '#8e8e93',
                    stroke: '#ffffff',
                    stroke_width: 3,
                    stroke_linecap: 'round'
                },
                gaugeWidthScale: 0.5,
                counter: true,
                relativeGaugeSize: true,
            });
    
            var predictionGauge1_1 = new JustGage({
                id: 'predictionGauge1',
                value: 0,
                min: 0,
                max: 100,
                symbol: '%',
                pointer: true,
                pointerOptions: {
                    toplength: -15,
                    bottomlength: 10,
                    bottomwidth: 10,
                    color: '#8e8e93',
                    stroke: '#ffffff',
                    stroke_width: 3,
                    stroke_linecap: 'round'
                },
                gaugeWidthScale: 0.5,
                counter: true,
                relativeGaugeSize: true,
            });

             //Unit conversion
              function unitConverstionDeatils(selectedVal){
                      console.log("JSON.stringify(jsonData)");
                      var modal2 = document.getElementById("myUsageModal");
                      var isModalOpen = (modal2.style.display === "block");
                
                      if (isModalOpen) {
                        console.log("Modal is open");
                        displayPremiseDetailsDataInModal(JSON.stringify(jsonData));
                        } else {
                          console.log("Modal is closed");
                        }
                
                      unitMeasure = document.getElementById("premiseConsumption").innerHTML;

                      if(!unitMeasure.includes("CCF") && !unitMeasure.includes("Acre-Feet") && !unitMeasure.includes("Gallons") ){
                        unitMeasure =unitMeasure+"&nbsp;CCF";
                        console.log(unitMeasure);
                        var cons=document.getElementById("premiseConsumption").innerHTML;
                        var allo=document.getElementById("premiseAllocation").innerHTML;
                
                        ccfConsValues= parseFloat(cons.replace(",", ""));
                        ccfAlloValues= parseFloat(allo.replace(",", ""));
                        console.log(ccfAlloValues);
                      }
                
                
                      var unit = selectedVal.value;
                      var consElement = document.getElementById("premiseConsumption");
                      var alloElement = document.getElementById("premiseAllocation");

                      if (unit === "GallonsDetails") {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues * 748.051948).toFixed(2)) + "&nbsp;Gallons";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues * 748.051948).toFixed(2)) + "&nbsp;Gallons";
                      } else if (unit === "Acre-FeetDetails") {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues * 0.0022956841).toFixed(2)) + "&nbsp;Acre-Feet";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues * 0.0022956841).toFixed(2)) + "&nbsp;Acre-Feet";
                      } else {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues).toFixed(2)) + "&nbsp;CCF";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues).toFixed(2)) + "&nbsp;CCF";
                      }


                
                
                        var element = document.getElementById("pAllocationBtn");  // Get the HTML element by its id
                        var text = element.innerText;
                        var value = text.match(/\d+/)[0];
                        
                        if(value>0 && isSearchButtonBox==false && isSearchList==false && isUpdate==false && isSearchClear==false){
                            //listmodalFun(value);
                            searchData();
                        }
                        
                        if(isUpdate==true && isSearchClear==false){
                            displayOnMap(displayOnMapHashKey);
                        }
                        
                        console.log("isUpdate :: "+isUpdate);
                                        
                        
                        if(isSearchButtonBox==true && isSearchClear==false){
                            searchDataWithSearchBox();
                        }
                        
                        if(isSearchList==true && isSearchClear==false){
                            selectHandler2();
                        }
                        
                        console.log("isSearchList :: "+isSearchList);

                        unitConverstion(selectedVal);
                        getUsagdeDataBetweenMonthsRange1();
                        getUsagdeDataBetweenMonthsRange2();
                }
                
            
            function unitConverstionDeatils2(selectedVal){
                      console.log("unitConverstionDeatils2 Called");
                      var modal2 = document.getElementById("myUsageModal");
                      var isModalOpen = (modal2.style.display === "block");
                
                      if (isModalOpen) {
                          console.log("Modal is open");
                          displayPremiseDetailsDataInModal(JSON.stringify(jsonData));
                        } else {
                          console.log("Modal is closed");
                        }
                
                
                      unitMeasure = document.getElementById("premiseConsumption").innerHTML;
                      

                      if(!unitMeasure.includes("CCF") && !unitMeasure.includes("Acre-Feet") && !unitMeasure.includes("Gallons") ){
                        unitMeasure =unitMeasure+"&nbsp;CCF";
                        console.log(unitMeasure);
                        var cons=document.getElementById("premiseConsumption").innerHTML;
                        var allo=document.getElementById("premiseAllocation").innerHTML;
                
                        ccfConsValues= parseFloat(cons.replace(",", ""));
                        ccfAlloValues= parseFloat(allo.replace(",", ""));
                        console.log(ccfAlloValues);
                      }
                
                      var unit = selectedVal.value;
                      var consElement = document.getElementById("premiseConsumption");
                      var alloElement = document.getElementById("premiseAllocation");

                      if (unit === "GallonsDetails") {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues * 748.051948).toFixed(2)) + "&nbsp;Gallons";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues * 748.051948).toFixed(2)) + "&nbsp;Gallons";
                      } else if (unit === "Acre-FeetDetails") {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues * 0.0022956841).toFixed(2)) + "&nbsp;Acre-Feet";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues * 0.0022956841).toFixed(2)) + "&nbsp;Acre-Feet";
                      } else {
                          consElement.innerHTML = formatNumber(parseFloat(ccfConsValues).toFixed(2)) + "&nbsp;CCF";
                          alloElement.innerHTML = formatNumber(parseFloat(ccfAlloValues).toFixed(2)) + "&nbsp;CCF";
                      }
                }


                    function selectHandler2() {
                            isSearchClear=false;
                            isSearchList=true;
                            console.log("selectHandler2 Called");
                            isCreateDetailsData=false;
                            isUpdate=false;
                            layerArr[searchlayer["LayerName"]]['layer'].clear();
                            //selection = chart2.getSelection();
                            if (selection.length > 0) {
                              var colLabel = data2.getColumnLabel(selection[0].column);
                              var mydata = data2.getValue(selection[0].row,0);
                              console.log(colLabel + ': ' + mydata);
                              chart2.setSelection([]);
                              closeDashboardModal();
                               $.ajax({    type: "GET",
								             url: '/getPercentageData?range='+mydata,
								             success: function (msg) {
                            							document.getElementById('loaderWrapper').classList.add("d-none");
                            							//alert(mydata+": msg:"+ msg);
														searchRes=[];
														arr=[];
														centroidArray=[];
														//map.layers.clear();
													    //map.entities.clear();
														msg = JSON.parse(msg);
														if(JSON.stringify(msg).includes("premise")){
														var k=1;
														jQuery.each(msg, function(i, val) {
															  searchRes.push(val);
															 // console.log(i);
															  var premise = val.premise;
															  var meterData = val.meters;
                                                            //arr.push("<tr onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                                            //  arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
															//  arr.push('<td><div>'+k+'</div></td>');
															//  arr.push('<td><div>'+premise.premID+'</div></td>');
															//  arr.push('<td><div>'+premise.Customer+'</div></td>');
															  //arr.push('<td><div>'+formatNumber(parseFloat(premise.CorrArea).toFixed(2))+'</div></td>');
															//  arr.push('<td><div>'+formatNumber(parseFloat(premise.Consumption).toFixed(2))+'</div></td>');
															//  arr.push('<td><div>'+formatNumber(parseFloat(premise.Allocation).toFixed(2))+'</div></td>');
                                                           //   arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2))+'</div></td>');
															 // arr.push('<td><div>'+meterData.length+'</div></td>');
															//  arr.push('</tr>');
															  //console.log(arr);
															  //plotting premise boundaries on map
															   Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function  () {
																	polygon = Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",","), { polygonOptions: { fillColor:"rgba(255,255,255,0)",strokeColor: "blue", strokeThickness: 3 } });
																	Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function  () {
																		var centroid =   Microsoft.Maps.SpatialMath.Geometry.centroid(Microsoft.Maps.WellKnownText.read(premise.the_geom.replaceAll(":",",")));
																		centroidArray.push(new Microsoft.Maps.Location(centroid.latitude, centroid.longitude));
																		if(centroidArray.length == Object.keys(msg).length){
																				centroidArray.push(centroidArray[0]);
																				var envelop = new Microsoft.Maps.Polygon(centroidArray);
																				var rect = Microsoft.Maps.SpatialMath.Geometry.bounds(centroidArray);
																			   // console.log(rect);
																				map.setView({ bounds: rect});
																		}
																	});
																	//var layers = new Microsoft.Maps.Layer();
																	//layers.add(polygon, i);
																	//map.layers.insert(layers);   
																	layerArr[searchlayer["LayerName"]]['layer'].add(polygon);
															   });
															   
															   k++;
														}); 
														generateList(JSON.stringify(searchRes));
														//var table;
														//if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
														//	table = $('#dtBasicExample').DataTable();
														//	table.destroy();
														//}
														//console.log(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
														//$("#dtBasicExample").find("tbody").html(arr.toString().replaceAll(", "," ").replaceAll(">,<","><"));
														//$("#pAllocationBtn").html("Total Records Found ("+(k-1)+" Records)");
														//$('#dtBasicExample').DataTable({
																	//"paging":   false,
																	//"info":     false,
																	//"scrollY": '200px',
																	//"scrollCollapse": true,
																	//"searching": true,
																	//"columns":[null,null,{"width":"20%"},null,null,null,null,null]
															//});
														
														}
														else{
																if ( $.fn.dataTable.isDataTable( '#dtBasicExample' ) ) {
																	table = $('#dtBasicExample').DataTable();
																	table.destroy();
																}
																$("#pAllocationBtn").html("Total Records Found (0 Records)");
																$("#dtBasicExample").find("tbody").html("<tr><td colspan='8'>No data available in table</td></tr>");
																$("#dtBasicExample").find("tbody").find("td").css("verticle-align","middle");
																 $("#dtBasicExample").find("tbody").find("td").css("padding-botom","0");
														}
								            },
								            error: function (e) {
														document.getElementById('loaderWrapper').classList.add("d-none");								 
               											console.log(e) 
								            }
							  });
							}
						}   



						function unitCalculation(unit, cal1, cal2) {
                cal1=parseFloat(cal1.toFixed(2));
                cal2=parseFloat(cal2.toFixed(2));
                //console.log("cal1 " + cal1 + " :: cal2 " + cal2);
                //console.log(unit);
                if (unit === "GallonsDetails") {
                    cal1 = cal1 * 748.051948;
                    cal2 = cal2 * 748.051948;
                } else if (unit === "Acre-FeetDetails") {
                    cal1 = cal1 * 0.0022956841;
                    cal2 = cal2 * 0.0022956841;
                } else {
                    cal1 = cal1;
                    cal2 = cal2;
                }
                //console.log("cal11 " + cal1 + " :: cal22 " + cal2);
                return { cal1: cal1, cal2: cal2 };
            }
                
            
            function unitCalculation2(unit, cal1) {
                //console.log("unitCalculation2 cal1 :: "+cal1);
                cal1=parseFloat(cal1.toFixed(2));
                if (unit === "GallonsDetails") {
                    cal1 = (cal1 * 748.051948).toFixed(2);
                } else if (unit === "Acre-FeetDetails") {
                    cal1 = (cal1 * 0.0022956841).toFixed(2);
                } else {
                    cal1 = cal1.toFixed(2);
                }
               // console.log("unitCalculation2 cal11 :: "+cal1);
               // console.log("unitCalculation2 unit :: "+unit);
                return { cal1: cal1};
            }



            function uploadShapefile(){
		 			document.getElementById('loaderWrapper').classList.remove("d-none");
		 			var fileUpload = $("#myfile").get(0);  
		            var files = fileUpload.files;  
		            var data = new FormData();  
		            for (var i = 0; i < files.length; i++) {  
		              data.append(files[i].name, files[i]);  
		            }  
		            //console.log(files);
		            //console.log(data);

		            $.ajax({  
		                url: "UploadShapefileData",  
		                type: "POST",  
		                data: data,  
		                contentType: false,  
		                processData: false,  
		                success: function (result) {
		                	document.getElementById('loaderWrapper').classList.add("d-none");
		                 	if(result === "ShapeFile Uploaded Successfully"){
		                 		alert("Selected Shapefile has been uploaded to the server and being processed. Please check back again in 24hrs to view the Created Layer.");
		                 	}
		                    $('#importShapefileModal').modal('hide');
		                },  
		                error: function (err) {  
		                	document.getElementById('loaderWrapper').classList.add("d-none");
		                	alert("Some error occured during file upload.");
		                    console.log(err) ; 
		                    $('#importShapefileModal').modal('hide');
		                }  
		            });  
		  		 	}


		 
			function importShapefile() {
                //console.log("DATA");
                $('#importShapefileModal').modal({
                    backdrop: false,
                    show: true
                });


            }

            function getCustomLayerDisplay(layername){
            	$.ajax({  
		                url: "GetDisplayDetailsSelectedLayer?layerName="+layername,  
		                type: "POST",  
		                success: function (result) {
							console.log(result);
							//document.getElementById("customLayerHeader").insertAdjacentHTML("afterend", result);
							document.getElementById("customLayerDiv").innerHTML = "";
							document.getElementById("customLayerDiv").innerHTML = result;
		                },  
		                error: function (err) {  
		                    console.log(err) ; 
		                }  
		            });  
            }

             function creatNewMarkup(){
              $('#CreateNewMarkupLayer').modal({
                    backdrop: false,
                    show: true
                });
                 $('#CreateNewMarkupLayer').removeClass('modal');
            }

            function closeCreatNewMarkup(){
            		 $('#CreateNewMarkupLayer').modal('hide');
                $('#CreateNewMarkupLayer').addClass('modal');
            }

            function createMarkup(){
            	var markup = document.getElementById("markupName").value;
            	console.log(markup);
            	if(markup!==undefined && markup.length>2){
            	 $.ajax({
		              url: '/createMarkupFile?markupFileName=' + markup,
		              type: "POST",
		              success: function(msg) {
		                alert("Markup Created Successfully");
		                getMarkupLayerList()
		                currenrMarkupLayer = markup;
		          		document.getElementById("exportedMarkup").innerHTML = markup;
		                setSelectedMarkup();
		               	//window.location.reload();
		              },
		              error: function(xhr, status, error) {
		                console.error(error);
		              }
		         });
		         }else{
		         	alert("Please Enter Correct Name For Markup")
		         }
            }

              function openChangeSelectedMarkup(){
	            $('#setCurrentMarkupLayer').modal({
	                    backdrop: false,
                    show: true
                });
                 $('#setCurrentMarkupLayer').removeClass('modal');

            }


            function closeChangeSelectedMarkup(){
               $('#setCurrentMarkupLayer').modal('hide');
                $('#setCurrentMarkupLayer').addClass('modal');
            }


            function changeSelectedMarkup(){
            	var selected  = document.getElementById("selectedMarkup").value;
            	console.log(selected);
            	$.ajax({  
		                url: "SetCurrentMarkupLayer?markupName="+selected,  
		                type: "POST",  
		                success: function (result) {
							console.log(result);
							closeChangeSelectedMarkup();
							currenrMarkupLayer = selected;
							//$('#'+selected+'_markup').attr('checked', true);
							var editIcons = document.getElementsByClassName("fa fa-pencil");
							for(let i=0;i<editIcons.length;i++){
								console.log(editIcons[i])
								if(editIcons[i].id.includes('_selectedMarkupEdit'))
								$('#'+editIcons[i].id).addClass("d-none");
							}
							$('#'+selected+'_selectedMarkupEdit').removeClass("d-none");
							document.getElementById("selectedMarkupLayer").innerHTML = selected.toUpperCase();
							//window.location.reload();
		                },  
		                error: function (err) {  
		                    console.log(err) ; 
		                }  
		            });  
            }


    function shapeDrawn(s) {
        map.entities.push(s);
        console.log("shapeDrawn");
    }
        
    function drawPolyline(e) {
    	$("#myMap").css("cursor","crosshair");
        //clearShapes();
        var eleId = e.id;
        console.log(eleId);
        tools.create(Microsoft.Maps.DrawingTools.ShapeType.polyline, function (s) {
            if(eleId.includes("Markup")){
            	s.setOptions(styleMeasureMarkup);
            	if(layerArr[currenrMarkupLayer] === undefined)
            		createBlankLayer(currenrMarkupLayer)
            	isMarkupEnabled = true;
            }
            else{
            	s.setOptions(styleMeasure);
            	isMarkupEnabled = false;
            }
            currentShape = s;
        });
    }
        
    function drawPolygon(e) {
    	$("#myMap").css("cursor","crosshair");
    	console.log(e.id);
    	var eleId = e.id;
        tools.create(Microsoft.Maps.DrawingTools.ShapeType.polygon, function (s) {
        	if(eleId.includes("Markup")){
            	s.setOptions(styleMeasureMarkup);
            	//console.log(layerArr[currenrMarkupLayer]);
            	if(layerArr[currenrMarkupLayer] === undefined)
            		createBlankLayer(currenrMarkupLayer)
            		isMarkupEnabled = true;
            }
            else{
            	s.setOptions(styleMeasure);
            	clearShapes();
            	isMarkupEnabled = false;
           }
           console.log(isMarkupEnabled);
            currentShape = s;
        });
    }
    
    function drawMultiPolygon() {
    	$("#myMap").css("cursor","crosshair");
        console.log("drawMultiPolygon()");        
        tools.create(Microsoft.Maps.DrawingTools.ShapeType.polygon, function (s) {
            s.setOptions(styleMeasure);
            currentShape = s;
        });
    }
        
    function DrawCircle() {
    	$("#myMap").css("cursor","crosshair");
       // ClearDrawing();
        var isDragging = false;
        var mouseDownEventHandler = Microsoft.Maps.Events.addHandler(map, 'mousedown', function (e) {
            map.setOptions({ disablePanning: true });
            circle = new Microsoft.Maps.Polygon([e.location, e.location, e.location], styleMeasure);
            circle.metadata = {
                center: e.location
            };
            console.log(circle);
            map.entities.push(circle);
            isDragging = true;
        });
        var mouseMoveEventHandler = Microsoft.Maps.Events.addHandler(map, 'mousemove', function (e) {
            if (isDragging) {
                UpdateCircle(e);
            }
        });
        var mouseUpEventHandler = Microsoft.Maps.Events.addHandler(map, 'mouseup', function (e) {
            isDragging = false;
            UpdateCircle(e);
          	 $("#myMap").css("cursor","pointer");
            map.setOptions({ disablePanning: false });
            Microsoft.Maps.Events.removeHandler(mouseDownEventHandler);
            Microsoft.Maps.Events.removeHandler(mouseMoveEventHandler);
            Microsoft.Maps.Events.removeHandler(mouseUpEventHandler);
        });
    }

    function UpdateCircle(e) {
        var distanceInMiles = Microsoft.Maps.SpatialMath.getDistanceTo(circle.metadata.center, e.location, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);
        var distanceInFeet = distanceInMiles * 5280;
        var locs = Microsoft.Maps.SpatialMath.getRegularPolygon(circle.metadata.center, distanceInMiles, 36, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);
        circle.setLocations(locs);
        var radiusInFeetCircle = Math.round(distanceInFeet * 1000) / 1000;
        var circumferenceInFeetCircle = Math.round(2 * Math.PI * distanceInFeet * 1000) / 1000;
        var areaInAcresCircle = Math.round(Math.PI * Math.pow(distanceInMiles, 2) * 640) / 100;
        var centroidCircle = new Microsoft.Maps.Location((circle.metadata.center.latitude + e.location.latitude) / 2, (circle.metadata.center.longitude + e.location.longitude) / 2);
        var maxsize=circumferenceInFeetCircle.toString().length;
        var textWidth = maxsize*5;
        var width = textWidth + 115;
        var svgIcon = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="67">' +
                      '<rect x="5" y="15" width="' + (width) + '" height="67" fill="white" stroke="black" />' +
                      '<text x="10" y="30" font-size="12" fill="black" font-weight="bold">' +
                      '<tspan x="10" dy="0">Radius: ' + radiusInFeetCircle + ' ft  </tspan>' +
                      '<tspan x="10" dy="15">Circumference: ' + circumferenceInFeetCircle + ' ft  </tspan>' +
                      '<tspan x="10" dy="15">Area: ' + areaInAcresCircle + ' acres  </tspan>' +
                      '</text>' +
                      '</svg>';
            
        if (!pushpinCircle) {
            pushpinCircle = new Microsoft.Maps.Pushpin(centroidCircle, {
                icon: svgIcon,
                anchor: new Microsoft.Maps.Point(30, 30) // Adjust anchor point if needed.
            });
            map.entities.push(pushpinCircle);
        } else {
            pushpinCircle.setOptions({
                icon: svgIcon,
                anchor: new Microsoft.Maps.Point(30, 30) // Adjust anchor point if needed.
            });
        }
    }

    function ClearDrawing() {
            pushpinCircle="";
            map.entities.clear();        
            circle = null;
    }
    
    function clearShapes() {
        areaSum=0.00;        
        document.getElementById("areaSum").textContent = (areaSum) + ".00 sqft";        
        ClearDrawing();
        map.entities.clear();
    }  



    function addLabelToPolygon(shape) {
        var vertices = shape.getLocations();
        var totalDistance = 0.0;
        var outputPanel;
        var centroid = Microsoft.Maps.SpatialMath.Geometry.centroid(vertices);
        var area=0.0;
        var perimeter = 0.0;
        var end=0.0;
        var space=" ";
        if (shape instanceof Microsoft.Maps.Polyline) {
            // Calculate the length of the polyline and total distance.
            for (var i = 0; i < vertices.length - 1; i++) {
                var start = vertices[i];
                end = vertices[i + 1];
                var distance = Microsoft.Maps.SpatialMath.getDistanceTo(start, end);
                var centroidStartEnd = new Microsoft.Maps.Location((start.latitude + end.latitude) / 2, (start.longitude + end.longitude) / 2);
                //console.log(centroidStartEnd);
                //console.log(end);
                totalDistance += distance;
                if(vertices.length>2){
                    var textWidth = (distance.toString().length)*5;
                    var width = textWidth + 35;
                    var svgIcon = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="40">' +
                                  '<rect x="5" y="15" width="' + (width) + '" height="25" fill="white" stroke="black" />' +
                                  '<text x="10" y="30" font-size="12" fill="black" font-weight="bold">' + distance + ' mi  </text>' +
                                  '</svg>';
                    var pinOptions = {
                        icon: svgIcon,
                        anchor: new Microsoft.Maps.Point(30, 30)
                    };
                    var pin = new Microsoft.Maps.Pushpin(centroidStartEnd, pinOptions);
                    map.entities.push(pin);
                }
            }
            totalDistance = Math.round(totalDistance * 100) / 100;
            var textWidth = (totalDistance.toString().length)*5;
            var width = textWidth + 35;
            var svgIcon = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="40">' +
                          '<rect x="5" y="15" width="' + (width) + '" height="25" fill="white" stroke="black" />' +
                          '<text x="10" y="30" font-size="12" fill="black" font-weight="bold">' + totalDistance + ' mi  </text>' +
                          '</svg>';
            var pinOptions = {
                icon: svgIcon,
                anchor: new Microsoft.Maps.Point(30, 30)
            };
            var pin = new Microsoft.Maps.Pushpin(end, pinOptions);
            map.entities.push(pin);
        } else if (shape instanceof Microsoft.Maps.Polygon && shape.getLocations().length > 3) {
            //var area = Microsoft.Maps.SpatialMath.Geometry.area(shape, Microsoft.Maps.SpatialMath.AreaUnits.Acres);
            //console.log(area)
            var area = Microsoft.Maps.SpatialMath.Geometry.area(shape, Microsoft.Maps.SpatialMath.AreaUnits.SquareFeet);
            console.log(area)
            var perimeter = Microsoft.Maps.SpatialMath.Geometry.calculateLength(shape, Microsoft.Maps.SpatialMath.DistanceUnits.Feet);
            area = Math.round(area);//Math.round(area * 100) / 100;
            perimeter = Math.round(perimeter);//Math.round(perimeter * 100) / 100;
            var maxsize=perimeter.toString().length > area.toString().length ? perimeter.toString().length : area.toString().length;
            var textWidth = maxsize*5;
            var width = textWidth + 100;
            var svgIcon = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="50">' +
                          '<rect x="5" y="15" width="' + (width) + '" height="50" fill="white" stroke="black" />' +
                          '<text x="10" y="30" font-size="12" fill="black" font-weight="bold">' +
                          '<tspan x="10" dy="0">Perimeter: ' + formatNumber(perimeter) + ' ft  </tspan>' + // dy="0" moves the text to the current line position.
                          '<tspan x="10" dy="15">Area: ' + formatNumber(area) + ' sqft  </tspan>' + // dy="15" creates a new line with 15px distance.
                          '</text>' +
                          '</svg>';
            var pinOptions = {
                icon: svgIcon,
                anchor: new Microsoft.Maps.Point(30, 30)
            };
            areaSum=areaSum+area;
            var pin = new Microsoft.Maps.Pushpin(centroid, pinOptions);
            map.entities.push(pin);
        }
        document.getElementById("areaSum").textContent = formatNumber(areaSum) + " sqft";        
    }            

    function takeShot(){
    		document.getElementById('loaderWrapper').classList.remove("d-none");
    	    let div = document.getElementById("myMap");
  			 $("#MicrosoftNav").empty(); 
         
            html2canvas(div,{
            	"useCORS": true, 
            	"allowTaint": true
            }).then(
                function (canvas) {
	                canvas.toBlob(function(blob) {
						saveAs(blob, "Dashboard.jpg"); 
					});
					//printMaps(canvas);
		 	});
		 	document.getElementById('loaderWrapper').classList.add("d-none");
    }

    function printMaps(ele) {
    	console.log(ele.id);
    	let div = document.getElementById("myMap");
  			 $("#MicrosoftNav").empty(); 
         
            html2canvas(div,{
            	"useCORS": true, 
            	"allowTaint": true
            }).then(
                function (canvas) {
	                var extra_canvas = document.createElement("canvas");
			        var ctx = extra_canvas.getContext('2d');
			        if(ele.id.includes("_portrait")){
				        extra_canvas.setAttribute('height',window.innerHeight*1.5);
				        extra_canvas.setAttribute('width',window.innerWidth);
				        ctx.canvas.width  = window.innerWidth;
				  		ctx.canvas.height = window.innerHeight*1.5;
				  		ctx.drawImage(canvas,0,0,canvas.width,canvas.height,0,0,window.innerWidth,window.innerHeight*1.5);
			  		}else{
			  			extra_canvas.setAttribute('height',window.innerHeight);
				        extra_canvas.setAttribute('width',window.innerWidth);
				        ctx.canvas.width  = window.innerWidth;
				  		ctx.canvas.height = window.innerHeight;
				  		ctx.drawImage(canvas,0,0,canvas.width,canvas.height,0,0,window.innerWidth,window.innerHeight);
			  		}
			        var dataURL = extra_canvas.toDataURL('image/png');

			         var windowContent = '<!DOCTYPE html>';
					 windowContent += '<html>'
					 windowContent += "<head><title></title>"
					 if(ele.id.includes("_portrait")){
						 windowContent += "<style> @media print {  body {-webkit-print-color-adjust: exact;} @page {size: a4 portrait;margin: 2mm 2mm 2mm 2mm;max-height:100%; max-width:100%} .img-canvas{height : 100%!important;width:100%;min-height:80%; object-fit: cover;} } .img-canvas{height : 100%!important;width:100%;min-height:80%; object-fit: cover;}</style></head>";
					 }else{
					 	 windowContent += "<style> @media print {  body {-webkit-print-color-adjust: exact;} @page {size: a4 landscape;margin:2mm 2mm 2mm 2mm;max-height:100%; max-width:100%} .img-canvas{height : 100%!important;width:100%;min-height:80%; object-fit: cover;} } .img-canvas{height : 100%!important;width:100%;min-height:80%; object-fit: cover;}</style></head>";
					 }
					 windowContent += '<body>'
					 windowContent += '<div><img style="height:100%!important;background-position: center;background-repeat: no-repeat;background-size: cover;" src="' + dataURL + '"></div>';
					//windowContent +="<footer><div class='row'><img src='"+printableImage.src+"'></div></footer>";
					 windowContent += '</body>';
					 windowContent += '</html>';
					 var printWin = window.open('','','');
					 printWin.moveTo(0, 0);
					 //console.log(screen.width+":"+)
					 printWin.resizeTo(screen.width,screen.height);
					 printWin.document.open();
					 printWin.document.write(windowContent);
					 printWin.document.close();
					// printWin.focus();
					 setTimeout(function() {
							printWin.print();
							printWin.close();
					 },10 );
		 	});
    	
    }



    function drawPoint(e){
	    	console.log(e.id);
	    	if(layerArr[currenrMarkupLayer] === undefined)
            		createBlankLayer(currenrMarkupLayer)
	    	isMarkupEnabled = true;
	    	document.getElementById("geoStyler_symbolRow").style.display = "block";
	    	document.getElementById("geoStyler_symbolSizeRow").style.display ="block";
	    	openMarkupTools(event);

    }

    function createCirclePushpin(location, radius, fillColor, strokeColor, strokeWidth) {
        strokeWidth = strokeWidth || 0;
        //Create an SVG string of a circle with the specified radius and color.
        var svg = ['<svg xmlns="http://www.w3.org/2000/svg" width="', (radius * 2),
            '" height="', (radius * 2), '"><circle cx="', radius, '" cy="', radius, '" r="',
            (radius - strokeWidth), '" stroke="', strokeColor, '" stroke-width="', strokeWidth, '" fill="', fillColor, '"/></svg>'];

        //Create a pushpin from the SVG and anchor it to the center of the circle.
        return new Microsoft.Maps.Pushpin(location, {
            icon: svg.join(''),
            anchor: new Microsoft.Maps.Point(radius, radius)
        });
    }

    var markupPointJson ="";
    function openMarkupTools(event){
    	document.getElementById("markup-tools").style.display ="block";
    	console.log(event.type);
    	if(event.type === "click"){
    		isMarkupEdit = false;
    		createMarkupIcon();
	    }else{
	    	isMarkupEdit = true;
	    }
    }

  function calculateBoundingBox(center, svgHeight, svgWidth) {
   	 // Convert SVG dimensions to map units
    const mapWidth = svgWidth * map.getMetersPerPixel();
    const mapHeight = svgHeight * map.getMetersPerPixel();

    // Calculate half of the bounding box width and height
    const halfBoundingBoxWidth = mapWidth / 2;
    const halfBoundingBoxHeight = mapHeight / 2;

    // Calculate the bounding box vertices
    const topLeft = new Microsoft.Maps.Location(
        center.latitude + halfBoundingBoxHeight,
        center.longitude - halfBoundingBoxWidth
    );

    const topRight = new Microsoft.Maps.Location(
        center.latitude + halfBoundingBoxHeight,
        center.longitude + halfBoundingBoxWidth
    );

    const bottomLeft = new Microsoft.Maps.Location(
        center.latitude - halfBoundingBoxHeight,
        center.longitude - halfBoundingBoxWidth
    );

    const bottomRight = new Microsoft.Maps.Location(
        center.latitude - halfBoundingBoxHeight,
        center.longitude + halfBoundingBoxWidth
    );

    return [topLeft, topRight, bottomRight, bottomLeft];
}

    function setFillColor(){
    	//console.log($("#geoStyler_fillColorSwatch"));
    	$("#geoStyler_fillColorSwatch").css("background-color",$("#selectedColor").html());
    	$('#colorPickerModal').modal('hide');
    }

    function openColorPickerModal(){
    	  console.log("i am called")
    	  $('#colorPickerModal').modal({
                    backdrop: false,
                    show: true
          });  
    }

    function openLabelTextModal(){
    	$('#labelTextModal').modal({
                    backdrop: false,
                    show: true
       });
    }

    var slider = document.getElementById("slider-color"), color = document.getElementById("color");
	color.oninput = function() {
	    slider.style.backgroundImage = "linear-gradient(to right,rgba(0,0,0,0),"+color.value+")";
	    let rgb = hexToRgb(color.value);
	    document.getElementById("test").style.backgroundColor = "rgba("+rgb.r+","+rgb.g+","+rgb.b+","+slider.value+")";
	    document.getElementById("selectedColor").innerHTML = "rgba("+rgb.r+","+rgb.g+","+rgb.b+","+slider.value+")";
	}
	slider.oninput = function() {
	    let rgb = hexToRgb(color.value);
	    document.getElementById("test").style.backgroundColor = "rgba("+rgb.r+","+rgb.g+","+rgb.b+","+slider.value+")";
	    document.getElementById("selectedColor").innerHTML = "rgba("+rgb.r+","+rgb.g+","+rgb.b+","+slider.value+")";

	}
	function hexToRgb(hex) {
	  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	  return result ? {
	    r: parseInt(result[1], 16),
	    g: parseInt(result[2], 16),
	    b: parseInt(result[3], 16)
	  } : null;
	}

	function selectedMarkupSVGCircle(){
		document.getElementById("selectedSVG").innerHTML = '<img height="30" width="30" src="images/circle.png"/>';
		document.getElementById("selectedSVG").name ="Circle";
	}

	function selectedMarkupSVGTriangle(){
		document.getElementById("selectedSVG").innerHTML = '<img height="30" width="30" src="images/triangle.png"/>';
		document.getElementById("selectedSVG").name ="Triangle";
	}

	function selectedMarkupSVGStar(){
		document.getElementById("selectedSVG").innerHTML = '<img height="30" width="30" src="images/star.png"/>';
		document.getElementById("selectedSVG").name ="Star";
	}

	function selectedMarkupSVGSquare(){
		document.getElementById("selectedSVG").innerHTML = '<img height="30" width="30" src="images/square.png"/>';
		document.getElementById("selectedSVG").name ="Square";
	}

	function selectedMarkupSVGCross(){
		document.getElementById("selectedSVG").innerHTML = '<img height="30" width="30" src="images/cross.png"/>';
		document.getElementById("selectedSVG").name ="Cross";
	}

	async function submitMarkupStyling(){
                 	//adding the generated json data to current markup layer file
                 	console.log(isMarkupEdit);
                 	if(isMarkupEdit === false) {
                 		createMarkupIcon();
                 		console.log(markupPointJson);
	                    $.ajax({
					         url: '/addToMarkup?markupFileName=' + currenrMarkupLayer,
					         type: "POST",
					         data: markupPointJson,
					              success: function(msg) {
					                console.log("Markup Created Successfully");
					         },
					         error: function(xhr, status, error) {
					                console.error(error);
					         }
				        });
				         //cleaning used inputs
					    isMarkupEnabled = false;
					    document.getElementById("selectedSVG").name ="";
						document.getElementById("mapLabelPin").value ="";
					    console.log("after change:"+ isMarkupEnabled);
						//cancleMarkupStyling();
						map.entities.clear();
				   		document.getElementById("markup-tools").style.display ="none";
				   		closeDetailsModal();
			        }else{
			        	 editMarkupIcon();
			        }
			       
    }



    function getDynamicTriangleSVG(fontSize,color,stroke){
    	  const svgWidth = fontSize * 4;
	      const svgHeight = fontSize * 3;
	      console.log(svgWidth);
	      console.log(svgHeight);
	      const trianglePath = `
	        M ${svgWidth / 2},${fontSize}
	        L ${svgWidth - fontSize},${svgHeight - fontSize}
	        L ${fontSize},${svgHeight - fontSize}
	        Z
	      `;

	      const svg = `
	        <svg width="${svgWidth}" height="${svgHeight}" xmlns="http://www.w3.org/2000/svg">
	          <path d="${trianglePath}" fill="${color}" stroke="${stroke}" stroke-width="2" />
	        </svg>
	      `;
	      return svg;
    }

    function getDynamicStar(fontSize,color,stroke){
    	const svgWidth = fontSize * 4;
      const svgHeight = fontSize * 4;

     const starPoints = generateStarPoints(svgWidth / 2, svgHeight / 2, fontSize * 2, 5);
      const svg = `
        <svg width="${svgWidth}" height="${svgHeight}" xmlns="http://www.w3.org/2000/svg">
          <polygon points="${starPoints}" fill="${color}" stroke="${stroke}" stroke-width="2" />
        </svg>
      `;
      return svg;
    }

    function getDynamicSquare(fontSize,color,stroke){
    	const svgWidth = fontSize * 4;
      const svgHeight = fontSize * 4;

      const squarePath = `
        M ${fontSize},${fontSize}
        L ${svgWidth - fontSize},${fontSize}
        L ${svgWidth - fontSize},${svgHeight - fontSize}
        L ${fontSize},${svgHeight - fontSize}
        Z
      `;

      const svg = `
        <svg width="${svgWidth}" height="${svgHeight}" xmlns="http://www.w3.org/2000/svg">
          <path d="${squarePath}" fill="${color}" stroke="${stroke}" stroke-width="2" />
        </svg>
      `;
      return svg;
    }

    function getDynamicCross(fontSize,color,stroke){
      const svgWidth = fontSize * 4;
      const svgHeight = fontSize * 4;

      const strokeWidth = fontSize * 0.5;
      const timesWidth = fontSize * 1.5;

      const rect1X = (svgWidth - timesWidth) / 2;
      const rect1Y = (svgHeight - strokeWidth) / 2;
      const rect2X = (svgWidth - strokeWidth) / 2;
      const rect2Y = (svgHeight - timesWidth) / 2; 

      const svg = `
        <svg width="${svgWidth}" height="${svgHeight}" xmlns="http://www.w3.org/2000/svg">
          <rect x="${rect1X}" y="${rect1Y}" width="${timesWidth}" height="${strokeWidth}" fill="${color}" stroke="${stroke}"/>
          <rect x="${rect2X}" y="${rect2Y}" width="${strokeWidth}" height="${timesWidth}" fill="${color}" stroke="${stroke}"/>
        </svg>
      `;
     
      return svg;
    }

    function generateStarPoints(centerX, centerY, radius, numPoints) {
      const angleIncrement = (2 * Math.PI) / numPoints;
      const points = [];

      for (let i = 0; i < numPoints * 2; i++) {
        const angle = i * angleIncrement;
        const xOffset = Math.cos(angle) * radius;
        const yOffset = Math.sin(angle) * radius;

        if (i % 2 === 0) {
          points.push(`${centerX + xOffset},${centerY + yOffset}`);
        } else {
          points.push(`${centerX + xOffset * 0.5},${centerY + yOffset * 0.5}`);
        }
      }

      return points.join(' ');
    }


   


    function createFontPushpin(text, fontName, fontSizePx, color) {
        var c = document.createElement('canvas');
        var ctx = c.getContext('2d');

        //Define font style
        var font = fontSizePx + 'px ' + fontName;
        ctx.font = font

        //Resize canvas based on sie of text.
        var size = ctx.measureText(text);
        c.width = size.width;
        c.height = fontSizePx;

        //Reset font as it will be cleared by the resize.
        ctx.font = font;
        ctx.textBaseline = 'top';
        ctx.fillStyle = color;

        ctx.fillText(text, 0, 0);
        console.log(c.toDataURL());
        //const svg = `
       // <svg width="${svgWidth}" height="${svgHeight}" xmlns="http://www.w3.org/2000/svg">
        //  <rect x="${rect1X}" y="${rect1Y}" width="${timesWidth}" height="${strokeWidth}" fill="${color}" stroke="${color}"/>
         // <rect x="${rect2X}" y="${rect2Y}" width="${strokeWidth}" height="${timesWidth}" fill="${color}" stroke="${color}"/>
       // </svg>
   //   `;
   		const svgText = `<text x="0" y="${fontSizePx}" font-family="Arial" font-size="${fontSizePx}" fill="${color}">${text}</text>`;

        // const svgImage = `<image width="${c.width}" height="${fontSizePx}" x="0" y="0" xlink:href="${c.toDataURL()}" />`;
         const svg = `<svg width="${c.width*2}" height="${fontSizePx*2}" xmlns="http://www.w3.org/2000/svg">${svgText}</svg>`;

        return svg;
        //return new Microsoft.Maps.Pushpin(location, {
          //  icon: ,
           // anchor: new Microsoft.Maps.Point(c.width / 2, c.height / 2) //Align center of pushpin with location.
       // });
    }

    function drawLabel(event){
    	if(layerArr[currenrMarkupLayer] === undefined)
            createBlankLayer(currenrMarkupLayer)
	    isMarkupEnabled = true;
	    document.getElementById("geoStyler_symbolRow").style.display = "none";
	    document.getElementById("geoStyler_symbolSizeRow").style.display ="block";
	    openLabelTextModal();
    }

    function getLabelText(){
	    $('#labelTextModal').modal("hide");
	    console.log("getLabelText:"+document.getElementById("mapLabelPin").value);
	    if(document.getElementById("mapLabelPin").value!==undefined && document.getElementById("mapLabelPin").value.length>2){
    		openMarkupTools();
    	}else{
    		alert("please enter correct label name");
    	}
    }
    function createMarkupDetailsDisplay(msg){
    	var json = JSON.parse(msg);
    	console.log(json);
    	var arr=[];
    	var result="";
    	if(json.type!=="TextLabel"){
            	arr.push('<div class="row" style="padding-top:5px" id="shape_row">');
    			arr.push('<div class="col-md-4">Shape</div>');
    			arr.push('<div class="col-md-8"><label id="shape"></label></div></div>');	
       }
       	Object.keys(json).forEach(function (jsondata, index) {
    		if(jsondata === "label" || jsondata==="notes"){
    			var val = jsondata;
    			arr.push('<div class="row" style="padding-top:5px" id="'+val+'_row">');
    			arr.push('<div class="col-md-4">'+jsondata.charAt(0).toUpperCase() + jsondata.slice(1)+'</div>');
    			arr.push('<div class="col-md-8"><label id="'+val+'"></label></div></div>');
    		}
    	});
    	console.log(arr.toString().replaceAll(",", " ").replaceAll(">,<>", "><"));
    	result = arr.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
    	document.getElementById("customLayerDiv").innerHTML = "";
		document.getElementById("customLayerDiv").innerHTML = result;
    }

    function displayMarkupLayerData(json){
           var data = JSON.parse(json);
           console.log(data);
           var hashkey="";
           if (data.type!=="TextLabel"){
            	document.getElementById("shape_row").style.display = "block";
		        document.getElementById("shape").innerHTML = "<a href='javascript:editShapes("+JSON.stringify(data)+")'>Edit Shape</a>";
           }
           jQuery.each(data, function(ind, detail){
           			var selected = ind;
           			console.log("selected: "+selected)
           			if(ind === "hashKey"){
           				hashkey = detail;
           			}
	            	if(ind==="label" ||ind ==="notes"){
		            	console.log(detail+":"+ind);
		            	console.log(document.getElementById(ind));
		            	document.getElementById(ind+"_row").style.display = "block";
		            	if(detail !=="")
		            		document.getElementById(ind).innerHTML = "<a href='javascript:editData("+JSON.stringify(data)+")'>"+detail+"</a>";
		            	else
		            		document.getElementById(ind).innerHTML =  "<a href='javascript:editData("+JSON.stringify(data)+")'>Edit</a>";

	            	}
           });
    }

   function editShapes(shape){
   			//console.log(layerArr["TestMarkup_markup"]['layer'].getPrimitives());
   			$("#markupHashKey").val(shape.hashKey); 
   			$("#markupGeometry").val(shape.the_geom);
   			if(shape.type === "Triangle")
					selectedMarkupSVGTriangle();
				else if(shape.type === "Star")
					selectedMarkupSVGStar();
				else if(shape.type ==="Square")
					selectedMarkupSVGSquare();
				else if(shape.type ==="Cross")
					selectedMarkupSVGCross();
   			console.log(":::::::::::::::"+$("#markupHashKey").val());
   			if(shape.type.includes("Poly")){
		      		var polygon = shape.the_geom;//"POLYGON((-117.7338 34.06652,-117.72865 34.07007,-117.73208 34.0597,-117.73225 34.0597,-117.7338 34.06652))";
		      		shape =  new Microsoft.Maps.WellKnownText.read(polygon, { polygonOptions: { strokeColor: "#000", strokeThickness: 2 }});
		            tools.edit(shape);
		            isMarkupEnabled = true;
		            openMarkupTools(shape);
		            document.getElementById("geoStyler_symbolRow").style.display = "none";
		            document.getElementById("geoStyler_symbolSizeRow").style.display = "none";
		     
	        }
	        else{
	        	document.getElementById("geoStyler_symbolRow").style.display = "block";
	        	document.getElementById("geoStyler_symbolSizeRow").style.display = "block";
	       		isMarkupEnabled = true;
	        	openMarkupTools(shape);
	        }
	       
      }


      function editData(data){
      		console.log(data)
      		closeDetailsModal();
      		$('#markupEditDataModal').modal({
	             backdrop: false,
	             show: true
         	});
         	$("#markupHashKey").val(data.hashKey);
         	$("#editedLabel").val(data.label);
      		$("#editedNotes").val(data.notes);
      }

      function getEditedMarkupData(){
      	//alert(called);
      	$("#editedLabel").val();
      	$("#editedNotes").val();
      	console.log($("#markupHashKey").val())
      	console.log($("#editedLabel").val())
      	console.log($("#editedNotes").val())
      	 var postData = '{"hash": "' + $("#markupHashKey").val() + '", "label": "' + $("#editedLabel").val() + '", "notes": "' + $("#editedNotes").val() + '"}';
      	 $.ajax({
                    url: '/UpdateMarkupLayer',
                    type: 'POST',
                    data: postData,
                    success: function (msg) {
                        $('#markupEditDataModal').modal('hide');
                        $('#editedLabel').val("");
                        $('#editedNotes').val("");
                        $('#markupHashKey').val("");
                        map.entities.clear();
                        //console.log(msg);
                        //window.location.reload();
                        alert("Thank You! Markup Edited Successfully"); 
                    },
                    error: function (e) {
                        console.log(e)
                    }
                });
      }

      function createMarkupIcon(){
       	Microsoft.Maps.Events.addHandler(map, 'click', function (e) {
       		console.log("in here");
			var shape = document.getElementById("selectedSVG").name;
			var color = $("#selectedColor").html();
			var fontsize = $("#geoStyler_symbolSizeSelect-menu").val();
			var textLabel = document.getElementById("mapLabelPin").value;
			console.log(shape+":"+color+":"+fontsize);
			var stroke = color;
			var svg = "";
			if(shape!==undefined || textLabel!==undefined){
				if(shape === "Triangle")
					svg = getDynamicTriangleSVG(fontsize,color,stroke);
				else if(shape === "Star")
					svg = getDynamicStar(fontsize,color,stroke);
				else if(shape ==="Square")
					svg = getDynamicSquare(fontsize,color,stroke);
				else if(shape ==="Cross")
					svg = getDynamicCross(fontsize,color,stroke);

				if(textLabel!=undefined && (shape === undefined || shape===""))
					svg = createFontPushpin(textLabel, "Arial",fontsize,color);
				console.log(shape+":"+textLabel);
				console.log(svg);
				var svgHeight = svg.match('height=\"(\\d+)\"')[1];
				var svgWidth = svg.match('width=\"(\\d+)\"')[1];
				console.log(isMarkupEnabled == true);
				if(isMarkupEnabled == true){
						console.log(map.getBounds());
						var point = new Microsoft.Maps.Point(e.getX(), e.getY());
						var loc = e.target.tryPixelToLocation(point);
						var location = new Microsoft.Maps.Location(loc.latitude, loc.longitude);
						console.log(new Microsoft.Maps.Location(loc.latitude, loc.longitude));

						//creating pushpin from svg images
						var pin1 = new Microsoft.Maps.Pushpin(location, {
									  icon: svg,
									  anchor: new Microsoft.Maps.Point(svgWidth/2, svgHeight/2)
						});
						layerArr[currenrMarkupLayer]['layer'].add(pin1);
						//createCirclePushpin(new Microsoft.Maps.Location(loc.latitude, loc.longitude), 25, 'rgba(0, 0, 255, 0.5)');

					   //reading wkt string for creating json data
					    var wkt = Microsoft.Maps.WellKnownText.write(pin1);
	                    console.log(wkt);
					    var jsonData = "";
					    if((shape !== undefined || shape !== "") && (textLabel === undefined || textLabel===""))
					    	jsonData = '{"the_geom":"'+wkt+'", "label":"","notes":"","type":"'+shape+'","color":"'+color+'","fontsize":"'+fontsize+'"}';
					    else if((shape === undefined || shape === "") && (textLabel !== undefined || textLabel!==""))
					    	jsonData = '{"the_geom":"'+wkt+'", "label":"'+textLabel+'","notes":"","type":"TextLabel","color":"'+color+'","fontsize":"'+fontsize+'"}';
	                    console.log(jsonData);
	                    markupPointJson = jsonData;
	                   // console.log("current markup layer: "+demo77);
	                    //adding created pin to map layer
	                 	
					}
				}
			});
       }

     async function editMarkupIcon(){
       		var geom= $("#markupGeometry").val();
       		console.log(geom);
       		var shape = document.getElementById("selectedSVG").name;
			var color = $("#selectedColor").html();
			var fontsize = $("#geoStyler_symbolSizeSelect-menu").val();
			var textLabel = document.getElementById("mapLabelPin").value;
			console.log(shape+":"+color+":"+fontsize);
			var stroke = color;
			var svg = "";  
			var jsonData = "";
			if((shape!==undefined || textLabel!==undefined) && !geom.includes("POLY") &&  !geom.includes("LINE")){
				if(shape === "Triangle")
					svg = getDynamicTriangleSVG(fontsize,color,stroke);
				else if(shape === "Star")
					svg = getDynamicStar(fontsize,color,stroke);
				else if(shape ==="Square")
					svg = getDynamicSquare(fontsize,color,stroke);
				else if(shape ==="Cross")
					svg = getDynamicCross(fontsize,color,stroke);

				if(textLabel!=undefined && (shape === undefined || shape===""))
					svg = createFontPushpin(textLabel, "Arial",fontsize,color);
				console.log(shape+":"+textLabel);
				console.log(svg);
				var svgHeight = svg.match('height=\"(\\d+)\"')[1];
				var svgWidth = svg.match('width=\"(\\d+)\"')[1];
				console.log("isMarkupEnabled:  "+isMarkupEnabled);
				var pin1;
				if(isMarkupEnabled == true){
						//console.log(new Microsoft.Maps.WellKnownText.read($("#markupGeometry").val()));
						var pin = new Microsoft.Maps.WellKnownText.read($("#markupGeometry").val());
						var location = new Microsoft.Maps.Location(pin.geometry.y, pin.geometry.x);
						//creating pushpin from svg images
						pin1 = new Microsoft.Maps.Pushpin(location, {
									  icon: svg,
									  anchor: new Microsoft.Maps.Point(svgWidth/2, svgHeight/2)
						});
						clearLayer($("#markupHashKey").val());
	                 	layerArr[$("#markupHashKey").val()]['layer'].add(pin1);
	                    clearLayer(clicklayer["LayerName"]);
					    if((shape !== undefined || shape !== "") && (textLabel === undefined || textLabel===""))
					    	jsonData = '{"the_geom":"'+geom+'", "label":"","notes":"","type":"'+shape+'","FillColor":"'+color+'","fontSize":"'+fontsize+'"}';
					    else if((shape === undefined || shape === "") && (textLabel !== undefined || textLabel!==""))
					    	jsonData = '{"the_geom":"'+geom+'", "label":"'+textLabel+'","notes":"","type":"TextLabel","FillColor":"'+color+'","fontSize":"'+fontsize+'"}';
					    else if((shape === undefined || shape === "") && (textLabel === undefined || textLabel===""))
					    	jsonData = '{"the_geom":"'+geom+'", "label":"","notes":"","type":"Triangle","FillColor":"#59996b","fontSize":"8"}';
					    //Microsoft.Maps.Events.addHandler(pin1, 'click', function () { console.log(JSON.parse(JSON.stringify(jsonData)));getPushpinInfo(pin1,JSON.parse(JSON.stringify(jsonData))); });
					}
					markupPointJson = jsonData;
					jsonData = jsonData.replace('}',', "hash":"'+$("#markupHashKey").val()+'"}');
					console.log(jsonData);
					//getPushpinInfo(pin1,JSON.parse(JSON.stringify(jsonData)));
					console.log("markupPointJson: "+markupPointJson);
					if(markupPointJson!==""){
							  markupPointJson = markupPointJson.replace('}',', "hash":"'+$("#markupHashKey").val()+'"}')
				        	  console.log("UpdateMarkupShape: "+markupPointJson);
				        	 $.ajax({
						         url: '/UpdateMarkupShape',
						         type: "POST",
						         data: markupPointJson,
						              success: function(msg) {
						              console.log(msg);
						              getPushpinInfo(pin1,JSON.parse(msg));
						              //alert("Markup Created Successfully");
						         },
						         error: function(xhr, status, error) {
						                console.error(error);
						         }
					        });
					         //cleaning used inputs
						    isMarkupEnabled = false;
						    document.getElementById("selectedSVG").name ="";
							document.getElementById("mapLabelPin").value ="";
						    console.log("after change:"+ isMarkupEnabled);
							//cancleMarkupStyling();
							map.entities.clear();
					   		document.getElementById("markup-tools").style.display ="none";
					   		closeDetailsModal();
					   }
			}else{
				if(isMarkupEnabled === true){
						tools.finish(function (s) {
						console.log("in polygon section");
						console.log(s);
						if(s instanceof Microsoft.Maps.Polygon){
								s.setOptions({ fillColor: color });
								s.setOptions({ strokeColor: color });
						}
						//clearLayer($("#markupHashKey").val());
		                //layerArr[$("#markupHashKey").val()]['layer'].add(pin1);
		                var wkt = Microsoft.Maps.WellKnownText.write(s);
	                    console.log(wkt);
	                    if(color=== undefined || color===""){
	                    	color = "#59996b"
	                    }
	                    jsonData = '{"the_geom":"'+wkt+'", "label":"","notes":"","type":"Polygon","FillColor":"'+color+'","fontSize":""}';
	                    console.log($("#markupHashKey").val())
	                    clearLayer($("#markupHashKey").val());
	                    clearLayer(clicklayer["LayerName"]);
	                    //clearLayer('TestMarkup');
		                layerArr[$("#markupHashKey").val()]['layer'].add(s);
	                    console.log(jsonData);
	                    markupPointJson = jsonData;
				        jsonData = jsonData.replace('}',', "hash":"'+$("#markupHashKey").val()+'"}');
						console.log(jsonData);
						console.log("markupPointJson: "+markupPointJson);
						//getPushpinInfo(s,JSON.parse(JSON.stringify(jsonData)));
	                    //if ((s instanceof Microsoft.Maps.Polygon) || (s instanceof Microsoft.Maps.Polyline)) {
	                        // addLabelToPolygon(s);
	                    //}
	                    if(markupPointJson!==""){
							  markupPointJson = markupPointJson.replace('}',', "hash":"'+$("#markupHashKey").val()+'"}')
				        	  console.log("UpdateMarkupShape: "+markupPointJson);
				        	 $.ajax({
						         url: '/UpdateMarkupShape',
						         type: "POST",
						         data: markupPointJson,
						              success: function(msg) {
						              console.log(s)
						              getPushpinInfo(s,JSON.parse(msg));
						             // alert("Markup Created Successfully");
						         },
						         error: function(xhr, status, error) {
						                console.error(error);
						         }
					        });
					         //cleaning used inputs
						    isMarkupEnabled = false;
						    document.getElementById("selectedSVG").name ="";
							document.getElementById("mapLabelPin").value ="";
						    console.log("after change:"+ isMarkupEnabled);
						   // displayCustomLayerData("["+jsonData+"]");
							//cancleMarkupStyling($("#markupHashKey").val());
							map.entities.clear();
					   		document.getElementById("markup-tools").style.display ="none";
					   		closeDetailsModal();
					   }
               		 });
				}
			}
       }

       function getPushpinInfo(pin1,obj){
       		//console.log(pin1.geometry.x)
       		 Microsoft.Maps.Events.addHandler(pin1, 'click', function () { 
							var svg="";
							console.log(obj.type);
							var point = Microsoft.Maps.WellKnownText.read(obj.the_geom);
							if(!(obj.type).includes("Poly")){
								console.log(obj.the_geom);
		                    	var point = new Microsoft.Maps.Point(point.geometry.x, point.geometry.y);
								console.log(point)
								var location = new Microsoft.Maps.Location(point.y, point.x);
							    console.log(obj.type+":"+obj.fontSize+" : "+obj.FillColor)
							    var size = typeof obj.fontSize === "string" ? parseFloat(obj.fontSize) : obj.fontSize;
							    if(obj.type === "Triangle")
								svg = getDynamicTriangleSVG(size,obj.FillColor,"#000");
								else if(obj.type === "Star")
									svg = getDynamicStar(size,obj.FillColor,"#000");
								else if(obj.type ==="Square")
									svg = getDynamicSquare(size,obj.FillColor,"#000");
								else if(obj.type ==="Cross")
									svg = getDynamicCross(size,obj.FillColor,"#000");
								else if(obj.type==="TextLabel")
									svg = createFontPushpin(obj.label, "Arial",size,obj.FillColor);
								//console.log(svg);
								var svgHeight = svg.match('height=\"(\\d+)\"')[1];
								var svgWidth = svg.match('width=\"(\\d+)\"')[1];
								var pin1 =  new Microsoft.Maps.Pushpin(location, {
										 icon: svg,
										 anchor: new Microsoft.Maps.Point(svgWidth/2, svgHeight/2)
								});
		                 		layerArr[obj.hashKey]['layer'].add(pin1);
		                 		layerArr[obj.hashKey]['layer'].setZIndex(2001);
	                 		}
								$.ajax({
					              url: '/getPushpinInfo?hashkey=' +obj.hashKey,
					              type: "POST",
					              success: function(msg) {
					                console.log(msg)
					                createMarkupDetailsDisplay(msg);
					                displayMarkupLayerData(msg);
					                openDetailsModal();
					                document.getElementById("customLayer").style.display = "block";    
	                                document.getElementById("detailsModal").style.display = "none";     
					              },
					              error: function(xhr, status, error) {
					                console.error(error);
					              }
				           		});
							});
       }


   	function cancleMarkupStyling(){
   		console.log("selected Shape:"+$("#markupHashKey").val());
   		$.ajax({
			url: '/DeleteShapeFromMarkup?hash=' +$("#markupHashKey").val(),
			type: "POST",
			success: function(msg) {
				if(!msg.includes("File Not Exists")){
					console.log(msg)
					clearLayer(clicklayer["LayerName"]);
					clearLayer($("#markupHashKey").val());
					tools.finish(function (s) {console.log("done")})
				}
				map.entities.clear();
				document.getElementById("markup-tools").style.display ="none";
				closeDetailsModal();
			},
			error: function(xhr, status, error) {
				console.error(error);
			}
		});
    }

    function clearAllMarkups(){
    document.getElementById('id01').style.display='block';
    document.getElementById("deletebtn").onclick = (function(){
    	 if(layerArr[currenrMarkupLayer]!==undefined)
    	 	clearLayer(currenrMarkupLayer)
    	 $.ajax({
			url: '/DeleteMarkupFile?layer='+currenrMarkupLayer,
			type: "POST",
			success: function(msg) {
				if(!msg.includes("File Does Not Exist")){
					console.log(msg)
					//clearLayer($("#markupHashKey").val());
					currenrMarkupLayer = msg;
					clearLayer(clicklayer["LayerName"]);
					tools.finish(function (s) {console.log("done")})
					//location.reload();
					getMarkupLayerList();
				}
				map.entities.clear();
				document.getElementById("markup-tools").style.display ="none";
				closeDetailsModal();
			},
			error: function(xhr, status, error) {
				console.error(error);
			}
		});
		});
		document.getElementById("cancelbtn").onclick = (function(){
			document.getElementById('id01').style.display='none';
		}); 
    } 

    function deleteSelectedMarkup(){
    	document.getElementById('id01').style.display='block';
    	document.getElementById("deletebtn").onclick = (function(){ 
    		//alert("hello");
	    	var layer = $("#exportedMarkup").html();
	    	layer = layer.replace("_layer","");
	    	console.log(layer);
	    	if(layerArr[layer]!==undefined)
	    	 	clearLayer(layer)
	    	 $.ajax({
				url: '/DeleteMarkupFile?layer='+layer,
				type: "POST",
				success: function(msg) {
					if(!msg.includes("File Does Not Exist")){
						console.log(msg)
						//clearLayer($("#markupHashKey").val());
						currenrMarkupLayer = msg;
						clearLayer(clicklayer["LayerName"]);
						tools.finish(function (s) {console.log("done")})
						//location.reload();
						getMarkupLayerList();
						document.getElementById("exportedMarkup").innerHTML = msg;
						setSelectedMarkup(); 
					}
					map.entities.clear();
					document.getElementById("markup-tools").style.display ="none";
					closeDetailsModal();
					document.getElementById('id01').style.display='none';
			},
			error: function(xhr, status, error) {
				console.error(error);
			}
			});
		});
		document.getElementById("cancelbtn").onclick = (function(){
			document.getElementById('id01').style.display='none';
		}); 
    }

    function exportMarkupPoints(shapetype){
    	var layer = $("#exportedMarkup").html();
    	console.log(layer);
    	 $.ajax({
			url: '/ExportMarkupLayer?layer='+layer+'&shapetype='+shapetype,
			type: "POST",
			success: function(response) {
				console.log(response)
				if(!response.includes("Layer does not contain selected data")){
				var a = document.createElement('A');
						a.href = response;
						a.download = response.substr(response.lastIndexOf("\\")+1);
						document.body.appendChild(a);
						a.click();
						document.body.removeChild(a);
						}
						else{
						   alert(response);
						}
			},
			error: function(xhr, status, error) {
				console.error(error);
			}
		});
    }

    function openSaveSearchModal(){
    	if(currentSearchQuery === ""){
    		alert("Search Result Is Empty")
    	}else{
	    	$('#saveSearch').modal({
	                    backdrop: false,
	                    show: true
	        });
	        $('#saveSearch').removeClass('modal');
        }
    }

    function browseSavedSearchesModal(){
    	$('#savedLists').modal({
                    backdrop: false,
                    show: true
        });
    }
    function saveSearchData(){
    	var queryName = document.getElementById("savedSearchName").value;
    	console.log(queryName);
    	console.log(currentSearchQuery);

    	//else{
	    	if(queryName.length > 3 ){

		    	 $.ajax({
					url: '/SaveSearchData?data='+currentSearchQuery+'&name='+queryName,
					type: "POST",
					success: function(response) {
						console.log(response)
						if(response.includes("already exists")){
							alert(response);
							$('#saveSearch').modal('hide');
	                		$('#saveSearch').addClass('modal');
						}else{
							alert("Search Result Saved Successfully");
							$('#saveSearch').modal('hide');
	                		$('#saveSearch').addClass('modal');
						}
						currentSearchQuery = "";
					},
					error: function(xhr, status, error) {
						console.error(error);
					}
				});
			}else{
				alert("Search Name Should Be More Than 3 Characters in Length");
					//$('#saveSearch').modal('hide');
	                //$('#saveSearch').addClass('modal');
			}
		//}
    }


    function openAdvancedMeasure(){
                clearShapes();
                console.log("openAdvancedMeasure");
                document.getElementById("areaSum").textContent = areaSum + ".00 sqft";
                $('#advancedMeasureModal').modal({
                     backdrop: false,
                     show: true
                 });
                $('.modal-content').resizable({
                    minHeight: 300,
                    minWidth: 300
                });
                $("#advancedMeasureModal").removeClass("modal fade");
            }
                
            function closeAdvancedMeasure() {
                $('#advancedMeasureModal').modal('hide');
                $('#advancedMeasureModal').addClass('modal');
            }

            var n=1;
            const listsSet = new Set();
			function displaySelectedList(){
				var selectedList = $('#browseList');
				console.log(selectedList.val());
				if(!listsSet.has(selectedList.val())){
					$.ajax({
						url: '/GetSearchQueryDataForSavedLists?name='+selectedList.val(),
						type: "POST",
						success: function(response) {
									var jsonData = response;
									console.log(response);
									//const dropdown = document.getElementById("saveResultList");
		                         	const menuList = document.getElementById("ex1");
		                       		//const selectedOption = dropdown.options[dropdown.selectedIndex];
									n++;
		                    	 	var optionText = selectedList.val();
	                                //selectedOptions.push(optionText);
	                                const listItem2 = document.createElement('li');
	                                listItem2.setAttribute('class', 'nav-item');
	                                listItem2.setAttribute('role', 'presentation');
	                                listItem2.setAttribute('id','mainTab'+n);                
	                                const listItem = document.createElement('a');
	                                listItem.setAttribute('id', 'ex1-tab-'+n);
	                                listItem.setAttribute('class', 'btn btn-primary list-content-button');
	                                listItem.setAttribute('data-toggle', 'tab');
	                                listItem.setAttribute('href', '#ex1-tabs0-'+n);
	                                listItem.setAttribute('role', 'tab');
	                                listItem.setAttribute('aria-controls', 'ex1-tab0-'+n);
	                                listItem.setAttribute('aria-selected', 'true');
	                                listItem.setAttribute('style', 'margin-right: 4px;');
	                                listItem.setAttribute('onclick', 'deleteList(this.id)');
	                                listItem.innerHTML = "Loading.." ;
	                                const tableList = document.getElementById("ex1-content");
                                   const divTag = document.createElement('div');
                                   divTag.setAttribute('class', 'tab-pane fade');
                                   divTag.setAttribute('id', 'ex1-tabs0-'+n);

                                const tableTag = document.createElement('table');
                                const theadTag = document.createElement('thead');
                                const trTag = document.createElement('tr');
                                const thTag = document.createElement('th');
                                const tbodyTag = document.createElement('tbody');
                                tableTag.setAttribute('id', 'ex1-tabs-'+n);
                                tableTag.setAttribute('role', 'tabpanel');
                                tableTag.setAttribute('aria-labelledby', 'ex1-tab0-'+n);
                                tableTag.setAttribute('class', 'table table-striped table-bordered table-sm');
                                tableTag.setAttribute('cellspacing', '0');
                                tableTag.setAttribute('width', '100%');
                                tableTag.setAttribute('max-height', '150%');
                                trTag.setAttribute('id', 'listHeader'+n);
                                tbodyTag.setAttribute('id', 'tableBody'+n);
                                
                                tbodyTag.setAttribute('style', 'margin-bottom:50px!important');
                                theadTag.appendChild(trTag);
                                tableTag.appendChild(theadTag);
                                tableTag.appendChild(tbodyTag);
                                divTag.appendChild(tableTag);
                                tableList.appendChild(divTag);
                                listItem2.appendChild(listItem);
	                            menuList.appendChild(listItem2);
	                            listsSet.add(selectedList.val());
	                             //$('#ex1-tabs0-'+n).addClass("active"); 
				               // $('#ex1-tabs0-'+n).addClass("in");
				               // $().trigger("click");
				               $('#ex1-tabs0-'+n).addClass("active").siblings().removeClass("active");  
				               $('#ex1-tabs0-'+n).addClass("in").siblings().removeClass("in");  
				               $('.nav-item a[href="#' + 'ex1-tabs0-'+n + '"]').tab('show');
                                //console.log("headerarr11:: "+headerarr);
                                var listHeaderId = 'listHeader'+n;
                                //document.getElementById(listHeaderId).innerHTML = headerarr.replaceAll(",", " ").replaceAll(">,<>", "><");
									$.ajax({
										url: 'GetSearchedData?data=' + encodeURIComponent(jsonData),
										type: "POST",
										success: function(response) {
											//console.log(response)
											layerArr[searchlayer["LayerName"]]['layer'].clear();
											map.setView({
					                            center: new Microsoft.Maps.Location(34.0561057604764, -117.704161576153),
					                            zoom: 13
					                        });
					                        searchRes = [];
					                        arr = [];
					                        centroidArray = [];
					                        //map.layers.clear();
					                       // map.entities.clear();
					                        //console.log(JSON.stringify(response));
					                        if (response.includes("premise")) {
				                            var k = 1;
				                            var data = JSON.parse(response);
				                            jQuery.each(data, function (i, val) {
				                                searchRes.push(val);
				                                //console.log(i);
				                                var premise = val.premise;
				                                var meterData = val.meters;
				                                var values = [];
				                                var allocValues = [];
				                                result = val.consumption;
				                                Object.keys(result).map(function (k) {
				                                    values.push(result[k]);
				                                });
				                                result = val.allocation;
				                                Object.keys(result).map(function (k) {
				                                    allocValues.push(result[k]);
				                                });
				                                //plotting premise boundaries on map
				                                Microsoft.Maps.loadModule('Microsoft.Maps.WellKnownText', function () {
				                                    var polygonD = Microsoft.Maps.WellKnownText.read(premise.the_geom.replace("LINESTRING", "MULTIPOLYGON"), { polygonOptions: { fillColor: "rgba(0,0,0,0)", strokeColor: "rgb(102, 255, 51)", strokeThickness: 2 } });
				                                    layerArr[searchlayer["LayerName"]]['layer'].add(polygonD);
				                                });
				                                k++;
					            	   		    
							                    
				                            });
				                            //console.log(JSON.stringify(searchRes));
				                            //generateList(JSON.stringify(searchRes));
				                            listItem.innerHTML = selectedList.val() + " (" + searchRes.length + " Records)" ;
				                            generateListNew(JSON.stringify(searchRes),'#ex1-tabs-'+n,'listHeader'+n,'ex1-tab-'+n);
				                           
				                        }
										},
										error: function(xhr, status, error) {
											console.error(error);
										}
									});

	                                
						},
						error: function(xhr, status, error) {
							console.error(error);
						}
					});
					 
				}else{
					alert("Already added to list.");
				}
			}


			function generateListNew(searchRes, TableId, listHeaderId, btnId){
            	   //console.log("from generate list: "+JSON.parse(searchRes))
            	   if(JSON.parse(searchRes).length >= 1){
            	   var arr = [];
            	   var k=0;

                   //for unit tool
                   var unit=document.getElementById("unit2").value
            	   jQuery.each(JSON.parse(searchRes), function (i, val) {
            	   		    //val = JSON.parse(JSON.stringify(val));
            	   		    //console.log(displayFields)
            	   		    var premise = val.premise;
            	   		    var metersData = val.meters;
            	   		    k = i+1;
            	   		    var rowidData = "tr_" + k;
            	   		    searchAssocitative[premise.premID] = { rowidData };
	            			if(!newConfigAvail){
                                console.log("unit here :: "+unit);
                                var cal1 = parseFloat(premise.Consumption);
                                var cal2 = parseFloat(premise.Allocation);
                                var resultUnitCal = unitCalculation(unit ,cal1, cal2);
                                console.log(resultUnitCal);
			                   	arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
                                arr.push('<td><div>' + k + '</div></td>');
                                arr.push('<td><div>' + premise.premID + '</div></td>');
                                arr.push('<td><div>' + premise.Customer + '</div></td>');
                                //      console.log(values[values.length-1]);
                                //arr.push('<td><div>' + formatNumber(parseFloat(premise.CorrArea).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(resultUnitCal.cal1).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(resultUnitCal.cal2).toFixed(2)) + '</div></td>');
                                arr.push('<td><div>' + formatNumber(parseFloat(premise.percentAllocation).toFixed(2))+'</div></td>');
                                arr.push('<td><div>' + val.meters.length + '</div></td>');
                                arr.push('</tr>');
		                   }
		                   else{
	                            arr.push("<tr onmouseover=\"ChangeBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onmouseout=\"RestoreBackgroundColor('" + premise.premID + "','tr_" + k + "')\" onclick=\"CreateDetailsData('" + premise.premID + "','tr_" + k + "')\" role=\"row\" id=\"tr_" + k + "\">");
			                    jQuery.each(configJson.PremiseModule, function (i, detail) {
			                    		{
			                          		 displayFields.forEach(function(val, j){
			                           		
				                             	if(val === detail.DisplayText && premise[detail.ColName]!==undefined){
                                                    //console.log("Not Config");
                                                    ///console.log(detail.ColName);
                                                    ///console.log(premise[detail.ColName]);
                                                    if(detail.ColName=="Consumption"){
                                                        var cal1 = parseFloat(premise[detail.ColName]);
                                                        var resultUnitCal = unitCalculation2(unit ,cal1);
                                                        premise[detail.ColName] = parseFloat(resultUnitCal.cal1);                
                                                    }
                                                    if(detail.ColName=="Allocation"){
                                                        var cal1 = parseFloat(premise[detail.ColName]);
                                                        var resultUnitCal = unitCalculation2(unit ,cal1);
                                                        premise[detail.ColName] = parseFloat(resultUnitCal.cal1);                
                                                    }				                             		//console.log(detail.RoundNumbersToDigits+":"+ detail.DisplayText+":"+ premise[detail.ColName]);
				                             		if(detail.RoundNumbersToDigits !== ""){
				                             			 arr.push('<td><div>' + formatNumber(parseFloat(premise[detail.ColName]).toFixed(2)) + '</div></td>')
				                             		}else{
				                             			 arr.push('<td><div>' + premise[detail.ColName] + '</div></td>');
				                             		}
				                             		}else if(val === detail.DisplayText && detail.LayerName!=="List"){
				                             			 arr.push('<td><div></div></td>');
				                             		}else if(val === detail.DisplayText  && detail.LayerName==="List"){
				                             			if(val === "Sr. No."){
			                           					arr.push('<td><div>' + k + '</div></td>');
							                           	}
							                           	else if(val == "Total Meters"){
							                             		arr.push('<td><div>' + metersData.length + '</div></td>');
							                           	}
				                             		}
				                             	});
			                             }
			                     });
			                     arr.push('</tr>');
			                     //console.log(arr);
			                    
	                   }

	            	   });
		            	  var table;
		              	  if ($.fn.dataTable.isDataTable(TableId)) {
                                   table = $(TableId).DataTable();
                                   table.destroy();
                          }
                          //console.log()
                          document.getElementById(listHeaderId).innerHTML = head.toString().replaceAll(",", " ").replaceAll(">,<>", "><");
                          $(TableId).find("tbody").html(arr.toString().replaceAll(", ", " ").replaceAll(">,<", "><"));
                          $(TableId).DataTable({
                                     "paging": false,
                                     "info": false,
                                     "scrollY": '300px',
                                     "scrollX":true,
                                     "scrollCollapse": true,
                                     "searching": true,
                                     "ordering": true
                          });
                      	  minimizeListModule(); 
	            	  }
	            	  //return arr.toString();

	            	     
            }

            function deleteList(listID)   
                {
                    console.log("entered in deleteList  "+listID);
                  
                }

            
           //MarkupLayer
            function getMarkupLayerList(){
		         $.ajax({
					url: '/getAllMarkupLayers',
					type: "POST",
					success: function(msg) {
						//console.log(JSON.parse(msg))
						var arr=[];
						$('#selectedMarkup').find('option').remove().end();
						//console.log(collection.length);
						i=0;
						jQuery.each(JSON.parse(msg), function (i, val) {
							//sconsole.log(i+":"+val)
							if(document.getElementById("layerId").innerHTML.includes(i+"_markuplayer"))
							document.getElementById(i+"_markuplayer").remove();
							var id = i+"_layer";
							//console.log(id);
							arr.push('<div class="panel panel-default" id="'+i+'_markuplayer">');
							arr.push('<div class="panel-heading" role="tab" id="'+i+'_panel">');
							arr.push('<h5 class="panel-title">');
							arr.push('<input class="form-check-input" type="checkbox" id="'+i+'_markup" name="'+i+'_markup" value="'+i+'_markup" >');
							arr.push('<label class="form-check-label">&nbsp;'+i.toUpperCase()+'</label>');
							arr.push('<a data-toggle="collapse" class="float-right" data-parent="#layerId" href="#'+i+'_panelBody" aria-expanded="false" aria-controls="'+i+'_panelBody"><i class="fa fa-caret-down"></i></a>');
							arr.push("<i class='float-right fa fa-clock-o'></i><i class='float-right fa fa-gear' data-toggle='markupexportpopover' data-placement='top' id='"+i+"_layer' onclick='openMarkupExportPopover("+JSON.stringify(id)+")'></i><i id='"+i+"_selectedMarkupEdit' class='float-right fa fa-pencil d-none'></i>");
							arr.push('</h5> </div>');
							arr.push('<div id="'+i+'_panelBody" class="panel-collapse collapse" role="tabpanel" aria-labelledby="'+i+'_panel">');
							arr.push('<div class="panel-body"></div></div></div>');

							$('#selectedMarkup').append('<option value="' + i + '">' + i + '</option>');
						});
						var allLayerList = document.getElementsByClassName("panel panel-default");
						for(let i=0; i< allLayerList.length;i++){
							var id = allLayerList[i].id;
							//console.log(id); 
							if(id.includes("_markuplayer"))
								allLayerList[i].remove();
						}
						//console.log(arr.toString().replaceAll(",", " "));
						//$(arr.toString().replaceAll(",", " ")).insertBefore('#basemap_layer');
						document.getElementById('basemap_layer').insertAdjacentHTML("beforebegin", arr.toString().replaceAll(",", " "))
						clickCheckboxes();
						$('[data-toggle="markupexportpopover"]').popover({
			                    html: true,
			                    content: function () {
			                        return $('#popover-content-markuplayer').html();
			                    }
			                }).on("mouseenter", function () {
			                    var _this = this;
			                    $("#exportedMarkup").html(_this.id); 
			                    $(this).popover("show");
			                    $(".popover").on("mouseleave", function () {
			                        $(_this).popover('hide');
			                    });
			                }).on("click", function () {
			                    var _this = this;
			                    $(this).popover("show");
			                    $(".popover").on("mouseleave", function () {
			                        $(_this).popover('hide');
			                    });
			                  
			                }).on("mouseleave", function () {
			                    var _this = this;
			                    setTimeout(function () {
			                        if (!$(".popover:hover").length) {
			                            $(_this).popover("hide");
			                        }
			                    }, 300);
			                });

					},
					error: function(xhr, status, error) {
						console.error(error);
					}
				});
            }

            function setSelectedMarkup(){
            	var layer = $("#exportedMarkup").html();
            	console.log(layer);
            	document.getElementById("selectedMarkup").value =  layer.replace("_layer","");
            	changeSelectedMarkup();
            }

    </script>
    <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-KN2CLSGHKL"></script>
	<script>
	    window.dataLayer = window.dataLayer || [];
	    function gtag() { dataLayer.push(arguments); }
	    gtag('js', new Date());

	    gtag('config', 'G-KN2CLSGHKL');
	</script>   


</div></body></html>
